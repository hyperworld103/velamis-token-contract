{
  "id": "a4747a43c26e4f00184d8f34855661ea",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.10",
  "solcLongVersion": "0.8.10+commit.fc410830",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/libs/Address.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { codehash := extcodehash(account) }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}"
      },
      "contracts/VELAMIS.sol": {
        "content": "import \"./libs/IERC20.sol\";\r\nimport \"./libs/SafeMath.sol\";\r\nimport \"./libs/Address.sol\";\r\nimport \"./libs/Context.sol\";\r\n\r\n// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.4;\r\n\r\ncontract Velamis is Context, IERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    address public constant ManageWallet = 0x6742e82826f03F69B46D86FF2Afaf870F9A188c6;\r\n    address public constant PrivSaleWallet = 0x2f609c920c78535bF3aE62B92ffb131Cb37b03EB;\r\n    address public constant PubSaleWallet = 0xd0BDc14f6457511655E2290c56FdAd5a3F96Ddea;\r\n    address public constant AdvisoryWallet = 0x1fa257b5aA21e21bD6fa0f421638661b8A422902;\r\n    address public constant TeamWallet = 0x7De8E2b7f921Ba243454B30406076a89FDf7c343;\r\n    address public constant EcoGrowthWallet = 0x5b58E5DF395F87Ce0cd2A677b9a48Cbb7cB3a843;\r\n    address public constant CompanyWallet = 0x333431Cdae737Cd1BF6ad26C22e443700710d819;\r\n    address public constant TreasuryWallet = 0xA9ED9C85A7Cc10ED3Cb439934a25D737C6b8d006;\r\n    address public constant StakingRewardWallet = 0x44a7CC9762C267180e0E09d56a84D70629258e29;\r\n    address public constant PauseWallet = 0x13200C0FAC543e5A7f85791e65Bea038fE6eE25d;\r\n\r\n    uint public constant PrivSalePercent = 5;\r\n    uint public constant PubSalePercent = 10;\r\n    uint public constant AdvisoryPercent = 5;\r\n    uint public constant TeamPercent = 5;\r\n    uint public constant EcoGrowthPercent = 10;\r\n    uint public constant CompanyPercent = 20;\r\n    uint public constant TreasuryPercent = 25;\r\n    uint public constant StakingRewardPercent = 20;\r\n\r\n    uint[] public IssuancePercent = [\r\n        2222, 2397, 3040, 3294, 4253, 4507, 5441, \r\n        5623, 6434, 6615, 7328, 7455, 8015, 8142, \r\n        8690, 8781, 9234, 9807, 9879, 9952, 10000\r\n    ];\r\n\r\n    mapping(address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n    string private _name = \"VELAMIS\";\r\n    string private _symbol = \"VEL\";\r\n    uint8 private _decimals = 18;\r\n    uint256 private _totalSupply;\r\n    uint256 private _marketCap;\r\n    bool[] private _distributed; \r\n\r\n    uint256 public burnFee = 10; // Burn Fee\r\n    uint256 public constant intervalIssuance = 30 * 24 * 3600; \r\n    uint public issuanceIndex = 0;\r\n    uint256 public issuanceTime;\r\n    uint256 public burnTime;\r\n    bool public status;\r\n    uint256 public starttime;\r\n    uint256 public totalBurnedTokens;\r\n        \r\n    constructor () {\r\n        _marketCap = 300_000_000 * (10 ** _decimals);\r\n        _totalSupply = 0;\r\n        status = true;\r\n\r\n        issuanceTime = starttime;\r\n        issuanceIndex = 0;\r\n        totalBurnedTokens = 0;\r\n        _distributed = new bool[](8);\r\n        for(uint i = 0; i < 8; i++) _distributed[i] = false;\r\n    }\r\n\r\n    modifier onlyStopper() {\r\n        require(_msgSender() == PauseWallet, \"VELAMIS: caller isn't stopper of the contract\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyManager() {\r\n        require(_msgSender() == ManageWallet, \"VELAMIS: caller isn't manager of the contract\");\r\n        _;\r\n    }\r\n\r\n    modifier isRunning() {\r\n        require(status, \"VELAMIS: contract is stopped\");\r\n        _;\r\n    }\r\n\r\n    function pauseContract() external onlyStopper {\r\n        status = false;\r\n    }\r\n\r\n    function issueTokens() external onlyManager isRunning{\r\n        require(issuanceIndex <= 20, \"VELAMIS: token issuace is ended\");\r\n        require(block.timestamp >= issuanceTime, \"VELAMIS: it isn't the issuace time now\");\r\n        uint256 amount;\r\n        if(issuanceIndex > 0) amount = _marketCap * (IssuancePercent[issuanceIndex] - IssuancePercent[issuanceIndex -1]) / 10000;\r\n        else amount = _marketCap * IssuancePercent[issuanceIndex] / 10000;\r\n        _balances[ManageWallet] += amount;\r\n        _totalSupply += amount;\r\n        issuanceTime += intervalIssuance;\r\n        issuanceIndex = issuanceIndex + 1;\r\n        emit Transfer(address(0), ManageWallet, amount);\r\n    }\r\n\r\n    function distributeTokens(uint8 index) external onlyManager isRunning{\r\n        require(index < 8, \"VELAMIS: index must be less than 8.\");\r\n        require(!_distributed[index], \"VELAMIS: distribution with this index had already done.\");\r\n        address wallet;\r\n        uint percent;\r\n        if(index == 0) { wallet = PrivSaleWallet; percent = PrivSalePercent;}\r\n        else if(index == 1) { wallet = PubSaleWallet; percent = PubSalePercent;}\r\n        else if(index == 2) { wallet = AdvisoryWallet; percent = AdvisoryPercent;}\r\n        else if(index == 3) { wallet = TeamWallet; percent = TeamPercent;}\r\n        else if(index == 4) { wallet = EcoGrowthWallet; percent = EcoGrowthPercent;}\r\n        else if(index == 5) { wallet = CompanyWallet; percent = CompanyPercent;}\r\n        else if(index == 6) { wallet = TreasuryWallet; percent = TreasuryPercent;}\r\n        else if(index == 7) { wallet = StakingRewardWallet; percent = StakingRewardPercent;}\r\n\r\n        uint256 amount = _marketCap * percent / 100;\r\n        _transfer(ManageWallet, wallet, amount);\r\n    }\r\n\r\n    function burnTokens(uint256 amount) external onlyManager isRunning{\r\n        uint256 _burnamount = amount * burnFee / 100;\r\n        uint256 maxBurnedTokens = _marketCap * 50 / 100;\r\n        require(totalBurnedTokens < maxBurnedTokens, \"VELAMIS: tokens have already burned\");\r\n        if(totalBurnedTokens + _burnamount > maxBurnedTokens) _burnamount = maxBurnedTokens - totalBurnedTokens;\r\n        \r\n        _burn(ManageWallet, _burnamount);\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n    function transfer(address to, uint256 amount) public override isRunning returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override isRunning returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override isRunning returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public override isRunning returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public isRunning returns (bool)  {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public isRunning returns (bool)  {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = _allowances[owner][spender];\r\n        require(currentAllowance >= subtractedValue, \"VELAMIS: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal {\r\n        require(from != address(0), \"VELAMIS: transfer from the zero address\");\r\n        require(to != address(0), \"VELAMIS: transfer to the zero address\");\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"VELAMIS: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n        }\r\n        _balances[to] += amount;\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0), \"VELAMIS: burn from the zero address\");\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"VELAMIS: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal {\r\n        require(owner != address(0), \"VELAMIS: approve from the zero address\");\r\n        require(spender != address(0), \"VELAMIS: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"VELAMIS: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n}"
      },
      "contracts/libs/IERC20.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
      },
      "contracts/libs/SafeMath.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.10;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}"
      },
      "contracts/libs/Context.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/VELAMIS.sol": {
        "Velamis": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "AdvisoryPercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "AdvisoryWallet",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "CompanyPercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "CompanyWallet",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EcoGrowthPercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EcoGrowthWallet",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "IssuancePercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "ManageWallet",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PauseWallet",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PrivSalePercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PrivSaleWallet",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PubSalePercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PubSaleWallet",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "StakingRewardPercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "StakingRewardWallet",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "TeamPercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "TeamWallet",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "TreasuryPercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "TreasuryWallet",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "burnFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "burnTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "burnTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
                }
              ],
              "name": "decreaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "index",
                  "type": "uint8"
                }
              ],
              "name": "distributeTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
                }
              ],
              "name": "increaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "intervalIssuance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "issuanceIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "issuanceTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "issueTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pauseContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "starttime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "status",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalBurnedTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_201": {
                  "entryPoint": null,
                  "id": 201,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "checked_exp_helper": {
                  "entryPoint": 949,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint8": {
                  "entryPoint": 1204,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 1022,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 1228,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 1314,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_t_uint256": {
                  "entryPoint": 1284,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 927,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 1262,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2488:5",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:5",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "63:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "70:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "75:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "66:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "66:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "56:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "56:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "56:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "103:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "106:4:5",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "96:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "96:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "96:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "127:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "130:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "120:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "120:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "120:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "210:358:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "220:16:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "235:1:5",
                                "type": "",
                                "value": "1"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "224:7:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "245:16:5",
                              "value": {
                                "name": "power_1",
                                "nodeType": "YulIdentifier",
                                "src": "254:7:5"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:5:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "270:13:5",
                              "value": {
                                "name": "_base",
                                "nodeType": "YulIdentifier",
                                "src": "278:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "270:4:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "334:228:5",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "379:22:5",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nodeType": "YulIdentifier",
                                              "src": "381:16:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "381:18:5"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "381:18:5"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "354:4:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "368:1:5",
                                                  "type": "",
                                                  "value": "0"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "364:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "364:6:5"
                                            },
                                            {
                                              "name": "base",
                                              "nodeType": "YulIdentifier",
                                              "src": "372:4:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nodeType": "YulIdentifier",
                                            "src": "360:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "360:17:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "351:2:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "351:27:5"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "348:53:5"
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "440:29:5",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "442:25:5",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nodeType": "YulIdentifier",
                                                "src": "455:5:5"
                                              },
                                              {
                                                "name": "base",
                                                "nodeType": "YulIdentifier",
                                                "src": "462:4:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "451:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "451:16:5"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nodeType": "YulIdentifier",
                                              "src": "442:5:5"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "421:8:5"
                                        },
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "431:7:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "417:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "417:22:5"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "414:55:5"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "482:23:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "494:4:5"
                                        },
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "500:4:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "490:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "490:15:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "482:4:5"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "518:34:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "534:7:5"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "543:8:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nodeType": "YulIdentifier",
                                        "src": "530:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "530:22:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "518:8:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "303:8:5"
                                  },
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "313:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "300:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "300:21:5"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "322:3:5",
                                "statements": []
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "296:3:5",
                                "statements": []
                              },
                              "src": "292:270:5"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nodeType": "YulTypedName",
                            "src": "174:5:5",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "181:8:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "194:5:5",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "201:4:5",
                            "type": ""
                          }
                        ],
                        "src": "146:422:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "632:747:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "670:52:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "684:10:5",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "693:1:5",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "684:5:5"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "707:5:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "652:8:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "645:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "645:16:5"
                              },
                              "nodeType": "YulIf",
                              "src": "642:80:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "755:52:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "769:10:5",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "778:1:5",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "769:5:5"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "792:5:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "741:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "734:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "734:12:5"
                              },
                              "nodeType": "YulIf",
                              "src": "731:76:5"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "843:52:5",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "857:10:5",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "866:1:5",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "857:5:5"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "880:5:5"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "836:59:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "841:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "911:123:5",
                                    "statements": [
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "946:22:5",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "948:16:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "948:18:5"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "948:18:5"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "931:8:5"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "941:3:5",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nodeType": "YulIdentifier",
                                            "src": "928:2:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "928:17:5"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "925:43:5"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "981:25:5",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "994:8:5"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1004:1:5",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "990:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "990:16:5"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "981:5:5"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "1019:5:5"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "904:130:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "909:1:5",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "823:4:5"
                              },
                              "nodeType": "YulSwitch",
                              "src": "816:218:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1132:70:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1146:28:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "1159:4:5"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "1165:8:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "1155:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1155:19:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "1146:5:5"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "1187:5:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "1056:4:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1062:2:5",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "1053:2:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1053:12:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "1070:8:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1080:2:5",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "1067:2:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1067:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1049:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1049:35:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "1093:4:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1099:3:5",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "1090:2:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1090:13:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "1108:8:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1118:2:5",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "1105:2:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1105:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1086:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1086:36:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1046:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1046:77:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1043:159:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1211:57:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "1253:4:5"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "1259:8:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nodeType": "YulIdentifier",
                                  "src": "1234:18:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1234:34:5"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1215:7:5",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1224:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1313:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1315:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1315:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1315:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1283:7:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1300:1:5",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "1296:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1296:6:5"
                                      },
                                      {
                                        "name": "base_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1304:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "1292:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1292:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1280:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1280:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1277:58:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1344:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1357:7:5"
                                  },
                                  {
                                    "name": "base_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1366:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "1353:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1353:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "1344:5:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "603:4:5",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "609:8:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "622:5:5",
                            "type": ""
                          }
                        ],
                        "src": "573:806:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1452:72:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1462:56:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "1492:4:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "1502:8:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1512:4:5",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1498:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1498:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1471:20:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1471:47:5"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "1462:5:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "1423:4:5",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "1429:8:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "1442:5:5",
                            "type": ""
                          }
                        ],
                        "src": "1384:140:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1581:116:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1640:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1642:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1642:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1642:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "1612:1:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1605:6:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1605:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1598:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1598:17:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "1620:1:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1631:1:5",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "1627:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1627:6:5"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "1635:1:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "1623:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1623:14:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1617:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1617:21:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1594:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1594:45:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1591:71:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1671:20:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "1686:1:5"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "1689:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "1682:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1682:9:5"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "1671:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "1560:1:5",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "1563:1:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "1569:7:5",
                            "type": ""
                          }
                        ],
                        "src": "1529:168:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1734:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1751:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1758:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1763:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1754:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1754:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1744:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1744:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1744:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1791:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1794:4:5",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1784:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1784:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1784:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1815:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1818:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1808:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1808:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1808:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1702:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1866:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1883:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1890:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1895:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1886:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1886:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1876:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1876:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1876:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1923:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1926:4:5",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1916:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1916:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1916:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1947:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1950:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1940:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1940:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1940:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1834:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2013:88:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2044:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2046:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2046:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2046:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2029:5:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2040:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2036:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2036:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "2026:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2026:17:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2023:43:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2075:20:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2086:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2093:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2082:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2082:13:5"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "2075:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1995:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "2005:3:5",
                            "type": ""
                          }
                        ],
                        "src": "1966:135:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2161:325:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2171:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2185:1:5",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "2188:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2181:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2181:12:5"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2171:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2202:38:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "2232:4:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2238:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2228:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2228:12:5"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "2206:18:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2279:31:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2281:27:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "2295:6:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2303:4:5",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "2291:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2291:17:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2281:6:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "2259:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2252:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2252:26:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2249:61:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2369:111:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2390:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2397:3:5",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2402:10:5",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "2393:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2393:20:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2383:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2383:31:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2383:31:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2434:1:5",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2437:4:5",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2427:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2427:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2427:15:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2462:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2465:4:5",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2455:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2455:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2455:15:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "2325:18:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2348:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2356:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2345:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2345:14:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "2322:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2322:38:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2319:161:5"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "2141:4:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2150:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2106:380:5"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
                  "id": 5,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "6103206040526108ae608090815261095d60a052610be060c052610cde60e05261109d6101005261119b61012052611541610140526115f761016052611922610180526119d76101a052611ca06101c052611d1f6101e052611f4f61020052611fce610220526121f26102405261224d610260526124126102805261264f6102a0526126976102c0526126e06102e05261271061030052620000a690600090601562000213565b506040805180820190915260078082526656454c414d495360c81b6020909201918252620000d79160039162000269565b506040805180820190915260038082526215915360ea1b6020909201918252620001049160049162000269565b506005805460ff19166012179055600a6009819055600090553480156200012a57600080fd5b506005546200013e9060ff16600a620004b4565b6200014e906311e1a300620004cc565b60075560006006819055600d805460ff19166001179055600e54600b55600a819055600f55604080516008808252610120820190925290602082016101008036833750508151620001a7926008925060200190620002e6565b5060005b60088110156200020c57600060088281548110620001cd57620001cd620004ee565b90600052602060002090602091828204019190066101000a81548160ff0219169083151502179055508080620002039062000504565b915050620001ab565b506200055f565b82805482825590600052602060002090810192821562000257579160200282015b8281111562000257578251829061ffff1690559160200191906001019062000234565b506200026592915062000388565b5090565b828054620002779062000522565b90600052602060002090601f0160209004810192826200029b576000855562000257565b82601f10620002b657805160ff191683800117855562000257565b8280016001018555821562000257579182015b8281111562000257578251825591602001919060010190620002c9565b82805482825590600052602060002090601f01602090048101928215620002575791602002820160005b838211156200034f57835183826101000a81548160ff021916908315150217905550926020019260010160208160000104928301926001030262000310565b80156200037e5782816101000a81549060ff02191690556001016020816000010492830192600103026200034f565b5050620002659291505b5b8082111562000265576000815560010162000389565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003f6578160001904821115620003da57620003da6200039f565b80851615620003e857918102915b93841c9390800290620003ba565b509250929050565b6000826200040f57506001620004ae565b816200041e57506000620004ae565b8160018114620004375760028114620004425762000462565b6001915050620004ae565b60ff8411156200045657620004566200039f565b50506001821b620004ae565b5060208310610133831016604e8410600b841016171562000487575081810a620004ae565b620004938383620003b5565b8060001904821115620004aa57620004aa6200039f565b0290505b92915050565b6000620004c560ff841683620003fe565b9392505050565b6000816000190483118215151615620004e957620004e96200039f565b500290565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200051b576200051b6200039f565b5060010190565b600181811c908216806200053757607f821691505b602082108114156200055957634e487b7160e01b600052602260045260246000fd5b50919050565b611734806200056f6000396000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c8063677a887011610146578063a4be4b02116100c3578063db0bbaf311610087578063db0bbaf3146104de578063dd62ed3e146104f9578063ebf6cf9b1461050c578063f4dd662614610515578063fce589d814610530578063fe738f67146103db57600080fd5b8063a4be4b02146103c2578063a9059cbb146104af578063af6cb99e14610378578063d1d8523a146104c2578063d2267a6e146104cb57600080fd5b806380c763841161010a57806380c76384146104685780638b8cb114146104705780638da588971461048b57806395d89b4114610494578063a457c2d71461049c57600080fd5b8063677a8870146103e35780636d1b229d146103fe57806370a08231146104115780637ba06d781461043a5780637fc51ee11461045557600080fd5b8063313ce567116101df5780635084ae15116101a35780635084ae15146103a757806350d1197e146103c2578063555f323a146103ca57806356b05a2a1461037857806360ab5852146103d3578063676d0e8a146103db57600080fd5b8063313ce56714610363578063384d4241146103785780633950935114610380578063439766ce146103935780634b18e6421461039d57600080fd5b806318160ddd1161022657806318160ddd1461030d578063200d2ed21461031f57806323b872dd1461032c57806327a5331e1461033f5780632bdcdb781461035a57600080fd5b806306fdde0314610263578063087140d414610281578063095ea7b3146102b457806309c03d52146102d757806311ffeaf2146102f2575b600080fd5b61026b610539565b604051610278919061143b565b60405180910390f35b61029c736742e82826f03f69b46d86ff2afaf870f9a188c681565b6040516001600160a01b039091168152602001610278565b6102c76102c23660046114ac565b6105cb565b6040519015158152602001610278565b61029c7344a7cc9762c267180e0e09d56a84d70629258e2981565b61029c73a9ed9c85a7cc10ed3cb439934a25d737c6b8d00681565b6006545b604051908152602001610278565b600d546102c79060ff1681565b6102c761033a3660046114d6565b61060f565b61029c73d0bdc14f6457511655e2290c56fdad5a3f96ddea81565b610311600a5481565b60055460405160ff9091168152602001610278565b610311600581565b6102c761038e3660046114ac565b610656565b61039b6106b7565b005b61031162278d0081565b61029c732f609c920c78535bf3ae62b92ffb131cb37b03eb81565b610311601481565b610311600f5481565b61039b61073c565b610311600a81565b61029c737de8e2b7f921ba243454b30406076a89fdf7c34381565b61039b61040c366004611512565b6109ee565b61031161041f36600461152b565b6001600160a01b031660009081526001602052604090205490565b61029c735b58e5df395f87ce0cd2a677b9a48cbb7cb3a84381565b610311610463366004611512565b610b25565b610311601981565b61029c731fa257b5aa21e21bd6fa0f421638661b8a42290281565b610311600e5481565b61026b610b46565b6102c76104aa3660046114ac565b610b55565b6102c76104bd3660046114ac565b610c0b565b610311600b5481565b61039b6104d936600461154d565b610c3c565b61029c7313200c0fac543e5a7f85791e65bea038fe6ee25d81565b610311610507366004611570565b610f2f565b610311600c5481565b61029c73333431cdae737cd1bf6ad26c22e443700710d81981565b61031160095481565b606060038054610548906115a3565b80601f0160208091040260200160405190810160405280929190818152602001828054610574906115a3565b80156105c15780601f10610596576101008083540402835291602001916105c1565b820191906000526020600020905b8154815290600101906020018083116105a457829003601f168201915b5050505050905090565b600d5460009060ff166105f95760405162461bcd60e51b81526004016105f0906115de565b60405180910390fd5b33610605818585610f80565b5060019392505050565b600d5460009060ff166106345760405162461bcd60e51b81526004016105f0906115de565b336106408582856110a9565b61064b85858561111d565b506001949350505050565b600d5460009060ff1661067b5760405162461bcd60e51b81526004016105f0906115de565b3360008181526002602090815260408083206001600160a01b038816845290915290205461060590829086906106b290879061162b565b610f80565b337313200c0fac543e5a7f85791e65bea038fe6ee25d146107305760405162461bcd60e51b815260206004820152602d60248201527f56454c414d49533a2063616c6c65722069736e27742073746f70706572206f6660448201526c081d1a194818dbdb9d1c9858dd609a1b60648201526084016105f0565b600d805460ff19169055565b33736742e82826f03f69b46d86ff2afaf870f9a188c61461076f5760405162461bcd60e51b81526004016105f090611643565b600d5460ff166107915760405162461bcd60e51b81526004016105f0906115de565b6014600a5411156107e45760405162461bcd60e51b815260206004820152601f60248201527f56454c414d49533a20746f6b656e206973737561636520697320656e6465640060448201526064016105f0565b600b544210156108455760405162461bcd60e51b815260206004820152602660248201527f56454c414d49533a2069742069736e27742074686520697373756163652074696044820152656d65206e6f7760d01b60648201526084016105f0565b600a54600090156108c75761271060006001600a546108649190611690565b81548110610874576108746116a7565b90600052602060002001546000600a5481548110610894576108946116a7565b90600052602060002001546108a99190611690565b6007546108b691906116bd565b6108c091906116dc565b9050610904565b6127106000600a54815481106108df576108df6116a7565b90600052602060002001546007546108f791906116bd565b61090191906116dc565b90505b736742e82826f03f69b46d86ff2afaf870f9a188c6600090815260016020527fee8aaf4e0f85ec16b756f8a07b01337af9540e49c04a5b84e30b17212fdbc088805483929061095490849061162b565b92505081905550806006600082825461096d919061162b565b9250508190555062278d00600b6000828254610989919061162b565b9091555050600a5461099c90600161162b565b600a55604051818152736742e82826f03f69b46d86ff2afaf870f9a188c6906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350565b33736742e82826f03f69b46d86ff2afaf870f9a188c614610a215760405162461bcd60e51b81526004016105f090611643565b600d5460ff16610a435760405162461bcd60e51b81526004016105f0906115de565b6000606460095483610a5591906116bd565b610a5f91906116dc565b9050600060646007546032610a7491906116bd565b610a7e91906116dc565b905080600f5410610add5760405162461bcd60e51b815260206004820152602360248201527f56454c414d49533a20746f6b656e73206861766520616c7265616479206275726044820152621b995960ea1b60648201526084016105f0565b8082600f54610aec919061162b565b1115610b0257600f54610aff9082611690565b91505b610b20736742e82826f03f69b46d86ff2afaf870f9a188c6836112f2565b505050565b60008181548110610b3557600080fd5b600091825260209091200154905081565b606060048054610548906115a3565b600d5460009060ff16610b7a5760405162461bcd60e51b81526004016105f0906115de565b3360008181526002602090815260408083206001600160a01b038816845290915290205483811015610bfe5760405162461bcd60e51b815260206004820152602760248201527f56454c414d49533a2064656372656173656420616c6c6f77616e63652062656c6044820152666f77207a65726f60c81b60648201526084016105f0565b61064b8286868403610f80565b600d5460009060ff16610c305760405162461bcd60e51b81526004016105f0906115de565b3361060581858561111d565b33736742e82826f03f69b46d86ff2afaf870f9a188c614610c6f5760405162461bcd60e51b81526004016105f090611643565b600d5460ff16610c915760405162461bcd60e51b81526004016105f0906115de565b60088160ff1610610cf05760405162461bcd60e51b815260206004820152602360248201527f56454c414d49533a20696e646578206d757374206265206c657373207468616e604482015262101c1760e91b60648201526084016105f0565b60088160ff1681548110610d0657610d066116a7565b90600052602060002090602091828204019190069054906101000a900460ff1615610d995760405162461bcd60e51b815260206004820152603760248201527f56454c414d49533a20646973747269627574696f6e207769746820746869732060448201527f696e6465782068616420616c726561647920646f6e652e00000000000000000060648201526084016105f0565b60008060ff8316610dc35750732f609c920c78535bf3ae62b92ffb131cb37b03eb90506005610eec565b8260ff1660011415610dee575073d0bdc14f6457511655e2290c56fdad5a3f96ddea9050600a610eec565b8260ff1660021415610e195750731fa257b5aa21e21bd6fa0f421638661b8a42290290506005610eec565b8260ff1660031415610e445750737de8e2b7f921ba243454b30406076a89fdf7c34390506005610eec565b8260ff1660041415610e6f5750735b58e5df395f87ce0cd2a677b9a48cbb7cb3a8439050600a610eec565b8260ff1660051415610e9a575073333431cdae737cd1bf6ad26c22e443700710d81990506014610eec565b8260ff1660061415610ec5575073a9ed9c85a7cc10ed3cb439934a25d737c6b8d00690506019610eec565b8260ff1660071415610eec57507344a7cc9762c267180e0e09d56a84d70629258e29905060145b6000606482600754610efe91906116bd565b610f0891906116dc565b9050610f29736742e82826f03f69b46d86ff2afaf870f9a188c6848361111d565b50505050565b600d5460009060ff16610f545760405162461bcd60e51b81526004016105f0906115de565b506001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6001600160a01b038316610fe55760405162461bcd60e51b815260206004820152602660248201527f56454c414d49533a20617070726f76652066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016105f0565b6001600160a01b0382166110475760405162461bcd60e51b8152602060048201526024808201527f56454c414d49533a20617070726f766520746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105f0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006110b58484610f2f565b90506000198114610f2957818110156111105760405162461bcd60e51b815260206004820152601f60248201527f56454c414d49533a20696e73756666696369656e7420616c6c6f77616e63650060448201526064016105f0565b610f298484848403610f80565b6001600160a01b0383166111835760405162461bcd60e51b815260206004820152602760248201527f56454c414d49533a207472616e736665722066726f6d20746865207a65726f206044820152666164647265737360c81b60648201526084016105f0565b6001600160a01b0382166111e75760405162461bcd60e51b815260206004820152602560248201527f56454c414d49533a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016105f0565b6001600160a01b038316600090815260016020526040902054818110156112615760405162461bcd60e51b815260206004820152602860248201527f56454c414d49533a207472616e7366657220616d6f756e7420657863656564736044820152672062616c616e636560c01b60648201526084016105f0565b6001600160a01b0380851660009081526001602052604080822085850390559185168152908120805484929061129890849061162b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112e491815260200190565b60405180910390a350505050565b6001600160a01b0382166113545760405162461bcd60e51b815260206004820152602360248201527f56454c414d49533a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016105f0565b6001600160a01b038216600090815260016020526040902054818110156113c95760405162461bcd60e51b8152602060048201526024808201527f56454c414d49533a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016105f0565b6001600160a01b03831660009081526001602052604081208383039055600680548492906113f8908490611690565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161109c565b600060208083528351808285015260005b818110156114685785810183015185820160400152820161144c565b8181111561147a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146114a757600080fd5b919050565b600080604083850312156114bf57600080fd5b6114c883611490565b946020939093013593505050565b6000806000606084860312156114eb57600080fd5b6114f484611490565b925061150260208501611490565b9150604084013590509250925092565b60006020828403121561152457600080fd5b5035919050565b60006020828403121561153d57600080fd5b61154682611490565b9392505050565b60006020828403121561155f57600080fd5b813560ff8116811461154657600080fd5b6000806040838503121561158357600080fd5b61158c83611490565b915061159a60208401611490565b90509250929050565b600181811c908216806115b757607f821691505b602082108114156115d857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601c908201527f56454c414d49533a20636f6e74726163742069732073746f7070656400000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561163e5761163e611615565b500190565b6020808252602d908201527f56454c414d49533a2063616c6c65722069736e2774206d616e61676572206f6660408201526c081d1a194818dbdb9d1c9858dd609a1b606082015260800190565b6000828210156116a2576116a2611615565b500390565b634e487b7160e01b600052603260045260246000fd5b60008160001904831182151516156116d7576116d7611615565b500290565b6000826116f957634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122025b768c19558084e6bc281dc5da0639c1d272c97cde10bc2eea5a859e75dea7864736f6c634300080a0033",
              "opcodes": "PUSH2 0x320 PUSH1 0x40 MSTORE PUSH2 0x8AE PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH2 0x95D PUSH1 0xA0 MSTORE PUSH2 0xBE0 PUSH1 0xC0 MSTORE PUSH2 0xCDE PUSH1 0xE0 MSTORE PUSH2 0x109D PUSH2 0x100 MSTORE PUSH2 0x119B PUSH2 0x120 MSTORE PUSH2 0x1541 PUSH2 0x140 MSTORE PUSH2 0x15F7 PUSH2 0x160 MSTORE PUSH2 0x1922 PUSH2 0x180 MSTORE PUSH2 0x19D7 PUSH2 0x1A0 MSTORE PUSH2 0x1CA0 PUSH2 0x1C0 MSTORE PUSH2 0x1D1F PUSH2 0x1E0 MSTORE PUSH2 0x1F4F PUSH2 0x200 MSTORE PUSH2 0x1FCE PUSH2 0x220 MSTORE PUSH2 0x21F2 PUSH2 0x240 MSTORE PUSH2 0x224D PUSH2 0x260 MSTORE PUSH2 0x2412 PUSH2 0x280 MSTORE PUSH2 0x264F PUSH2 0x2A0 MSTORE PUSH2 0x2697 PUSH2 0x2C0 MSTORE PUSH2 0x26E0 PUSH2 0x2E0 MSTORE PUSH2 0x2710 PUSH2 0x300 MSTORE PUSH3 0xA6 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x15 PUSH3 0x213 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP1 DUP3 MSTORE PUSH7 0x56454C414D4953 PUSH1 0xC8 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xD7 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x269 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP1 DUP3 MSTORE PUSH3 0x159153 PUSH1 0xEA SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x104 SWAP2 PUSH1 0x4 SWAP2 PUSH3 0x269 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH1 0xA PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH3 0x13E SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH3 0x4B4 JUMP JUMPDEST PUSH3 0x14E SWAP1 PUSH4 0x11E1A300 PUSH3 0x4CC JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xE SLOAD PUSH1 0xB SSTORE PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xF SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x8 DUP1 DUP3 MSTORE PUSH2 0x120 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH2 0x100 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP DUP2 MLOAD PUSH3 0x1A7 SWAP3 PUSH1 0x8 SWAP3 POP PUSH1 0x20 ADD SWAP1 PUSH3 0x2E6 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH3 0x20C JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH3 0x1CD JUMPI PUSH3 0x1CD PUSH3 0x4EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH3 0x203 SWAP1 PUSH3 0x504 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x1AB JUMP JUMPDEST POP PUSH3 0x55F JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x257 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x257 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH2 0xFFFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x234 JUMP JUMPDEST POP PUSH3 0x265 SWAP3 SWAP2 POP PUSH3 0x388 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x277 SWAP1 PUSH3 0x522 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x29B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x257 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2B6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x257 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x257 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x257 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2C9 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x257 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x34F JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x310 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x37E JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x34F JUMP JUMPDEST POP POP PUSH3 0x265 SWAP3 SWAP2 POP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x265 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x389 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x3F6 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x3DA JUMPI PUSH3 0x3DA PUSH3 0x39F JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3E8 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x3BA JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x40F JUMPI POP PUSH1 0x1 PUSH3 0x4AE JUMP JUMPDEST DUP2 PUSH3 0x41E JUMPI POP PUSH1 0x0 PUSH3 0x4AE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x437 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x442 JUMPI PUSH3 0x462 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x4AE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x456 JUMPI PUSH3 0x456 PUSH3 0x39F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x4AE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x487 JUMPI POP DUP2 DUP2 EXP PUSH3 0x4AE JUMP JUMPDEST PUSH3 0x493 DUP4 DUP4 PUSH3 0x3B5 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x4AA JUMPI PUSH3 0x4AA PUSH3 0x39F JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4C5 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x3FE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x4E9 JUMPI PUSH3 0x4E9 PUSH3 0x39F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x51B JUMPI PUSH3 0x51B PUSH3 0x39F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x537 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x559 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1734 DUP1 PUSH3 0x56F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x677A8870 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xA4BE4B02 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDB0BBAF3 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDB0BBAF3 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xEBF6CF9B EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xF4DD6626 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xFCE589D8 EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xFE738F67 EQ PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA4BE4B02 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xAF6CB99E EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xD1D8523A EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xD2267A6E EQ PUSH2 0x4CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80C76384 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x80C76384 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x8B8CB114 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x8DA58897 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x677A8870 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x7BA06D78 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x7FC51EE1 EQ PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1DF JUMPI DUP1 PUSH4 0x5084AE15 GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x5084AE15 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x50D1197E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x555F323A EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x56B05A2A EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x60AB5852 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x676D0E8A EQ PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x384D4241 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x439766CE EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x4B18E642 EQ PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x226 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x27A5331E EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x2BDCDB78 EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x87140D4 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x9C03D52 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x11FFEAF2 EQ PUSH2 0x2F2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26B PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x143B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST PUSH2 0x29C PUSH20 0x44A7CC9762C267180E0E09D56A84D70629258E29 DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH20 0xA9ED9C85A7CC10ED3CB439934A25D737C6B8D006 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2C7 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x14D6 JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH2 0x29C PUSH20 0xD0BDC14F6457511655E2290C56FDAD5A3F96DDEA DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x6B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH20 0x2F609C920C78535BF3AE62B92FFB131CB37B03EB DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x73C JUMP JUMPDEST PUSH2 0x311 PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH20 0x7DE8E2B7F921BA243454B30406076A89FDF7C343 DUP2 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x1512 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x311 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x29C PUSH20 0x5B58E5DF395F87CE0CD2A677B9A48CBB7CB3A843 DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x1512 JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH20 0x1FA257B5AA21E21BD6FA0F421638661B8A422902 DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0xB55 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x311 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x154D JUMP JUMPDEST PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x29C PUSH20 0x13200C0FAC543E5A7F85791E65BEA038FE6EE25D DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH2 0x507 CALLDATASIZE PUSH1 0x4 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0xF2F JUMP JUMPDEST PUSH2 0x311 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH20 0x333431CDAE737CD1BF6AD26C22E443700710D819 DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x548 SWAP1 PUSH2 0x15A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x574 SWAP1 PUSH2 0x15A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x596 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x5F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x605 DUP2 DUP6 DUP6 PUSH2 0xF80 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST CALLER PUSH2 0x640 DUP6 DUP3 DUP6 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x64B DUP6 DUP6 DUP6 PUSH2 0x111D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x605 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x6B2 SWAP1 DUP8 SWAP1 PUSH2 0x162B JUMP JUMPDEST PUSH2 0xF80 JUMP JUMPDEST CALLER PUSH20 0x13200C0FAC543E5A7F85791E65BEA038FE6EE25D EQ PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A2063616C6C65722069736E27742073746F70706572206F66 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x81D1A194818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 EQ PUSH2 0x76F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x14 PUSH1 0xA SLOAD GT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20746F6B656E206973737561636520697320656E64656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0xB SLOAD TIMESTAMP LT ISZERO PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A2069742069736E2774207468652069737375616365207469 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6D65206E6F77 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x8C7 JUMPI PUSH2 0x2710 PUSH1 0x0 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x864 SWAP2 SWAP1 PUSH2 0x1690 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x874 JUMPI PUSH2 0x874 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x0 PUSH1 0xA SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x8A9 SWAP2 SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP PUSH2 0x904 JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x8DF JUMPI PUSH2 0x8DF PUSH2 0x16A7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0x901 SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0xEE8AAF4E0F85EC16B756F8A07B01337AF9540E49C04A5B84E30B17212FDBC088 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x954 SWAP1 DUP5 SWAP1 PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x96D SWAP2 SWAP1 PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x278D00 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x989 SWAP2 SWAP1 PUSH2 0x162B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0x99C SWAP1 PUSH1 0x1 PUSH2 0x162B JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST CALLER PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 EQ PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP4 PUSH2 0xA55 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0xA5F SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x7 SLOAD PUSH1 0x32 PUSH2 0xA74 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xF SLOAD LT PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20746F6B656E73206861766520616C726561647920627572 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B9959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST DUP1 DUP3 PUSH1 0xF SLOAD PUSH2 0xAEC SWAP2 SWAP1 PUSH2 0x162B JUMP JUMPDEST GT ISZERO PUSH2 0xB02 JUMPI PUSH1 0xF SLOAD PUSH2 0xAFF SWAP1 DUP3 PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0xB20 PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 DUP4 PUSH2 0x12F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x548 SWAP1 PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0xB7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A2064656372656173656420616C6C6F77616E63652062656C PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6F77207A65726F PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x64B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xF80 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST CALLER PUSH2 0x605 DUP2 DUP6 DUP6 PUSH2 0x111D JUMP JUMPDEST CALLER PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 EQ PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH2 0xC91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x8 DUP2 PUSH1 0xFF AND LT PUSH2 0xCF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20696E646578206D757374206265206C657373207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x101C17 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x8 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xD06 JUMPI PUSH2 0xD06 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20646973747269627574696F6E2077697468207468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E6465782068616420616C726561647920646F6E652E000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 AND PUSH2 0xDC3 JUMPI POP PUSH20 0x2F609C920C78535BF3AE62B92FFB131CB37B03EB SWAP1 POP PUSH1 0x5 PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0xDEE JUMPI POP PUSH20 0xD0BDC14F6457511655E2290C56FDAD5A3F96DDEA SWAP1 POP PUSH1 0xA PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0xE19 JUMPI POP PUSH20 0x1FA257B5AA21E21BD6FA0F421638661B8A422902 SWAP1 POP PUSH1 0x5 PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x3 EQ ISZERO PUSH2 0xE44 JUMPI POP PUSH20 0x7DE8E2B7F921BA243454B30406076A89FDF7C343 SWAP1 POP PUSH1 0x5 PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x4 EQ ISZERO PUSH2 0xE6F JUMPI POP PUSH20 0x5B58E5DF395F87CE0CD2A677B9A48CBB7CB3A843 SWAP1 POP PUSH1 0xA PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x5 EQ ISZERO PUSH2 0xE9A JUMPI POP PUSH20 0x333431CDAE737CD1BF6AD26C22E443700710D819 SWAP1 POP PUSH1 0x14 PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x6 EQ ISZERO PUSH2 0xEC5 JUMPI POP PUSH20 0xA9ED9C85A7CC10ED3CB439934A25D737C6B8D006 SWAP1 POP PUSH1 0x19 PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x7 EQ ISZERO PUSH2 0xEEC JUMPI POP PUSH20 0x44A7CC9762C267180E0E09D56A84D70629258E29 SWAP1 POP PUSH1 0x14 JUMPDEST PUSH1 0x0 PUSH1 0x64 DUP3 PUSH1 0x7 SLOAD PUSH2 0xEFE SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0xF08 SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP PUSH2 0xF29 PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 DUP5 DUP4 PUSH2 0x111D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20617070726F76652066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1047 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20617070726F766520746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B5 DUP5 DUP5 PUSH2 0xF2F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xF29 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20696E73756666696369656E7420616C6C6F77616E636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0xF29 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1183 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A207472616E736665722066726F6D20746865207A65726F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x61646472657373 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1261 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A207472616E7366657220616D6F756E742065786365656473 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2062616C616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1298 SWAP1 DUP5 SWAP1 PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x12E4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x13C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x13F8 SWAP1 DUP5 SWAP1 PUSH2 0x1690 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x109C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1468 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x144C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x147A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C8 DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F4 DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP3 POP PUSH2 0x1502 PUSH1 0x20 DUP6 ADD PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1546 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x158C DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x159A PUSH1 0x20 DUP5 ADD PUSH2 0x1490 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x15D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20636F6E74726163742069732073746F7070656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x163E JUMPI PUSH2 0x163E PUSH2 0x1615 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A2063616C6C65722069736E2774206D616E61676572206F66 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x81D1A194818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x16A2 PUSH2 0x1615 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x16D7 JUMPI PUSH2 0x16D7 PUSH2 0x1615 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xB7 PUSH9 0xC19558084E6BC281DC 0x5D LOG0 PUSH4 0x9C1D272C SWAP8 0xCD 0xE1 SIGNEXTEND 0xC2 0xEE 0xA5 0xA8 MSIZE 0xE7 0x5D 0xEA PUSH25 0x64736F6C634300080A00330000000000000000000000000000 ",
              "sourceMap": "1578:195:0:-:0;188:9275;1578:195;1621:4;188:9275;1578:195;;;1627:4;1578:195;;1633:4;1578:195;;1639:4;1578:195;;1645:4;1578:195;;1651:4;1578:195;;1657:4;1578:195;;1673:4;1578:195;;1679:4;1578:195;;1685:4;1578:195;;1691:4;1578:195;;1697:4;1578:195;;1703:4;1578:195;;1709:4;1578:195;;1725:4;1578:195;;1731:4;1578:195;;1737:4;1578:195;;1743:4;1578:195;;1749:4;1578:195;;1755:4;1578:195;;1761:5;1578:195;;;;-1:-1:-1;;1578:195:0;;:::i;:::-;-1:-1:-1;1912:32:0;;;;;;;;;;;;;-1:-1:-1;;;1912:32:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1951:30:0;;;;;;;;;;;;;-1:-1:-1;;;1951:30:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1988:28:0;;;-1:-1:-1;;1988:28:0;2014:2;1988:28;;;2153:2;2128:27;;;;1988:28;2239:29;;2444:327;;;;;;;;;-1:-1:-1;2504:9:0;;2498:15;;2504:9;;2498:2;:15;:::i;:::-;2483:31;;:11;:31;:::i;:::-;2470:10;:44;2540:1;2525:12;:16;;;2552:6;:13;;-1:-1:-1;;2552:13:0;-1:-1:-1;2552:13:0;;;2593:9;;2578:12;:24;2613:13;:17;;;2641;:21;2688:13;;;2699:1;2688:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;2673:28:0;;;;:12;;-1:-1:-1;2673:28:0;;;;:::i;:::-;;2716:6;2712:51;2732:1;2728;:5;2712:51;;;2758:5;2740:12;2753:1;2740:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;2735:3;;;;;:::i;:::-;;;;2712:51;;;;188:9275;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;188:9275:0;;;-1:-1:-1;188:9275:0;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;188:9275:0;;;-1:-1:-1;188:9275:0;;;;;;;;;;;;;;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:422;235:1;278:5;235:1;292:270;313:7;303:8;300:21;292:270;;;372:4;368:1;364:6;360:17;354:4;351:27;348:53;;;381:18;;:::i;:::-;431:7;421:8;417:22;414:55;;;451:16;;;;414:55;530:22;;;;490:15;;;;292:270;;;296:3;146:422;;;;;:::o;573:806::-;622:5;652:8;642:80;;-1:-1:-1;693:1:5;707:5;;642:80;741:4;731:76;;-1:-1:-1;778:1:5;792:5;;731:76;823:4;841:1;836:59;;;;909:1;904:130;;;;816:218;;836:59;866:1;857:10;;880:5;;;904:130;941:3;931:8;928:17;925:43;;;948:18;;:::i;:::-;-1:-1:-1;;1004:1:5;990:16;;1019:5;;816:218;;1118:2;1108:8;1105:16;1099:3;1093:4;1090:13;1086:36;1080:2;1070:8;1067:16;1062:2;1056:4;1053:12;1049:35;1046:77;1043:159;;;-1:-1:-1;1155:19:5;;;1187:5;;1043:159;1234:34;1259:8;1253:4;1234:34;:::i;:::-;1304:6;1300:1;1296:6;1292:19;1283:7;1280:32;1277:58;;;1315:18;;:::i;:::-;1353:20;;-1:-1:-1;573:806:5;;;;;:::o;1384:140::-;1442:5;1471:47;1512:4;1502:8;1498:19;1492:4;1471:47;:::i;:::-;1462:56;1384:140;-1:-1:-1;;;1384:140:5:o;1529:168::-;1569:7;1635:1;1631;1627:6;1623:14;1620:1;1617:21;1612:1;1605:9;1598:17;1594:45;1591:71;;;1642:18;;:::i;:::-;-1:-1:-1;1682:9:5;;1529:168::o;1834:127::-;1895:10;1890:3;1886:20;1883:1;1876:31;1926:4;1923:1;1916:15;1950:4;1947:1;1940:15;1966:135;2005:3;-1:-1:-1;;2026:17:5;;2023:43;;;2046:18;;:::i;:::-;-1:-1:-1;2093:1:5;2082:13;;1966:135::o;2106:380::-;2185:1;2181:12;;;;2228;;;2249:61;;2303:4;2295:6;2291:17;2281:27;;2249:61;2356:2;2348:6;2345:14;2325:18;2322:38;2319:161;;;2402:10;2397:3;2393:20;2390:1;2383:31;2437:4;2434:1;2427:15;2465:4;2462:1;2455:15;2319:161;;2106:380;;;:::o;:::-;188:9275:0;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@AdvisoryPercent_54": {
                  "entryPoint": null,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@AdvisoryWallet_27": {
                  "entryPoint": null,
                  "id": 27,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@CompanyPercent_63": {
                  "entryPoint": null,
                  "id": 63,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@CompanyWallet_36": {
                  "entryPoint": null,
                  "id": 36,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@EcoGrowthPercent_60": {
                  "entryPoint": null,
                  "id": 60,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@EcoGrowthWallet_33": {
                  "entryPoint": null,
                  "id": 33,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@IssuancePercent_94": {
                  "entryPoint": 2853,
                  "id": 94,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@ManageWallet_18": {
                  "entryPoint": null,
                  "id": 18,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@PauseWallet_45": {
                  "entryPoint": null,
                  "id": 45,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@PrivSalePercent_48": {
                  "entryPoint": null,
                  "id": 48,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@PrivSaleWallet_21": {
                  "entryPoint": null,
                  "id": 21,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@PubSalePercent_51": {
                  "entryPoint": null,
                  "id": 51,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@PubSaleWallet_24": {
                  "entryPoint": null,
                  "id": 24,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@StakingRewardPercent_69": {
                  "entryPoint": null,
                  "id": 69,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@StakingRewardWallet_42": {
                  "entryPoint": null,
                  "id": 42,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@TeamPercent_57": {
                  "entryPoint": null,
                  "id": 57,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@TeamWallet_30": {
                  "entryPoint": null,
                  "id": 30,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@TreasuryPercent_66": {
                  "entryPoint": null,
                  "id": 66,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@TreasuryWallet_39": {
                  "entryPoint": null,
                  "id": 39,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_approve_915": {
                  "entryPoint": 3968,
                  "id": 915,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_burn_871": {
                  "entryPoint": 4850,
                  "id": 871,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_msgSender_1175": {
                  "entryPoint": null,
                  "id": 1175,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_spendAllowance_957": {
                  "entryPoint": 4265,
                  "id": 957,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_transfer_818": {
                  "entryPoint": 4381,
                  "id": 818,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@allowance_620": {
                  "entryPoint": 3887,
                  "id": 620,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@approve_646": {
                  "entryPoint": 1483,
                  "id": 646,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@balanceOf_575": {
                  "entryPoint": null,
                  "id": 575,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@burnFee_123": {
                  "entryPoint": null,
                  "id": 123,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@burnTime_137": {
                  "entryPoint": null,
                  "id": 137,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@burnTokens_529": {
                  "entryPoint": 2542,
                  "id": 529,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@decimals_553": {
                  "entryPoint": null,
                  "id": 553,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@decreaseAllowance_754": {
                  "entryPoint": 2901,
                  "id": 754,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@distributeTokens_479": {
                  "entryPoint": 3132,
                  "id": 479,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@increaseAllowance_711": {
                  "entryPoint": 1622,
                  "id": 711,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@intervalIssuance_130": {
                  "entryPoint": null,
                  "id": 130,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@issuanceIndex_133": {
                  "entryPoint": null,
                  "id": 133,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@issuanceTime_135": {
                  "entryPoint": null,
                  "id": 135,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@issueTokens_330": {
                  "entryPoint": 1852,
                  "id": 330,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@name_537": {
                  "entryPoint": 1337,
                  "id": 537,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@pauseContract_244": {
                  "entryPoint": 1719,
                  "id": 244,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@starttime_141": {
                  "entryPoint": null,
                  "id": 141,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@status_139": {
                  "entryPoint": null,
                  "id": 139,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@symbol_545": {
                  "entryPoint": 2886,
                  "id": 545,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@totalBurnedTokens_143": {
                  "entryPoint": null,
                  "id": 143,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@totalSupply_562": {
                  "entryPoint": null,
                  "id": 562,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@transferFrom_680": {
                  "entryPoint": 1551,
                  "id": 680,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@transfer_601": {
                  "entryPoint": 3083,
                  "id": 601,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_address": {
                  "entryPoint": 5264,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 5419,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_address": {
                  "entryPoint": 5488,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_addresst_uint256": {
                  "entryPoint": 5334,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 5292,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 5394,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint8": {
                  "entryPoint": 5453,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 5179,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_067172393de2fbfccf7f9043d055364f933eedba15a427fc4665ebd2df7faa30__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_1abf800bd7f67e49e566c4424f249366db9e4e99c6af02e9931d098419e0dee2__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_1b586be3285ee4cb9a07db93bcbb862c2202f6f92cae4f6e66a59a5460faed12__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_2595855677c676e4636727198ac1099ded92471c34742cb5eb2b3fb6a9ca9e16__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 5699,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_346b7c130cc122b40091d563c5afefe794453347d91570c47aa60813616ca497__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_4f2b4d6643fac749402e773876b452789c45e64c3e4be91de8bfb340ab2a3510__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_63a184dc45135cccc4e8ef6425d1be95e8fac6bc63d7c6c4bd59794bd0107905__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_670428e70d473635c20c7ecf46404b96a5d849982ce1510df8418961dd6658df__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 5598,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_94061dca4c6f971d99a3a169b72c202a7a874bf37640204ae0d787eaea316846__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_a3374090caf4d66f81d1ae99d9c3b520c9572c894b9161fb2fd7049be81ba000__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_a56660a2fa2a38b06650005b121feeede389f68d9f8bc07310f1e6a0b72b82b4__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_bd40e61b488c01c22d36264138a37cb78a7710016dd3e4a0794cfa040c67148d__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c70a72069e15b047a7dbc6ba82c32a37bf4136e3229b2995b6db38db2700cc51__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c8b842bb44c4759885d129dd604218bbf56863f2908c9db5b4cf8e9b0fabcc36__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_ced4acb1db0ac1d95997dbacda05821353b65980cb3c29759cf75575af33e912__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_d26354a426fcb7cbad7f962831944edcc88389b48f05162453ec88acfc485236__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e33c5bcfce4f1a705a910009678f0324d364e0c2b1ea9e9b0ac297baf1531b79__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 5675,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 5852,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 5821,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 5776,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 5539,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 5653,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 5799,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:11172:5",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:5",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "135:476:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "145:12:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "155:2:5",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "149:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "173:9:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "184:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "166:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "166:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "166:21:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "196:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "216:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "210:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "210:13:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "200:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "243:9:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "254:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:18:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "259:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "232:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "232:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "232:34:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "275:10:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "284:1:5",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "279:1:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "344:90:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "373:9:5"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "384:1:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "369:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "369:17:5"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "388:2:5",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "365:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "365:26:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "407:6:5"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "415:1:5"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "403:3:5"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "403:14:5"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "419:2:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "399:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "399:23:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "393:5:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "393:30:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "358:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "358:66:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "358:66:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "305:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "308:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "302:13:5"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "316:19:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "318:15:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "327:1:5"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "330:2:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "323:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "323:10:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "318:1:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "298:3:5",
                                "statements": []
                              },
                              "src": "294:140:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "468:66:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "497:9:5"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "508:6:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "493:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "493:22:5"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "517:2:5",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "489:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "489:31:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "522:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "482:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "482:42:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "482:42:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "449:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "452:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "446:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "446:13:5"
                              },
                              "nodeType": "YulIf",
                              "src": "443:91:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "543:62:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "559:9:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "578:6:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "586:2:5",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "574:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "574:15:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "595:2:5",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "591:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "591:7:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "570:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "570:29:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "555:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "555:45:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "602:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "551:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "551:54:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "543:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "104:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "115:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "126:4:5",
                            "type": ""
                          }
                        ],
                        "src": "14:597:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "717:102:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "727:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "739:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "750:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "735:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "735:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "727:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "769:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "784:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "800:3:5",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "805:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "796:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "796:11:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "809:1:5",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "792:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "792:19:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "780:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "780:32:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "762:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "762:51:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "762:51:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "686:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "697:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "708:4:5",
                            "type": ""
                          }
                        ],
                        "src": "616:203:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "873:124:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "883:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "905:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "892:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "892:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "883:5:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "975:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "984:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "987:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "977:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "977:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "977:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "934:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "945:5:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "960:3:5",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "965:1:5",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "956:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "956:11:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "969:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "952:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "952:19:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "941:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "941:31:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "931:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "931:42:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "924:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "924:50:5"
                              },
                              "nodeType": "YulIf",
                              "src": "921:70:5"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "852:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "863:5:5",
                            "type": ""
                          }
                        ],
                        "src": "824:173:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1089:167:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1135:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1144:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1147:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1137:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1137:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1137:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1110:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1119:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1106:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1106:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1131:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1102:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1102:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1099:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1160:39:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1189:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1170:18:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1170:29:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1160:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1208:42:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1235:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1246:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1231:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1231:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1218:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1218:32:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1208:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1047:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1058:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1070:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1078:6:5",
                            "type": ""
                          }
                        ],
                        "src": "1002:254:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1356:92:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1366:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1378:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1389:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1374:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1374:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1366:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1408:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "1433:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1426:6:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1426:14:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1419:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1419:22:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1401:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1401:41:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1401:41:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1325:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1336:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1347:4:5",
                            "type": ""
                          }
                        ],
                        "src": "1261:187:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1554:76:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1564:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1576:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1587:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1572:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1572:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1564:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1606:9:5"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1617:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1599:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1599:25:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1599:25:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1523:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1534:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1545:4:5",
                            "type": ""
                          }
                        ],
                        "src": "1453:177:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1739:224:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1785:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1794:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1797:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1787:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1787:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1787:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1760:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1769:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1756:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1756:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1781:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1752:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1752:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1749:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1810:39:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1839:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1820:18:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1820:29:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1810:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1858:48:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1891:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1902:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1887:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1887:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1868:18:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1868:38:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1858:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1915:42:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1942:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1953:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1938:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1938:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1925:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1925:32:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1915:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1689:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1700:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1712:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1720:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1728:6:5",
                            "type": ""
                          }
                        ],
                        "src": "1635:328:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2065:87:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2075:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2087:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2098:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2083:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2083:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2075:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2117:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2132:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2140:4:5",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2128:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2128:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2110:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2110:36:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2110:36:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2034:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2045:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2056:4:5",
                            "type": ""
                          }
                        ],
                        "src": "1968:184:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2227:110:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2273:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2282:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2285:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2275:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2275:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2275:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2248:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2257:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2244:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2244:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2269:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2240:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2240:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2237:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2298:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2321:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2308:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2308:23:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2298:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2193:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2204:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2216:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2157:180:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2412:116:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2458:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2467:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2470:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2460:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2460:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2460:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2433:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2442:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2429:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2429:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2454:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2425:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2425:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2422:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2483:39:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2512:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2493:18:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2493:29:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2483:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2378:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2389:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2401:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2342:186:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2601:201:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2647:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2656:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2659:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2649:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2649:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2649:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2622:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2631:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2618:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2618:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2643:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2614:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2614:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2611:52:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2672:36:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2698:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2685:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2685:23:5"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2676:5:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2756:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2765:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2768:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2758:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2758:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2758:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2730:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2741:5:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2748:4:5",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2737:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2737:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2727:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2727:27:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2720:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2720:35:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2717:55:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2781:15:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2791:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2781:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2567:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2578:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2590:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2533:269:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2894:173:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2940:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2949:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2952:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2942:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2942:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2942:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2915:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2924:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2911:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2911:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2936:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2907:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2907:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2904:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2965:39:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2994:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2975:18:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2975:29:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2965:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3013:48:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3046:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3057:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3042:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3042:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3023:18:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3023:38:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3013:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2852:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2863:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2875:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2883:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2807:260:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3127:325:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3137:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3151:1:5",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "3154:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3147:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3147:12:5"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3137:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3168:38:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "3198:4:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3204:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3194:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3194:12:5"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "3172:18:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3245:31:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3247:27:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "3261:6:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3269:4:5",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "3257:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3257:17:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3247:6:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "3225:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3218:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3218:26:5"
                              },
                              "nodeType": "YulIf",
                              "src": "3215:61:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3335:111:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3356:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3363:3:5",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3368:10:5",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "3359:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3359:20:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3349:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3349:31:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3349:31:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3400:1:5",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3403:4:5",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3393:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3393:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3393:15:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3428:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3431:4:5",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3421:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3421:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3421:15:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "3291:18:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3314:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3322:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3311:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3311:14:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "3288:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3288:38:5"
                              },
                              "nodeType": "YulIf",
                              "src": "3285:161:5"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "3107:4:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3116:6:5",
                            "type": ""
                          }
                        ],
                        "src": "3072:380:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3631:178:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3648:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3659:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3641:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3641:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3641:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3682:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3693:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3678:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3678:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3698:2:5",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3671:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3671:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3671:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3721:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3732:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3717:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3717:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a20636f6e74726163742069732073746f70706564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3737:30:5",
                                    "type": "",
                                    "value": "VELAMIS: contract is stopped"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3710:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3710:58:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3710:58:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3777:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3789:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3800:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3785:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3785:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3777:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_670428e70d473635c20c7ecf46404b96a5d849982ce1510df8418961dd6658df__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3608:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3622:4:5",
                            "type": ""
                          }
                        ],
                        "src": "3457:352:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3846:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3863:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3870:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3875:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3866:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3866:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3856:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3856:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3856:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3903:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3906:4:5",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3896:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3896:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3896:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3927:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3930:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3920:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3920:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3920:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3814:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3994:80:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4021:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4023:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4023:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4023:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4010:1:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "4017:1:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4013:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4013:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4007:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4007:13:5"
                              },
                              "nodeType": "YulIf",
                              "src": "4004:39:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4052:16:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4063:1:5"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4066:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4059:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4059:9:5"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "4052:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "3977:1:5",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "3980:1:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "3986:3:5",
                            "type": ""
                          }
                        ],
                        "src": "3946:128:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4253:235:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4270:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4281:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4263:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4263:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4263:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4304:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4315:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4300:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4300:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4320:2:5",
                                    "type": "",
                                    "value": "45"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4293:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4293:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4293:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4343:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4354:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4339:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4339:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a2063616c6c65722069736e27742073746f70706572206f66",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4359:34:5",
                                    "type": "",
                                    "value": "VELAMIS: caller isn't stopper of"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4332:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4332:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4332:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4414:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4425:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4410:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4410:18:5"
                                  },
                                  {
                                    "hexValue": "2074686520636f6e7472616374",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4430:15:5",
                                    "type": "",
                                    "value": " the contract"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4403:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4403:43:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4403:43:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4455:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4467:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4478:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4463:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4463:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4455:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_94061dca4c6f971d99a3a169b72c202a7a874bf37640204ae0d787eaea316846__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4230:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4244:4:5",
                            "type": ""
                          }
                        ],
                        "src": "4079:409:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4667:235:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4684:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4695:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4677:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4677:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4677:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4718:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4729:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4714:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4714:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4734:2:5",
                                    "type": "",
                                    "value": "45"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4707:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4707:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4707:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4757:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4768:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4753:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4753:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a2063616c6c65722069736e2774206d616e61676572206f66",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4773:34:5",
                                    "type": "",
                                    "value": "VELAMIS: caller isn't manager of"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4746:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4746:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4746:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4828:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4839:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4824:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4824:18:5"
                                  },
                                  {
                                    "hexValue": "2074686520636f6e7472616374",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4844:15:5",
                                    "type": "",
                                    "value": " the contract"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4817:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4817:43:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4817:43:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4869:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4881:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4892:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4877:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4877:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4869:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_2595855677c676e4636727198ac1099ded92471c34742cb5eb2b3fb6a9ca9e16__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4644:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4658:4:5",
                            "type": ""
                          }
                        ],
                        "src": "4493:409:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5081:181:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5098:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5109:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5091:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5091:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5091:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5132:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5143:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5128:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5128:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5148:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5121:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5121:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5121:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5171:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5182:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5167:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5167:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a20746f6b656e206973737561636520697320656e646564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5187:33:5",
                                    "type": "",
                                    "value": "VELAMIS: token issuace is ended"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5160:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5160:61:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5160:61:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5230:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5242:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5253:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5238:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5238:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5230:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_bd40e61b488c01c22d36264138a37cb78a7710016dd3e4a0794cfa040c67148d__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5058:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5072:4:5",
                            "type": ""
                          }
                        ],
                        "src": "4907:355:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5441:228:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5458:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5469:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5451:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5451:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5451:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5492:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5503:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5488:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5488:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5508:2:5",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5481:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5481:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5481:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5531:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5542:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5527:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5527:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a2069742069736e2774207468652069737375616365207469",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5547:34:5",
                                    "type": "",
                                    "value": "VELAMIS: it isn't the issuace ti"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5520:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5520:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5520:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5602:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5613:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5598:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5598:18:5"
                                  },
                                  {
                                    "hexValue": "6d65206e6f77",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5618:8:5",
                                    "type": "",
                                    "value": "me now"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5591:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5591:36:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5591:36:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5636:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5648:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5659:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5644:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5644:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5636:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_067172393de2fbfccf7f9043d055364f933eedba15a427fc4665ebd2df7faa30__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5418:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5432:4:5",
                            "type": ""
                          }
                        ],
                        "src": "5267:402:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5723:76:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5745:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5747:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5747:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5747:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5739:1:5"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "5742:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5736:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5736:8:5"
                              },
                              "nodeType": "YulIf",
                              "src": "5733:34:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5776:17:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5788:1:5"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "5791:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5784:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5784:9:5"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "5776:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "5705:1:5",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "5708:1:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "5714:4:5",
                            "type": ""
                          }
                        ],
                        "src": "5674:125:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5836:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5853:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5860:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5865:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5856:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5856:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5846:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5846:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5846:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5893:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5896:4:5",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5886:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5886:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5886:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5917:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5920:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5910:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5910:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5910:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5804:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5988:116:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6047:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6049:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6049:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6049:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "6019:1:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "6012:6:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6012:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "6005:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6005:17:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "6027:1:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6038:1:5",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "6034:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6034:6:5"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "6042:1:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "6030:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6030:14:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "6024:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6024:21:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6001:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6001:45:5"
                              },
                              "nodeType": "YulIf",
                              "src": "5998:71:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6078:20:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6093:1:5"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "6096:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "6089:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6089:9:5"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "6078:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "5967:1:5",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "5970:1:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "5976:7:5",
                            "type": ""
                          }
                        ],
                        "src": "5936:168:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6155:171:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6186:111:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6207:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "6214:3:5",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "6219:10:5",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "6210:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6210:20:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6200:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6200:31:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6200:31:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6251:1:5",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6254:4:5",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6244:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6244:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6244:15:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6279:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6282:4:5",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6272:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6272:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6272:15:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "6175:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6168:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6168:9:5"
                              },
                              "nodeType": "YulIf",
                              "src": "6165:132:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6306:14:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6315:1:5"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "6318:1:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "6311:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6311:9:5"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "6306:1:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "6140:1:5",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "6143:1:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "6149:1:5",
                            "type": ""
                          }
                        ],
                        "src": "6109:217:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6505:225:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6522:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6533:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6515:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6515:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6515:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6556:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6567:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6552:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6552:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6572:2:5",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6545:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6545:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6545:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6595:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6606:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6591:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6591:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a20746f6b656e73206861766520616c726561647920627572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6611:34:5",
                                    "type": "",
                                    "value": "VELAMIS: tokens have already bur"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6584:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6584:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6584:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6666:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6677:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6662:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6662:18:5"
                                  },
                                  {
                                    "hexValue": "6e6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6682:5:5",
                                    "type": "",
                                    "value": "ned"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6655:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6655:33:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6655:33:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6697:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6709:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6720:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6705:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6705:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6697:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_346b7c130cc122b40091d563c5afefe794453347d91570c47aa60813616ca497__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6482:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6496:4:5",
                            "type": ""
                          }
                        ],
                        "src": "6331:399:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6909:229:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6926:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6937:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6919:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6919:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6919:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6960:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6971:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6956:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6956:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6976:2:5",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6949:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6949:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6949:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6999:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7010:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6995:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6995:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a2064656372656173656420616c6c6f77616e63652062656c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7015:34:5",
                                    "type": "",
                                    "value": "VELAMIS: decreased allowance bel"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6988:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6988:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6988:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7070:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7081:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7066:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7066:18:5"
                                  },
                                  {
                                    "hexValue": "6f77207a65726f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7086:9:5",
                                    "type": "",
                                    "value": "ow zero"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7059:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7059:37:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7059:37:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7105:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7117:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7128:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7113:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7113:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7105:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a56660a2fa2a38b06650005b121feeede389f68d9f8bc07310f1e6a0b72b82b4__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6886:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6900:4:5",
                            "type": ""
                          }
                        ],
                        "src": "6735:403:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7317:225:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7334:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7345:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7327:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7327:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7327:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7368:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7379:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7364:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7364:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7384:2:5",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7357:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7357:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7357:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7407:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7418:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7403:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7403:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a20696e646578206d757374206265206c657373207468616e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7423:34:5",
                                    "type": "",
                                    "value": "VELAMIS: index must be less than"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7396:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7396:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7396:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7478:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7489:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7474:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7474:18:5"
                                  },
                                  {
                                    "hexValue": "20382e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7494:5:5",
                                    "type": "",
                                    "value": " 8."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7467:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7467:33:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7467:33:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7509:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7521:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7532:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7517:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7517:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7509:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1b586be3285ee4cb9a07db93bcbb862c2202f6f92cae4f6e66a59a5460faed12__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7294:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7308:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7143:399:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7721:245:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7738:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7749:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7731:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7731:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7731:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7772:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7783:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7768:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7768:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7788:2:5",
                                    "type": "",
                                    "value": "55"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7761:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7761:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7761:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7811:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7822:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7807:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7807:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a20646973747269627574696f6e2077697468207468697320",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7827:34:5",
                                    "type": "",
                                    "value": "VELAMIS: distribution with this "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7800:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7800:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7800:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7882:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7893:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7878:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7878:18:5"
                                  },
                                  {
                                    "hexValue": "696e6465782068616420616c726561647920646f6e652e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7898:25:5",
                                    "type": "",
                                    "value": "index had already done."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7871:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7871:53:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7871:53:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7933:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7945:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7956:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7941:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7941:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7933:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c70a72069e15b047a7dbc6ba82c32a37bf4136e3229b2995b6db38db2700cc51__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7698:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7712:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7547:419:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8145:228:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8162:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8173:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8155:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8155:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8155:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8196:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8207:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8192:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8192:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8212:2:5",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8185:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8185:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8185:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8235:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8246:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8231:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8231:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a20617070726f76652066726f6d20746865207a65726f2061",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8251:34:5",
                                    "type": "",
                                    "value": "VELAMIS: approve from the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8224:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8224:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8224:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8306:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8317:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8302:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8302:18:5"
                                  },
                                  {
                                    "hexValue": "646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8322:8:5",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8295:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8295:36:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8295:36:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8340:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8352:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8363:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8348:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8348:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8340:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4f2b4d6643fac749402e773876b452789c45e64c3e4be91de8bfb340ab2a3510__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8122:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8136:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7971:402:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8552:226:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8569:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8580:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8562:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8562:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8562:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8603:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8614:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8599:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8599:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8619:2:5",
                                    "type": "",
                                    "value": "36"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8592:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8592:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8592:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8642:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8653:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8638:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8638:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a20617070726f766520746f20746865207a65726f20616464",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8658:34:5",
                                    "type": "",
                                    "value": "VELAMIS: approve to the zero add"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8631:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8631:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8631:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8713:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8724:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8709:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8709:18:5"
                                  },
                                  {
                                    "hexValue": "72657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8729:6:5",
                                    "type": "",
                                    "value": "ress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8702:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8702:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8702:34:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8745:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8757:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8768:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8753:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8753:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8745:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ced4acb1db0ac1d95997dbacda05821353b65980cb3c29759cf75575af33e912__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8529:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8543:4:5",
                            "type": ""
                          }
                        ],
                        "src": "8378:400:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8957:181:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8974:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8985:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8967:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8967:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8967:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9008:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9019:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9004:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9004:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9024:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8997:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8997:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8997:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9047:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9058:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9043:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9043:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a20696e73756666696369656e7420616c6c6f77616e6365",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9063:33:5",
                                    "type": "",
                                    "value": "VELAMIS: insufficient allowance"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9036:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9036:61:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9036:61:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9106:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9118:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9129:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9114:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9114:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9106:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a3374090caf4d66f81d1ae99d9c3b520c9572c894b9161fb2fd7049be81ba000__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8934:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8948:4:5",
                            "type": ""
                          }
                        ],
                        "src": "8783:355:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9317:229:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9334:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9345:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9327:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9327:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9327:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9368:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9379:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9364:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9364:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9384:2:5",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9357:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9357:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9357:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9407:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9418:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9403:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9403:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a207472616e736665722066726f6d20746865207a65726f20",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9423:34:5",
                                    "type": "",
                                    "value": "VELAMIS: transfer from the zero "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9396:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9396:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9396:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9478:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9489:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9474:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9474:18:5"
                                  },
                                  {
                                    "hexValue": "61646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9494:9:5",
                                    "type": "",
                                    "value": "address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9467:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9467:37:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9467:37:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9513:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9525:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9536:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9521:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9521:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9513:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c8b842bb44c4759885d129dd604218bbf56863f2908c9db5b4cf8e9b0fabcc36__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9294:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9308:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9143:403:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9725:227:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9742:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9753:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9735:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9735:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9735:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9776:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9787:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9772:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9772:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9792:2:5",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9765:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9765:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9765:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9815:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9826:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9811:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9811:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a207472616e7366657220746f20746865207a65726f206164",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9831:34:5",
                                    "type": "",
                                    "value": "VELAMIS: transfer to the zero ad"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9804:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9804:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9804:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9886:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9897:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9882:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9882:18:5"
                                  },
                                  {
                                    "hexValue": "6472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9902:7:5",
                                    "type": "",
                                    "value": "dress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9875:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9875:35:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9875:35:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9919:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9931:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9942:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9927:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9927:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9919:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_63a184dc45135cccc4e8ef6425d1be95e8fac6bc63d7c6c4bd59794bd0107905__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9702:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9716:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9551:401:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10131:230:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10148:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10159:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10141:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10141:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10141:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10182:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10193:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10178:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10178:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10198:2:5",
                                    "type": "",
                                    "value": "40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10171:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10171:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10171:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10221:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10232:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10217:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10217:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a207472616e7366657220616d6f756e742065786365656473",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10237:34:5",
                                    "type": "",
                                    "value": "VELAMIS: transfer amount exceeds"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10210:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10210:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10210:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10292:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10303:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10288:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10288:18:5"
                                  },
                                  {
                                    "hexValue": "2062616c616e6365",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10308:10:5",
                                    "type": "",
                                    "value": " balance"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10281:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10281:38:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10281:38:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10328:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10340:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10351:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10336:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10336:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10328:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1abf800bd7f67e49e566c4424f249366db9e4e99c6af02e9931d098419e0dee2__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10108:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10122:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9957:404:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10540:225:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10557:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10568:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10550:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10550:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10550:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10591:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10602:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10587:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10587:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10607:2:5",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10580:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10580:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10580:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10630:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10641:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10626:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10626:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a206275726e2066726f6d20746865207a65726f2061646472",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10646:34:5",
                                    "type": "",
                                    "value": "VELAMIS: burn from the zero addr"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10619:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10619:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10619:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10701:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10712:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10697:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10697:18:5"
                                  },
                                  {
                                    "hexValue": "657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10717:5:5",
                                    "type": "",
                                    "value": "ess"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10690:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10690:33:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10690:33:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10732:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10744:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10755:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10740:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10740:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10732:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d26354a426fcb7cbad7f962831944edcc88389b48f05162453ec88acfc485236__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10517:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10531:4:5",
                            "type": ""
                          }
                        ],
                        "src": "10366:399:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10944:226:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10961:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10972:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10954:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10954:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10954:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10995:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11006:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10991:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10991:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11011:2:5",
                                    "type": "",
                                    "value": "36"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10984:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10984:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10984:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11034:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11045:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11030:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11030:18:5"
                                  },
                                  {
                                    "hexValue": "56454c414d49533a206275726e20616d6f756e7420657863656564732062616c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11050:34:5",
                                    "type": "",
                                    "value": "VELAMIS: burn amount exceeds bal"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11023:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11023:62:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11023:62:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11105:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11116:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11101:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11101:18:5"
                                  },
                                  {
                                    "hexValue": "616e6365",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11121:6:5",
                                    "type": "",
                                    "value": "ance"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11094:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11094:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11094:34:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11137:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11149:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11160:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11145:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11145:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11137:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e33c5bcfce4f1a705a910009678f0324d364e0c2b1ea9e9b0ac297baf1531b79__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10921:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10935:4:5",
                            "type": ""
                          }
                        ],
                        "src": "10770:400:5"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_670428e70d473635c20c7ecf46404b96a5d849982ce1510df8418961dd6658df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"VELAMIS: contract is stopped\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_94061dca4c6f971d99a3a169b72c202a7a874bf37640204ae0d787eaea316846__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"VELAMIS: caller isn't stopper of\")\n        mstore(add(headStart, 96), \" the contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2595855677c676e4636727198ac1099ded92471c34742cb5eb2b3fb6a9ca9e16__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"VELAMIS: caller isn't manager of\")\n        mstore(add(headStart, 96), \" the contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bd40e61b488c01c22d36264138a37cb78a7710016dd3e4a0794cfa040c67148d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"VELAMIS: token issuace is ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_067172393de2fbfccf7f9043d055364f933eedba15a427fc4665ebd2df7faa30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"VELAMIS: it isn't the issuace ti\")\n        mstore(add(headStart, 96), \"me now\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_346b7c130cc122b40091d563c5afefe794453347d91570c47aa60813616ca497__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"VELAMIS: tokens have already bur\")\n        mstore(add(headStart, 96), \"ned\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a56660a2fa2a38b06650005b121feeede389f68d9f8bc07310f1e6a0b72b82b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"VELAMIS: decreased allowance bel\")\n        mstore(add(headStart, 96), \"ow zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1b586be3285ee4cb9a07db93bcbb862c2202f6f92cae4f6e66a59a5460faed12__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"VELAMIS: index must be less than\")\n        mstore(add(headStart, 96), \" 8.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c70a72069e15b047a7dbc6ba82c32a37bf4136e3229b2995b6db38db2700cc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"VELAMIS: distribution with this \")\n        mstore(add(headStart, 96), \"index had already done.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4f2b4d6643fac749402e773876b452789c45e64c3e4be91de8bfb340ab2a3510__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"VELAMIS: approve from the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ced4acb1db0ac1d95997dbacda05821353b65980cb3c29759cf75575af33e912__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"VELAMIS: approve to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a3374090caf4d66f81d1ae99d9c3b520c9572c894b9161fb2fd7049be81ba000__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"VELAMIS: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c8b842bb44c4759885d129dd604218bbf56863f2908c9db5b4cf8e9b0fabcc36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"VELAMIS: transfer from the zero \")\n        mstore(add(headStart, 96), \"address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_63a184dc45135cccc4e8ef6425d1be95e8fac6bc63d7c6c4bd59794bd0107905__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"VELAMIS: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1abf800bd7f67e49e566c4424f249366db9e4e99c6af02e9931d098419e0dee2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"VELAMIS: transfer amount exceeds\")\n        mstore(add(headStart, 96), \" balance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d26354a426fcb7cbad7f962831944edcc88389b48f05162453ec88acfc485236__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"VELAMIS: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e33c5bcfce4f1a705a910009678f0324d364e0c2b1ea9e9b0ac297baf1531b79__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"VELAMIS: burn amount exceeds bal\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n}",
                  "id": 5,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061025e5760003560e01c8063677a887011610146578063a4be4b02116100c3578063db0bbaf311610087578063db0bbaf3146104de578063dd62ed3e146104f9578063ebf6cf9b1461050c578063f4dd662614610515578063fce589d814610530578063fe738f67146103db57600080fd5b8063a4be4b02146103c2578063a9059cbb146104af578063af6cb99e14610378578063d1d8523a146104c2578063d2267a6e146104cb57600080fd5b806380c763841161010a57806380c76384146104685780638b8cb114146104705780638da588971461048b57806395d89b4114610494578063a457c2d71461049c57600080fd5b8063677a8870146103e35780636d1b229d146103fe57806370a08231146104115780637ba06d781461043a5780637fc51ee11461045557600080fd5b8063313ce567116101df5780635084ae15116101a35780635084ae15146103a757806350d1197e146103c2578063555f323a146103ca57806356b05a2a1461037857806360ab5852146103d3578063676d0e8a146103db57600080fd5b8063313ce56714610363578063384d4241146103785780633950935114610380578063439766ce146103935780634b18e6421461039d57600080fd5b806318160ddd1161022657806318160ddd1461030d578063200d2ed21461031f57806323b872dd1461032c57806327a5331e1461033f5780632bdcdb781461035a57600080fd5b806306fdde0314610263578063087140d414610281578063095ea7b3146102b457806309c03d52146102d757806311ffeaf2146102f2575b600080fd5b61026b610539565b604051610278919061143b565b60405180910390f35b61029c736742e82826f03f69b46d86ff2afaf870f9a188c681565b6040516001600160a01b039091168152602001610278565b6102c76102c23660046114ac565b6105cb565b6040519015158152602001610278565b61029c7344a7cc9762c267180e0e09d56a84d70629258e2981565b61029c73a9ed9c85a7cc10ed3cb439934a25d737c6b8d00681565b6006545b604051908152602001610278565b600d546102c79060ff1681565b6102c761033a3660046114d6565b61060f565b61029c73d0bdc14f6457511655e2290c56fdad5a3f96ddea81565b610311600a5481565b60055460405160ff9091168152602001610278565b610311600581565b6102c761038e3660046114ac565b610656565b61039b6106b7565b005b61031162278d0081565b61029c732f609c920c78535bf3ae62b92ffb131cb37b03eb81565b610311601481565b610311600f5481565b61039b61073c565b610311600a81565b61029c737de8e2b7f921ba243454b30406076a89fdf7c34381565b61039b61040c366004611512565b6109ee565b61031161041f36600461152b565b6001600160a01b031660009081526001602052604090205490565b61029c735b58e5df395f87ce0cd2a677b9a48cbb7cb3a84381565b610311610463366004611512565b610b25565b610311601981565b61029c731fa257b5aa21e21bd6fa0f421638661b8a42290281565b610311600e5481565b61026b610b46565b6102c76104aa3660046114ac565b610b55565b6102c76104bd3660046114ac565b610c0b565b610311600b5481565b61039b6104d936600461154d565b610c3c565b61029c7313200c0fac543e5a7f85791e65bea038fe6ee25d81565b610311610507366004611570565b610f2f565b610311600c5481565b61029c73333431cdae737cd1bf6ad26c22e443700710d81981565b61031160095481565b606060038054610548906115a3565b80601f0160208091040260200160405190810160405280929190818152602001828054610574906115a3565b80156105c15780601f10610596576101008083540402835291602001916105c1565b820191906000526020600020905b8154815290600101906020018083116105a457829003601f168201915b5050505050905090565b600d5460009060ff166105f95760405162461bcd60e51b81526004016105f0906115de565b60405180910390fd5b33610605818585610f80565b5060019392505050565b600d5460009060ff166106345760405162461bcd60e51b81526004016105f0906115de565b336106408582856110a9565b61064b85858561111d565b506001949350505050565b600d5460009060ff1661067b5760405162461bcd60e51b81526004016105f0906115de565b3360008181526002602090815260408083206001600160a01b038816845290915290205461060590829086906106b290879061162b565b610f80565b337313200c0fac543e5a7f85791e65bea038fe6ee25d146107305760405162461bcd60e51b815260206004820152602d60248201527f56454c414d49533a2063616c6c65722069736e27742073746f70706572206f6660448201526c081d1a194818dbdb9d1c9858dd609a1b60648201526084016105f0565b600d805460ff19169055565b33736742e82826f03f69b46d86ff2afaf870f9a188c61461076f5760405162461bcd60e51b81526004016105f090611643565b600d5460ff166107915760405162461bcd60e51b81526004016105f0906115de565b6014600a5411156107e45760405162461bcd60e51b815260206004820152601f60248201527f56454c414d49533a20746f6b656e206973737561636520697320656e6465640060448201526064016105f0565b600b544210156108455760405162461bcd60e51b815260206004820152602660248201527f56454c414d49533a2069742069736e27742074686520697373756163652074696044820152656d65206e6f7760d01b60648201526084016105f0565b600a54600090156108c75761271060006001600a546108649190611690565b81548110610874576108746116a7565b90600052602060002001546000600a5481548110610894576108946116a7565b90600052602060002001546108a99190611690565b6007546108b691906116bd565b6108c091906116dc565b9050610904565b6127106000600a54815481106108df576108df6116a7565b90600052602060002001546007546108f791906116bd565b61090191906116dc565b90505b736742e82826f03f69b46d86ff2afaf870f9a188c6600090815260016020527fee8aaf4e0f85ec16b756f8a07b01337af9540e49c04a5b84e30b17212fdbc088805483929061095490849061162b565b92505081905550806006600082825461096d919061162b565b9250508190555062278d00600b6000828254610989919061162b565b9091555050600a5461099c90600161162b565b600a55604051818152736742e82826f03f69b46d86ff2afaf870f9a188c6906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350565b33736742e82826f03f69b46d86ff2afaf870f9a188c614610a215760405162461bcd60e51b81526004016105f090611643565b600d5460ff16610a435760405162461bcd60e51b81526004016105f0906115de565b6000606460095483610a5591906116bd565b610a5f91906116dc565b9050600060646007546032610a7491906116bd565b610a7e91906116dc565b905080600f5410610add5760405162461bcd60e51b815260206004820152602360248201527f56454c414d49533a20746f6b656e73206861766520616c7265616479206275726044820152621b995960ea1b60648201526084016105f0565b8082600f54610aec919061162b565b1115610b0257600f54610aff9082611690565b91505b610b20736742e82826f03f69b46d86ff2afaf870f9a188c6836112f2565b505050565b60008181548110610b3557600080fd5b600091825260209091200154905081565b606060048054610548906115a3565b600d5460009060ff16610b7a5760405162461bcd60e51b81526004016105f0906115de565b3360008181526002602090815260408083206001600160a01b038816845290915290205483811015610bfe5760405162461bcd60e51b815260206004820152602760248201527f56454c414d49533a2064656372656173656420616c6c6f77616e63652062656c6044820152666f77207a65726f60c81b60648201526084016105f0565b61064b8286868403610f80565b600d5460009060ff16610c305760405162461bcd60e51b81526004016105f0906115de565b3361060581858561111d565b33736742e82826f03f69b46d86ff2afaf870f9a188c614610c6f5760405162461bcd60e51b81526004016105f090611643565b600d5460ff16610c915760405162461bcd60e51b81526004016105f0906115de565b60088160ff1610610cf05760405162461bcd60e51b815260206004820152602360248201527f56454c414d49533a20696e646578206d757374206265206c657373207468616e604482015262101c1760e91b60648201526084016105f0565b60088160ff1681548110610d0657610d066116a7565b90600052602060002090602091828204019190069054906101000a900460ff1615610d995760405162461bcd60e51b815260206004820152603760248201527f56454c414d49533a20646973747269627574696f6e207769746820746869732060448201527f696e6465782068616420616c726561647920646f6e652e00000000000000000060648201526084016105f0565b60008060ff8316610dc35750732f609c920c78535bf3ae62b92ffb131cb37b03eb90506005610eec565b8260ff1660011415610dee575073d0bdc14f6457511655e2290c56fdad5a3f96ddea9050600a610eec565b8260ff1660021415610e195750731fa257b5aa21e21bd6fa0f421638661b8a42290290506005610eec565b8260ff1660031415610e445750737de8e2b7f921ba243454b30406076a89fdf7c34390506005610eec565b8260ff1660041415610e6f5750735b58e5df395f87ce0cd2a677b9a48cbb7cb3a8439050600a610eec565b8260ff1660051415610e9a575073333431cdae737cd1bf6ad26c22e443700710d81990506014610eec565b8260ff1660061415610ec5575073a9ed9c85a7cc10ed3cb439934a25d737c6b8d00690506019610eec565b8260ff1660071415610eec57507344a7cc9762c267180e0e09d56a84d70629258e29905060145b6000606482600754610efe91906116bd565b610f0891906116dc565b9050610f29736742e82826f03f69b46d86ff2afaf870f9a188c6848361111d565b50505050565b600d5460009060ff16610f545760405162461bcd60e51b81526004016105f0906115de565b506001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6001600160a01b038316610fe55760405162461bcd60e51b815260206004820152602660248201527f56454c414d49533a20617070726f76652066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016105f0565b6001600160a01b0382166110475760405162461bcd60e51b8152602060048201526024808201527f56454c414d49533a20617070726f766520746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105f0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006110b58484610f2f565b90506000198114610f2957818110156111105760405162461bcd60e51b815260206004820152601f60248201527f56454c414d49533a20696e73756666696369656e7420616c6c6f77616e63650060448201526064016105f0565b610f298484848403610f80565b6001600160a01b0383166111835760405162461bcd60e51b815260206004820152602760248201527f56454c414d49533a207472616e736665722066726f6d20746865207a65726f206044820152666164647265737360c81b60648201526084016105f0565b6001600160a01b0382166111e75760405162461bcd60e51b815260206004820152602560248201527f56454c414d49533a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016105f0565b6001600160a01b038316600090815260016020526040902054818110156112615760405162461bcd60e51b815260206004820152602860248201527f56454c414d49533a207472616e7366657220616d6f756e7420657863656564736044820152672062616c616e636560c01b60648201526084016105f0565b6001600160a01b0380851660009081526001602052604080822085850390559185168152908120805484929061129890849061162b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112e491815260200190565b60405180910390a350505050565b6001600160a01b0382166113545760405162461bcd60e51b815260206004820152602360248201527f56454c414d49533a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016105f0565b6001600160a01b038216600090815260016020526040902054818110156113c95760405162461bcd60e51b8152602060048201526024808201527f56454c414d49533a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016105f0565b6001600160a01b03831660009081526001602052604081208383039055600680548492906113f8908490611690565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161109c565b600060208083528351808285015260005b818110156114685785810183015185820160400152820161144c565b8181111561147a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146114a757600080fd5b919050565b600080604083850312156114bf57600080fd5b6114c883611490565b946020939093013593505050565b6000806000606084860312156114eb57600080fd5b6114f484611490565b925061150260208501611490565b9150604084013590509250925092565b60006020828403121561152457600080fd5b5035919050565b60006020828403121561153d57600080fd5b61154682611490565b9392505050565b60006020828403121561155f57600080fd5b813560ff8116811461154657600080fd5b6000806040838503121561158357600080fd5b61158c83611490565b915061159a60208401611490565b90509250929050565b600181811c908216806115b757607f821691505b602082108114156115d857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601c908201527f56454c414d49533a20636f6e74726163742069732073746f7070656400000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561163e5761163e611615565b500190565b6020808252602d908201527f56454c414d49533a2063616c6c65722069736e2774206d616e61676572206f6660408201526c081d1a194818dbdb9d1c9858dd609a1b606082015260800190565b6000828210156116a2576116a2611615565b500390565b634e487b7160e01b600052603260045260246000fd5b60008160001904831182151516156116d7576116d7611615565b500290565b6000826116f957634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122025b768c19558084e6bc281dc5da0639c1d272c97cde10bc2eea5a859e75dea7864736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x677A8870 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xA4BE4B02 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDB0BBAF3 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDB0BBAF3 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xEBF6CF9B EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xF4DD6626 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xFCE589D8 EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xFE738F67 EQ PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA4BE4B02 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xAF6CB99E EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xD1D8523A EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xD2267A6E EQ PUSH2 0x4CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80C76384 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x80C76384 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x8B8CB114 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x8DA58897 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x677A8870 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x7BA06D78 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x7FC51EE1 EQ PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1DF JUMPI DUP1 PUSH4 0x5084AE15 GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x5084AE15 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x50D1197E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x555F323A EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x56B05A2A EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x60AB5852 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x676D0E8A EQ PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x384D4241 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x439766CE EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x4B18E642 EQ PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x226 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x27A5331E EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x2BDCDB78 EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x87140D4 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x9C03D52 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x11FFEAF2 EQ PUSH2 0x2F2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26B PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x143B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST PUSH2 0x29C PUSH20 0x44A7CC9762C267180E0E09D56A84D70629258E29 DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH20 0xA9ED9C85A7CC10ED3CB439934A25D737C6B8D006 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2C7 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x14D6 JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH2 0x29C PUSH20 0xD0BDC14F6457511655E2290C56FDAD5A3F96DDEA DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x6B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH20 0x2F609C920C78535BF3AE62B92FFB131CB37B03EB DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x73C JUMP JUMPDEST PUSH2 0x311 PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH20 0x7DE8E2B7F921BA243454B30406076A89FDF7C343 DUP2 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x1512 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x311 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x29C PUSH20 0x5B58E5DF395F87CE0CD2A677B9A48CBB7CB3A843 DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x1512 JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH20 0x1FA257B5AA21E21BD6FA0F421638661B8A422902 DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0xB55 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x311 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x154D JUMP JUMPDEST PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x29C PUSH20 0x13200C0FAC543E5A7F85791E65BEA038FE6EE25D DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH2 0x507 CALLDATASIZE PUSH1 0x4 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0xF2F JUMP JUMPDEST PUSH2 0x311 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH20 0x333431CDAE737CD1BF6AD26C22E443700710D819 DUP2 JUMP JUMPDEST PUSH2 0x311 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x548 SWAP1 PUSH2 0x15A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x574 SWAP1 PUSH2 0x15A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x596 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x5F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x605 DUP2 DUP6 DUP6 PUSH2 0xF80 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST CALLER PUSH2 0x640 DUP6 DUP3 DUP6 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x64B DUP6 DUP6 DUP6 PUSH2 0x111D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x605 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x6B2 SWAP1 DUP8 SWAP1 PUSH2 0x162B JUMP JUMPDEST PUSH2 0xF80 JUMP JUMPDEST CALLER PUSH20 0x13200C0FAC543E5A7F85791E65BEA038FE6EE25D EQ PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A2063616C6C65722069736E27742073746F70706572206F66 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x81D1A194818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 EQ PUSH2 0x76F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x14 PUSH1 0xA SLOAD GT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20746F6B656E206973737561636520697320656E64656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0xB SLOAD TIMESTAMP LT ISZERO PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A2069742069736E2774207468652069737375616365207469 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6D65206E6F77 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x8C7 JUMPI PUSH2 0x2710 PUSH1 0x0 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x864 SWAP2 SWAP1 PUSH2 0x1690 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x874 JUMPI PUSH2 0x874 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x0 PUSH1 0xA SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x8A9 SWAP2 SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP PUSH2 0x904 JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x8DF JUMPI PUSH2 0x8DF PUSH2 0x16A7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0x901 SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0xEE8AAF4E0F85EC16B756F8A07B01337AF9540E49C04A5B84E30B17212FDBC088 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x954 SWAP1 DUP5 SWAP1 PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x96D SWAP2 SWAP1 PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x278D00 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x989 SWAP2 SWAP1 PUSH2 0x162B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0x99C SWAP1 PUSH1 0x1 PUSH2 0x162B JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST CALLER PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 EQ PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP4 PUSH2 0xA55 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0xA5F SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x7 SLOAD PUSH1 0x32 PUSH2 0xA74 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xF SLOAD LT PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20746F6B656E73206861766520616C726561647920627572 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B9959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST DUP1 DUP3 PUSH1 0xF SLOAD PUSH2 0xAEC SWAP2 SWAP1 PUSH2 0x162B JUMP JUMPDEST GT ISZERO PUSH2 0xB02 JUMPI PUSH1 0xF SLOAD PUSH2 0xAFF SWAP1 DUP3 PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0xB20 PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 DUP4 PUSH2 0x12F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x548 SWAP1 PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0xB7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A2064656372656173656420616C6C6F77616E63652062656C PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6F77207A65726F PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x64B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xF80 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST CALLER PUSH2 0x605 DUP2 DUP6 DUP6 PUSH2 0x111D JUMP JUMPDEST CALLER PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 EQ PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH2 0xC91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x8 DUP2 PUSH1 0xFF AND LT PUSH2 0xCF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20696E646578206D757374206265206C657373207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x101C17 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x8 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xD06 JUMPI PUSH2 0xD06 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20646973747269627574696F6E2077697468207468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E6465782068616420616C726561647920646F6E652E000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 AND PUSH2 0xDC3 JUMPI POP PUSH20 0x2F609C920C78535BF3AE62B92FFB131CB37B03EB SWAP1 POP PUSH1 0x5 PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0xDEE JUMPI POP PUSH20 0xD0BDC14F6457511655E2290C56FDAD5A3F96DDEA SWAP1 POP PUSH1 0xA PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0xE19 JUMPI POP PUSH20 0x1FA257B5AA21E21BD6FA0F421638661B8A422902 SWAP1 POP PUSH1 0x5 PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x3 EQ ISZERO PUSH2 0xE44 JUMPI POP PUSH20 0x7DE8E2B7F921BA243454B30406076A89FDF7C343 SWAP1 POP PUSH1 0x5 PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x4 EQ ISZERO PUSH2 0xE6F JUMPI POP PUSH20 0x5B58E5DF395F87CE0CD2A677B9A48CBB7CB3A843 SWAP1 POP PUSH1 0xA PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x5 EQ ISZERO PUSH2 0xE9A JUMPI POP PUSH20 0x333431CDAE737CD1BF6AD26C22E443700710D819 SWAP1 POP PUSH1 0x14 PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x6 EQ ISZERO PUSH2 0xEC5 JUMPI POP PUSH20 0xA9ED9C85A7CC10ED3CB439934A25D737C6B8D006 SWAP1 POP PUSH1 0x19 PUSH2 0xEEC JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x7 EQ ISZERO PUSH2 0xEEC JUMPI POP PUSH20 0x44A7CC9762C267180E0E09D56A84D70629258E29 SWAP1 POP PUSH1 0x14 JUMPDEST PUSH1 0x0 PUSH1 0x64 DUP3 PUSH1 0x7 SLOAD PUSH2 0xEFE SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0xF08 SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP PUSH2 0xF29 PUSH20 0x6742E82826F03F69B46D86FF2AFAF870F9A188C6 DUP5 DUP4 PUSH2 0x111D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0x15DE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20617070726F76652066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1047 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20617070726F766520746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B5 DUP5 DUP5 PUSH2 0xF2F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xF29 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20696E73756666696369656E7420616C6C6F77616E636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0xF29 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1183 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A207472616E736665722066726F6D20746865207A65726F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x61646472657373 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1261 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A207472616E7366657220616D6F756E742065786365656473 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2062616C616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1298 SWAP1 DUP5 SWAP1 PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x12E4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x13C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x13F8 SWAP1 DUP5 SWAP1 PUSH2 0x1690 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x109C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1468 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x144C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x147A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C8 DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F4 DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP3 POP PUSH2 0x1502 PUSH1 0x20 DUP6 ADD PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1546 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x158C DUP4 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x159A PUSH1 0x20 DUP5 ADD PUSH2 0x1490 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x15D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A20636F6E74726163742069732073746F7070656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x163E JUMPI PUSH2 0x163E PUSH2 0x1615 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x56454C414D49533A2063616C6C65722069736E2774206D616E61676572206F66 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x81D1A194818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x16A2 PUSH2 0x1615 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x16D7 JUMPI PUSH2 0x16D7 PUSH2 0x1615 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xB7 PUSH9 0xC19558084E6BC281DC 0x5D LOG0 PUSH4 0x9C1D272C SWAP8 0xCD 0xE1 SIGNEXTEND 0xC2 0xEE 0xA5 0xA8 MSIZE 0xE7 0x5D 0xEA PUSH25 0x64736F6C634300080A00330000000000000000000000000000 ",
              "sourceMap": "188:9275:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5487:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;298:81;;337:42;298:81;;;;;-1:-1:-1;;;;;780:32:5;;;762:51;;750:2;735:18;298:81:0;616:203:5;6361::0;;;;;;:::i;:::-;;:::i;:::-;;;1426:14:5;;1419:22;1401:41;;1389:2;1374:18;6361:203:0;1261:187:5;1011:88:0;;1057:42;1011:88;;921:83;;962:42;921:83;;5764:100;5844:12;;5764:100;;;1599:25:5;;;1587:2;1572:18;5764:100:0;1453:177:5;2339:18:0;;;;;;;;;6572:297;;;;;;:::i;:::-;;:::i;476:82::-;;516:42;476:82;;2239:29;;;;;;5673:83;5739:9;;5673:83;;5739:9;;;;2110:36:5;;2098:2;2083:18;5673:83:0;1968:184:5;1195:40:0;;1234:1;1195:40;;6877:243;;;;;;:::i;:::-;;:::i;3181:79::-;;;:::i;:::-;;2174:57;;2217:14;2174:57;;386:83;;427:42;386:83;;1523:46;;1567:2;1523:46;;2395:32;;;;;;3268:682;;;:::i;1379:42::-;;1419:2;1379:42;;655:79;;692:42;655:79;;5031:448;;;;;;:::i;:::-;;:::i;5872:119::-;;;;;;:::i;:::-;-1:-1:-1;;;;;5965:18:0;5938:7;5965:18;;;:9;:18;;;;;;;5872:119;741:84;;783:42;741:84;;1578:195;;;;;;:::i;:::-;;:::i;1475:41::-;;1514:2;1475:41;;565:83;;606:42;565:83;;2364:24;;;;;;5578:87;;;:::i;7128:443::-;;;;;;:::i;:::-;;:::i;5997:195::-;;;;;;:::i;:::-;;:::i;2275:27::-;;;;;;3958:1065;;;;;;:::i;:::-;;:::i;1106:80::-;;1144:42;1106:80;;6200:153;;;;;;:::i;:::-;;:::i;2309:23::-;;;;;;832:82;;872:42;832:82;;2128:27;;;;;;5487:83;5524:13;5557:5;5550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5487:83;:::o;6361:203::-;3114:6;;6446:4;;3114:6;;3106:47;;;;-1:-1:-1;;;3106:47:0;;;;;;;:::i;:::-;;;;;;;;;195:10:2;6502:32:0::1;195:10:2::0;6518:7:0;6527:6;6502:8:::1;:32::i;:::-;-1:-1:-1::0;6552:4:0::1;::::0;6361:203;-1:-1:-1;;;6361:203:0:o;6572:297::-;3114:6;;6705:4;;3114:6;;3106:47;;;;-1:-1:-1;;;3106:47:0;;;;;;;:::i;:::-;195:10:2;6763:38:0::1;6779:4:::0;195:10:2;6794:6:0;6763:15:::1;:38::i;:::-;6812:27;6822:4;6828:2;6832:6;6812:9;:27::i;:::-;-1:-1:-1::0;6857:4:0::1;::::0;6572:297;-1:-1:-1;;;;6572:297:0:o;6877:243::-;3114:6;;6967:4;;3114:6;;3106:47;;;;-1:-1:-1;;;3106:47:0;;;;;;;:::i;:::-;195:10:2;6985:13:0::1;7049:18:::0;;;:11:::1;:18;::::0;;;;;;;-1:-1:-1;;;;;7049:27:0;::::1;::::0;;;;;;;;7024:66:::1;::::0;195:10:2;;7049:27:0;;:40:::1;::::0;7079:10;;7049:40:::1;:::i;:::-;7024:8;:66::i;3181:79::-:0;195:10:2;1144:42:0;2821:27;2813:85;;;;-1:-1:-1;;;2813:85:0;;4281:2:5;2813:85:0;;;4263:21:5;4320:2;4300:18;;;4293:30;4359:34;4339:18;;;4332:62;-1:-1:-1;;;4410:18:5;;;4403:43;4463:19;;2813:85:0;4079:409:5;2813:85:0;3238:6:::1;:14:::0;;-1:-1:-1;;3238:14:0::1;::::0;;3181:79::o;3268:682::-;195:10:2;337:42:0;2968:28;2960:86;;;;-1:-1:-1;;;2960:86:0;;;;;;;:::i;:::-;3114:6:::1;::::0;::::1;;3106:47;;;;-1:-1:-1::0;;;3106:47:0::1;;;;;;;:::i;:::-;3357:2:::2;3340:13;;:19;;3332:63;;;::::0;-1:-1:-1;;;3332:63:0;;5109:2:5;3332:63:0::2;::::0;::::2;5091:21:5::0;5148:2;5128:18;;;5121:30;5187:33;5167:18;;;5160:61;5238:18;;3332:63:0::2;4907:355:5::0;3332:63:0::2;3433:12;;3414:15;:31;;3406:82;;;::::0;-1:-1:-1;;;3406:82:0;;5469:2:5;3406:82:0::2;::::0;::::2;5451:21:5::0;5508:2;5488:18;;;5481:30;5547:34;5527:18;;;5520:62;-1:-1:-1;;;5598:18:5;;;5591:36;5644:19;;3406:82:0::2;5267:402:5::0;3406:82:0::2;3527:13;::::0;3499:14:::2;::::0;3527:17;3524:196:::2;;3639:5;3602:15;3633:1;3618:13;;:16;;;;:::i;:::-;3602:33;;;;;;;;:::i;:::-;;;;;;;;;3569:15;3585:13;;3569:30;;;;;;;;:::i;:::-;;;;;;;;;:66;;;;:::i;:::-;3555:10;;:81;;;;:::i;:::-;:89;;;;:::i;:::-;3546:98;;3524:196;;;3715:5;3682:15;3698:13;;3682:30;;;;;;;;:::i;:::-;;;;;;;;;3669:10;;:43;;;;:::i;:::-;:51;;;;:::i;:::-;3660:60;;3524:196;337:42;3731:23;::::0;;;:9:::2;:23;::::0;;:33;;3758:6;;3731:23;:33:::2;::::0;3758:6;;3731:33:::2;:::i;:::-;;;;;;;;3791:6;3775:12;;:22;;;;;;;:::i;:::-;;;;;;;;2217:14;3808:12;;:32;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3867:13:0::2;::::0;:17:::2;::::0;3883:1:::2;3867:17;:::i;:::-;3851:13;:33:::0;3900:42:::2;::::0;1599:25:5;;;337:42:0::2;::::0;3917:1:::2;::::0;3900:42:::2;::::0;1587:2:5;1572:18;3900:42:0::2;;;;;;;3321:629;3268:682::o:0;5031:448::-;195:10:2;337:42:0;2968:28;2960:86;;;;-1:-1:-1;;;2960:86:0;;;;;;;:::i;:::-;3114:6:::1;::::0;::::1;;3106:47;;;;-1:-1:-1::0;;;3106:47:0::1;;;;;;;:::i;:::-;5108:19:::2;5149:3;5139:7;;5130:6;:16;;;;:::i;:::-;:22;;;;:::i;:::-;5108:44;;5163:23;5207:3;5189:10;;5202:2;5189:15;;;;:::i;:::-;:21;;;;:::i;:::-;5163:47;;5249:15;5229:17;;:35;5221:83;;;::::0;-1:-1:-1;;;5221:83:0;;6533:2:5;5221:83:0::2;::::0;::::2;6515:21:5::0;6572:2;6552:18;;;6545:30;6611:34;6591:18;;;6584:62;-1:-1:-1;;;6662:18:5;;;6655:33;6705:19;;5221:83:0::2;6331:399:5::0;5221:83:0::2;5352:15;5338:11;5318:17;;:31;;;;:::i;:::-;:49;5315:103;;;5401:17;::::0;5383:35:::2;::::0;:15;:35:::2;:::i;:::-;5369:49;;5315:103;5439:32;337:42;5459:11;5439:5;:32::i;:::-;5097:382;;5031:448:::0;:::o;1578:195::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1578:195:0;:::o;5578:87::-;5617:13;5650:7;5643:14;;;;;:::i;7128:443::-;3114:6;;7223:4;;3114:6;;3106:47;;;;-1:-1:-1;;;3106:47:0;;;;;;;:::i;:::-;195:10:2;7241:13:0::1;7307:18:::0;;;:11:::1;:18;::::0;;;;;;;-1:-1:-1;;;;;7307:27:0;::::1;::::0;;;;;;;;7353:35;;::::1;;7345:87;;;::::0;-1:-1:-1;;;7345:87:0;;6937:2:5;7345:87:0::1;::::0;::::1;6919:21:5::0;6976:2;6956:18;;;6949:30;7015:34;6995:18;;;6988:62;-1:-1:-1;;;7066:18:5;;;7059:37;7113:19;;7345:87:0::1;6735:403:5::0;7345:87:0::1;7468:60;7477:5;7484:7;7512:15;7493:16;:34;7468:8;:60::i;5997:195::-:0;3114:6;;6078:4;;3114:6;;3106:47;;;;-1:-1:-1;;;3106:47:0;;;;;;;:::i;:::-;195:10:2;6134:28:0::1;195:10:2::0;6151:2:0;6155:6;6134:9:::1;:28::i;3958:1065::-:0;195:10:2;337:42:0;2968:28;2960:86;;;;-1:-1:-1;;;2960:86:0;;;;;;;:::i;:::-;3114:6:::1;::::0;::::1;;3106:47;;;;-1:-1:-1::0;;;3106:47:0::1;;;;;;;:::i;:::-;4054:1:::2;4046:5;:9;;;4038:57;;;::::0;-1:-1:-1;;;4038:57:0;;7345:2:5;4038:57:0::2;::::0;::::2;7327:21:5::0;7384:2;7364:18;;;7357:30;7423:34;7403:18;;;7396:62;-1:-1:-1;;;7474:18:5;;;7467:33;7517:19;;4038:57:0::2;7143:399:5::0;4038:57:0::2;4115:12;4128:5;4115:19;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;4114:20;4106:88;;;::::0;-1:-1:-1;;;4106:88:0;;7749:2:5;4106:88:0::2;::::0;::::2;7731:21:5::0;7788:2;7768:18;;;7761:30;7827:34;7807:18;;;7800:62;7898:25;7878:18;;;7871:53;7941:19;;4106:88:0::2;7547:419:5::0;4106:88:0::2;4205:14;::::0;4256:10:::2;::::0;::::2;4253:657;;-1:-1:-1::0;427:42:0::2;::::0;-1:-1:-1;1234:1:0::2;4253:657;;;4340:5;:10;;4349:1;4340:10;4337:573;;;-1:-1:-1::0;516:42:0::2;::::0;-1:-1:-1;1280:2:0::2;4337:573;;;4422:5;:10;;4431:1;4422:10;4419:491;;;-1:-1:-1::0;606:42:0::2;::::0;-1:-1:-1;1328:1:0::2;4419:491;;;4506:5;:10;;4515:1;4506:10;4503:407;;;-1:-1:-1::0;692:42:0::2;::::0;-1:-1:-1;1371:1:0::2;4503:407;;;4582:5;:10;;4591:1;4582:10;4579:331;;;-1:-1:-1::0;783:42:0::2;::::0;-1:-1:-1;1419:2:0::2;4579:331;;;4668:5;:10;;4677:1;4668:10;4665:245;;;-1:-1:-1::0;872:42:0::2;::::0;-1:-1:-1;1466:2:0::2;4665:245;;;4750:5;:10;;4759:1;4750:10;4747:163;;;-1:-1:-1::0;962:42:0::2;::::0;-1:-1:-1;1514:2:0::2;4747:163;;;4834:5;:10;;4843:1;4834:10;4831:79;;;-1:-1:-1::0;1057:42:0::2;::::0;-1:-1:-1;1567:2:0::2;4831:79;4922:14;4962:3;4952:7;4939:10;;:20;;;;:::i;:::-;:26;;;;:::i;:::-;4922:43;;4976:39;337:42;5000:6;5008;4976:9;:39::i;:::-;4027:996;;;3958:1065:::0;:::o;6200:153::-;3114:6;;6291:7;;3114:6;;3106:47;;;;-1:-1:-1;;;3106:47:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6318:18:0;;::::1;;::::0;;;:11:::1;:18;::::0;;;;;;;:27;;;::::1;::::0;;;;;;;;;6200:153::o;8629:376::-;-1:-1:-1;;;;;8757:19:0;;8749:70;;;;-1:-1:-1;;;8749:70:0;;8173:2:5;8749:70:0;;;8155:21:5;8212:2;8192:18;;;8185:30;8251:34;8231:18;;;8224:62;-1:-1:-1;;;8302:18:5;;;8295:36;8348:19;;8749:70:0;7971:402:5;8749:70:0;-1:-1:-1;;;;;8838:21:0;;8830:70;;;;-1:-1:-1;;;8830:70:0;;8580:2:5;8830:70:0;;;8562:21:5;8619:2;8599:18;;;8592:30;8658:34;8638:18;;;8631:62;-1:-1:-1;;;8709:18:5;;;8702:34;8753:19;;8830:70:0;8378:400:5;8830:70:0;-1:-1:-1;;;;;8913:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;8965:32;;1599:25:5;;;8965:32:0;;1572:18:5;8965:32:0;;;;;;;;8629:376;;;:::o;9013:447::-;9140:24;9167:25;9177:5;9184:7;9167:9;:25::i;:::-;9140:52;;-1:-1:-1;;9207:16:0;:37;9203:250;;9289:6;9269:16;:26;;9261:70;;;;-1:-1:-1;;;9261:70:0;;8985:2:5;9261:70:0;;;8967:21:5;9024:2;9004:18;;;8997:30;9063:33;9043:18;;;9036:61;9114:18;;9261:70:0;8783:355:5;9261:70:0;9375:51;9384:5;9391:7;9419:6;9400:16;:25;9375:8;:51::i;7579:570::-;-1:-1:-1;;;;;7702:18:0;;7694:70;;;;-1:-1:-1;;;7694:70:0;;9345:2:5;7694:70:0;;;9327:21:5;9384:2;9364:18;;;9357:30;9423:34;9403:18;;;9396:62;-1:-1:-1;;;9474:18:5;;;9467:37;9521:19;;7694:70:0;9143:403:5;7694:70:0;-1:-1:-1;;;;;7783:16:0;;7775:66;;;;-1:-1:-1;;;7775:66:0;;9753:2:5;7775:66:0;;;9735:21:5;9792:2;9772:18;;;9765:30;9831:34;9811:18;;;9804:62;-1:-1:-1;;;9882:18:5;;;9875:35;9927:19;;7775:66:0;9551:401:5;7775:66:0;-1:-1:-1;;;;;7876:15:0;;7854:19;7876:15;;;:9;:15;;;;;;7910:21;;;;7902:74;;;;-1:-1:-1;;;7902:74:0;;10159:2:5;7902:74:0;;;10141:21:5;10198:2;10178:18;;;10171:30;10237:34;10217:18;;;10210:62;-1:-1:-1;;;10288:18:5;;;10281:38;10336:19;;7902:74:0;9957:404:5;7902:74:0;-1:-1:-1;;;;;8012:15:0;;;;;;;:9;:15;;;;;;8030:20;;;8012:38;;8072:13;;;;;;;;:23;;8044:6;;8012:15;8072:23;;8044:6;;8072:23;:::i;:::-;;;;;;;;8128:2;-1:-1:-1;;;;;8113:26:0;8122:4;-1:-1:-1;;;;;8113:26:0;;8132:6;8113:26;;;;1599:25:5;;1587:2;1572:18;;1453:177;8113:26:0;;;;;;;;7683:466;7579:570;;;:::o;8157:464::-;-1:-1:-1;;;;;8233:21:0;;8225:69;;;;-1:-1:-1;;;8225:69:0;;10568:2:5;8225:69:0;;;10550:21:5;10607:2;10587:18;;;10580:30;10646:34;10626:18;;;10619:62;-1:-1:-1;;;10697:18:5;;;10690:33;10740:19;;8225:69:0;10366:399:5;8225:69:0;-1:-1:-1;;;;;8332:18:0;;8307:22;8332:18;;;:9;:18;;;;;;8369:24;;;;8361:73;;;;-1:-1:-1;;;8361:73:0;;10972:2:5;8361:73:0;;;10954:21:5;11011:2;10991:18;;;10984:30;11050:34;11030:18;;;11023:62;-1:-1:-1;;;11101:18:5;;;11094:34;11145:19;;8361:73:0;10770:400:5;8361:73:0;-1:-1:-1;;;;;8470:18:0;;;;;;:9;:18;;;;;8491:23;;;8470:44;;8536:12;:22;;8508:6;;8470:18;8536:22;;8508:6;;8536:22;:::i;:::-;;;;-1:-1:-1;;8576:37:0;;1599:25:5;;;8602:1:0;;-1:-1:-1;;;;;8576:37:0;;;;;1587:2:5;1572:18;8576:37:0;1453:177:5;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:5;574:15;-1:-1:-1;;570:29:5;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:5:o;824:173::-;892:20;;-1:-1:-1;;;;;941:31:5;;931:42;;921:70;;987:1;984;977:12;921:70;824:173;;;:::o;1002:254::-;1070:6;1078;1131:2;1119:9;1110:7;1106:23;1102:32;1099:52;;;1147:1;1144;1137:12;1099:52;1170:29;1189:9;1170:29;:::i;:::-;1160:39;1246:2;1231:18;;;;1218:32;;-1:-1:-1;;;1002:254:5:o;1635:328::-;1712:6;1720;1728;1781:2;1769:9;1760:7;1756:23;1752:32;1749:52;;;1797:1;1794;1787:12;1749:52;1820:29;1839:9;1820:29;:::i;:::-;1810:39;;1868:38;1902:2;1891:9;1887:18;1868:38;:::i;:::-;1858:48;;1953:2;1942:9;1938:18;1925:32;1915:42;;1635:328;;;;;:::o;2157:180::-;2216:6;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;-1:-1:-1;2308:23:5;;2157:180;-1:-1:-1;2157:180:5:o;2342:186::-;2401:6;2454:2;2442:9;2433:7;2429:23;2425:32;2422:52;;;2470:1;2467;2460:12;2422:52;2493:29;2512:9;2493:29;:::i;:::-;2483:39;2342:186;-1:-1:-1;;;2342:186:5:o;2533:269::-;2590:6;2643:2;2631:9;2622:7;2618:23;2614:32;2611:52;;;2659:1;2656;2649:12;2611:52;2698:9;2685:23;2748:4;2741:5;2737:16;2730:5;2727:27;2717:55;;2768:1;2765;2758:12;2807:260;2875:6;2883;2936:2;2924:9;2915:7;2911:23;2907:32;2904:52;;;2952:1;2949;2942:12;2904:52;2975:29;2994:9;2975:29;:::i;:::-;2965:39;;3023:38;3057:2;3046:9;3042:18;3023:38;:::i;:::-;3013:48;;2807:260;;;;;:::o;3072:380::-;3151:1;3147:12;;;;3194;;;3215:61;;3269:4;3261:6;3257:17;3247:27;;3215:61;3322:2;3314:6;3311:14;3291:18;3288:38;3285:161;;;3368:10;3363:3;3359:20;3356:1;3349:31;3403:4;3400:1;3393:15;3431:4;3428:1;3421:15;3285:161;;3072:380;;;:::o;3457:352::-;3659:2;3641:21;;;3698:2;3678:18;;;3671:30;3737;3732:2;3717:18;;3710:58;3800:2;3785:18;;3457:352::o;3814:127::-;3875:10;3870:3;3866:20;3863:1;3856:31;3906:4;3903:1;3896:15;3930:4;3927:1;3920:15;3946:128;3986:3;4017:1;4013:6;4010:1;4007:13;4004:39;;;4023:18;;:::i;:::-;-1:-1:-1;4059:9:5;;3946:128::o;4493:409::-;4695:2;4677:21;;;4734:2;4714:18;;;4707:30;4773:34;4768:2;4753:18;;4746:62;-1:-1:-1;;;4839:2:5;4824:18;;4817:43;4892:3;4877:19;;4493:409::o;5674:125::-;5714:4;5742:1;5739;5736:8;5733:34;;;5747:18;;:::i;:::-;-1:-1:-1;5784:9:5;;5674:125::o;5804:127::-;5865:10;5860:3;5856:20;5853:1;5846:31;5896:4;5893:1;5886:15;5920:4;5917:1;5910:15;5936:168;5976:7;6042:1;6038;6034:6;6030:14;6027:1;6024:21;6019:1;6012:9;6005:17;6001:45;5998:71;;;6049:18;;:::i;:::-;-1:-1:-1;6089:9:5;;5936:168::o;6109:217::-;6149:1;6175;6165:132;;6219:10;6214:3;6210:20;6207:1;6200:31;6254:4;6251:1;6244:15;6282:4;6279:1;6272:15;6165:132;-1:-1:-1;6311:9:5;;6109:217::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "1188000",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "AdvisoryPercent()": "284",
                "AdvisoryWallet()": "283",
                "CompanyPercent()": "240",
                "CompanyWallet()": "326",
                "EcoGrowthPercent()": "350",
                "EcoGrowthWallet()": "328",
                "IssuancePercent(uint256)": "4709",
                "ManageWallet()": "285",
                "PauseWallet()": "260",
                "PrivSalePercent()": "263",
                "PrivSaleWallet()": "261",
                "PubSalePercent()": "349",
                "PubSaleWallet()": "328",
                "StakingRewardPercent()": "262",
                "StakingRewardWallet()": "329",
                "TeamPercent()": "306",
                "TeamWallet()": "262",
                "TreasuryPercent()": "240",
                "TreasuryWallet()": "351",
                "allowance(address,address)": "infinite",
                "approve(address,uint256)": "26819",
                "balanceOf(address)": "2627",
                "burnFee()": "2427",
                "burnTime()": "2383",
                "burnTokens(uint256)": "infinite",
                "decimals()": "2335",
                "decreaseAllowance(address,uint256)": "29154",
                "distributeTokens(uint8)": "61837",
                "increaseAllowance(address,uint256)": "29156",
                "intervalIssuance()": "329",
                "issuanceIndex()": "2429",
                "issuanceTime()": "2406",
                "issueTokens()": "infinite",
                "name()": "infinite",
                "pauseContract()": "24496",
                "starttime()": "2384",
                "status()": "2378",
                "symbol()": "infinite",
                "totalBurnedTokens()": "2384",
                "totalSupply()": "2327",
                "transfer(address,uint256)": "53357",
                "transferFrom(address,address,uint256)": "infinite"
              },
              "internal": {
                "_approve(address,address,uint256)": "infinite",
                "_burn(address,uint256)": "infinite",
                "_spendAllowance(address,address,uint256)": "infinite",
                "_transfer(address,address,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {
              "AdvisoryPercent()": "af6cb99e",
              "AdvisoryWallet()": "8b8cb114",
              "CompanyPercent()": "a4be4b02",
              "CompanyWallet()": "f4dd6626",
              "EcoGrowthPercent()": "676d0e8a",
              "EcoGrowthWallet()": "7ba06d78",
              "IssuancePercent(uint256)": "7fc51ee1",
              "ManageWallet()": "087140d4",
              "PauseWallet()": "db0bbaf3",
              "PrivSalePercent()": "384d4241",
              "PrivSaleWallet()": "5084ae15",
              "PubSalePercent()": "fe738f67",
              "PubSaleWallet()": "27a5331e",
              "StakingRewardPercent()": "50d1197e",
              "StakingRewardWallet()": "09c03d52",
              "TeamPercent()": "56b05a2a",
              "TeamWallet()": "677a8870",
              "TreasuryPercent()": "80c76384",
              "TreasuryWallet()": "11ffeaf2",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burnFee()": "fce589d8",
              "burnTime()": "ebf6cf9b",
              "burnTokens(uint256)": "6d1b229d",
              "decimals()": "313ce567",
              "decreaseAllowance(address,uint256)": "a457c2d7",
              "distributeTokens(uint8)": "d2267a6e",
              "increaseAllowance(address,uint256)": "39509351",
              "intervalIssuance()": "4b18e642",
              "issuanceIndex()": "2bdcdb78",
              "issuanceTime()": "d1d8523a",
              "issueTokens()": "60ab5852",
              "name()": "06fdde03",
              "pauseContract()": "439766ce",
              "starttime()": "8da58897",
              "status()": "200d2ed2",
              "symbol()": "95d89b41",
              "totalBurnedTokens()": "555f323a",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AdvisoryPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AdvisoryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CompanyPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CompanyWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EcoGrowthPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EcoGrowthWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"IssuancePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ManageWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PauseWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PrivSalePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PrivSaleWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PubSalePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PubSaleWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakingRewardPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakingRewardWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TeamPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TeamWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TreasuryPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TreasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"distributeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"intervalIssuance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issuanceIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issuanceTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"starttime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurnedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VELAMIS.sol\":\"Velamis\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/VELAMIS.sol\":{\"content\":\"import \\\"./libs/IERC20.sol\\\";\\r\\nimport \\\"./libs/SafeMath.sol\\\";\\r\\nimport \\\"./libs/Address.sol\\\";\\r\\nimport \\\"./libs/Context.sol\\\";\\r\\n\\r\\n// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\ncontract Velamis is Context, IERC20 {\\r\\n    using SafeMath for uint256;\\r\\n    using Address for address;\\r\\n\\r\\n    address public constant ManageWallet = 0x6742e82826f03F69B46D86FF2Afaf870F9A188c6;\\r\\n    address public constant PrivSaleWallet = 0x2f609c920c78535bF3aE62B92ffb131Cb37b03EB;\\r\\n    address public constant PubSaleWallet = 0xd0BDc14f6457511655E2290c56FdAd5a3F96Ddea;\\r\\n    address public constant AdvisoryWallet = 0x1fa257b5aA21e21bD6fa0f421638661b8A422902;\\r\\n    address public constant TeamWallet = 0x7De8E2b7f921Ba243454B30406076a89FDf7c343;\\r\\n    address public constant EcoGrowthWallet = 0x5b58E5DF395F87Ce0cd2A677b9a48Cbb7cB3a843;\\r\\n    address public constant CompanyWallet = 0x333431Cdae737Cd1BF6ad26C22e443700710d819;\\r\\n    address public constant TreasuryWallet = 0xA9ED9C85A7Cc10ED3Cb439934a25D737C6b8d006;\\r\\n    address public constant StakingRewardWallet = 0x44a7CC9762C267180e0E09d56a84D70629258e29;\\r\\n    address public constant PauseWallet = 0x13200C0FAC543e5A7f85791e65Bea038fE6eE25d;\\r\\n\\r\\n    uint public constant PrivSalePercent = 5;\\r\\n    uint public constant PubSalePercent = 10;\\r\\n    uint public constant AdvisoryPercent = 5;\\r\\n    uint public constant TeamPercent = 5;\\r\\n    uint public constant EcoGrowthPercent = 10;\\r\\n    uint public constant CompanyPercent = 20;\\r\\n    uint public constant TreasuryPercent = 25;\\r\\n    uint public constant StakingRewardPercent = 20;\\r\\n\\r\\n    uint[] public IssuancePercent = [\\r\\n        2222, 2397, 3040, 3294, 4253, 4507, 5441, \\r\\n        5623, 6434, 6615, 7328, 7455, 8015, 8142, \\r\\n        8690, 8781, 9234, 9807, 9879, 9952, 10000\\r\\n    ];\\r\\n\\r\\n    mapping(address => uint256) private _balances;\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n\\r\\n    string private _name = \\\"VELAMIS\\\";\\r\\n    string private _symbol = \\\"VEL\\\";\\r\\n    uint8 private _decimals = 18;\\r\\n    uint256 private _totalSupply;\\r\\n    uint256 private _marketCap;\\r\\n    bool[] private _distributed; \\r\\n\\r\\n    uint256 public burnFee = 10; // Burn Fee\\r\\n    uint256 public constant intervalIssuance = 30 * 24 * 3600; \\r\\n    uint public issuanceIndex = 0;\\r\\n    uint256 public issuanceTime;\\r\\n    uint256 public burnTime;\\r\\n    bool public status;\\r\\n    uint256 public starttime;\\r\\n    uint256 public totalBurnedTokens;\\r\\n        \\r\\n    constructor () {\\r\\n        _marketCap = 300_000_000 * (10 ** _decimals);\\r\\n        _totalSupply = 0;\\r\\n        status = true;\\r\\n\\r\\n        issuanceTime = starttime;\\r\\n        issuanceIndex = 0;\\r\\n        totalBurnedTokens = 0;\\r\\n        _distributed = new bool[](8);\\r\\n        for(uint i = 0; i < 8; i++) _distributed[i] = false;\\r\\n    }\\r\\n\\r\\n    modifier onlyStopper() {\\r\\n        require(_msgSender() == PauseWallet, \\\"VELAMIS: caller isn't stopper of the contract\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyManager() {\\r\\n        require(_msgSender() == ManageWallet, \\\"VELAMIS: caller isn't manager of the contract\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRunning() {\\r\\n        require(status, \\\"VELAMIS: contract is stopped\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function pauseContract() external onlyStopper {\\r\\n        status = false;\\r\\n    }\\r\\n\\r\\n    function issueTokens() external onlyManager isRunning{\\r\\n        require(issuanceIndex <= 20, \\\"VELAMIS: token issuace is ended\\\");\\r\\n        require(block.timestamp >= issuanceTime, \\\"VELAMIS: it isn't the issuace time now\\\");\\r\\n        uint256 amount;\\r\\n        if(issuanceIndex > 0) amount = _marketCap * (IssuancePercent[issuanceIndex] - IssuancePercent[issuanceIndex -1]) / 10000;\\r\\n        else amount = _marketCap * IssuancePercent[issuanceIndex] / 10000;\\r\\n        _balances[ManageWallet] += amount;\\r\\n        _totalSupply += amount;\\r\\n        issuanceTime += intervalIssuance;\\r\\n        issuanceIndex = issuanceIndex + 1;\\r\\n        emit Transfer(address(0), ManageWallet, amount);\\r\\n    }\\r\\n\\r\\n    function distributeTokens(uint8 index) external onlyManager isRunning{\\r\\n        require(index < 8, \\\"VELAMIS: index must be less than 8.\\\");\\r\\n        require(!_distributed[index], \\\"VELAMIS: distribution with this index had already done.\\\");\\r\\n        address wallet;\\r\\n        uint percent;\\r\\n        if(index == 0) { wallet = PrivSaleWallet; percent = PrivSalePercent;}\\r\\n        else if(index == 1) { wallet = PubSaleWallet; percent = PubSalePercent;}\\r\\n        else if(index == 2) { wallet = AdvisoryWallet; percent = AdvisoryPercent;}\\r\\n        else if(index == 3) { wallet = TeamWallet; percent = TeamPercent;}\\r\\n        else if(index == 4) { wallet = EcoGrowthWallet; percent = EcoGrowthPercent;}\\r\\n        else if(index == 5) { wallet = CompanyWallet; percent = CompanyPercent;}\\r\\n        else if(index == 6) { wallet = TreasuryWallet; percent = TreasuryPercent;}\\r\\n        else if(index == 7) { wallet = StakingRewardWallet; percent = StakingRewardPercent;}\\r\\n\\r\\n        uint256 amount = _marketCap * percent / 100;\\r\\n        _transfer(ManageWallet, wallet, amount);\\r\\n    }\\r\\n\\r\\n    function burnTokens(uint256 amount) external onlyManager isRunning{\\r\\n        uint256 _burnamount = amount * burnFee / 100;\\r\\n        uint256 maxBurnedTokens = _marketCap * 50 / 100;\\r\\n        require(totalBurnedTokens < maxBurnedTokens, \\\"VELAMIS: tokens have already burned\\\");\\r\\n        if(totalBurnedTokens + _burnamount > maxBurnedTokens) _burnamount = maxBurnedTokens - totalBurnedTokens;\\r\\n        \\r\\n        _burn(ManageWallet, _burnamount);\\r\\n    }\\r\\n\\r\\n    function name() public view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public view override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n    function transfer(address to, uint256 amount) public override isRunning returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _transfer(owner, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) public view override isRunning returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) public override isRunning returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public override isRunning returns (bool) {\\r\\n        address spender = _msgSender();\\r\\n        _spendAllowance(from, spender, amount);\\r\\n        _transfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public isRunning returns (bool)  {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public isRunning returns (bool)  {\\r\\n        address owner = _msgSender();\\r\\n        uint256 currentAllowance = _allowances[owner][spender];\\r\\n        require(currentAllowance >= subtractedValue, \\\"VELAMIS: decreased allowance below zero\\\");\\r\\n        unchecked {\\r\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal {\\r\\n        require(from != address(0), \\\"VELAMIS: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"VELAMIS: transfer to the zero address\\\");\\r\\n\\r\\n        uint256 fromBalance = _balances[from];\\r\\n        require(fromBalance >= amount, \\\"VELAMIS: transfer amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[from] = fromBalance - amount;\\r\\n        }\\r\\n        _balances[to] += amount;\\r\\n\\r\\n        emit Transfer(from, to, amount);\\r\\n\\r\\n    }\\r\\n\\r\\n    function _burn(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"VELAMIS: burn from the zero address\\\");\\r\\n\\r\\n        uint256 accountBalance = _balances[account];\\r\\n        require(accountBalance >= amount, \\\"VELAMIS: burn amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[account] = accountBalance - amount;\\r\\n        }\\r\\n        _totalSupply -= amount;\\r\\n\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal {\\r\\n        require(owner != address(0), \\\"VELAMIS: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"VELAMIS: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal {\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        if (currentAllowance != type(uint256).max) {\\r\\n            require(currentAllowance >= amount, \\\"VELAMIS: insufficient allowance\\\");\\r\\n            unchecked {\\r\\n                _approve(owner, spender, currentAllowance - amount);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0xd8e754d84348f79a6d71d912b3e9c73f9af79ab21b64a7b7ad4b25366e32e1bc\",\"license\":\"GPL-3.0\"},\"contracts/libs/Address.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nlibrary Address {\\r\\n    /**\\r\\n     * @dev Returns true if `account` is a contract.\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * It is unsafe to assume that an address for which this function returns\\r\\n     * false is an externally-owned account (EOA) and not a contract.\\r\\n     *\\r\\n     * Among others, `isContract` will return false for the following\\r\\n     * types of addresses:\\r\\n     *\\r\\n     *  - an externally-owned account\\r\\n     *  - a contract in construction\\r\\n     *  - an address where a contract will be created\\r\\n     *  - an address where a contract lived, but was destroyed\\r\\n     * ====\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\r\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\r\\n        // for accounts without code, i.e. `keccak256('')`\\r\\n        bytes32 codehash;\\r\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly { codehash := extcodehash(account) }\\r\\n        return (codehash != accountHash && codehash != 0x0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\r\\n     * `recipient`, forwarding all available gas and reverting on errors.\\r\\n     *\\r\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\r\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\r\\n     * imposed by `transfer`, making them unable to receive funds via\\r\\n     * `transfer`. {sendValue} removes this limitation.\\r\\n     *\\r\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\r\\n     *\\r\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\r\\n     * taken to not create reentrancy vulnerabilities. Consider using\\r\\n     * {ReentrancyGuard} or the\\r\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\r\\n     */\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\r\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\r\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a Solidity function call using a low level `call`. A\\r\\n     * plain`call` is an unsafe replacement for a function call: use this\\r\\n     * function instead.\\r\\n     *\\r\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\r\\n     * function (like regular Solidity function calls).\\r\\n     *\\r\\n     * Returns the raw returned data. To convert to the expected return value,\\r\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `target` must be a contract.\\r\\n     * - calling `target` with `data` must not revert.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\r\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\r\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but also transferring `value` wei to `target`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - the calling contract must have an ETH balance of at least `value`.\\r\\n     * - the called Solidity function must be `payable`.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\r\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\r\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\r\\n        return _functionCallWithValue(target, data, value, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                // solhint-disable-next-line no-inline-assembly\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0x726a176c571be74cdf502c447fb39a636c83c682dafd22ab777a78b08b9dd780\",\"license\":\"GPL-3.0\"},\"contracts/libs/Context.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address payable) {\\r\\n        return payable(msg.sender);\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x81a877088a40fd7f3172cd187585c7944cd29f29ffba2700baa073a6aa164fa8\",\"license\":\"GPL-3.0\"},\"contracts/libs/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\",\"keccak256\":\"0x9b2f4aa030ee541c83d848ad5db3f2e82e722a2cdc4f1ea865825d43c9cd72f2\",\"license\":\"GPL-3.0\"},\"contracts/libs/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x815af818c7c130218ad03302526c7c5133746185f07fc6db71b02d9ce5b14a0d\",\"license\":\"GPL-3.0\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 94,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "IssuancePercent",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "astId": 98,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "_balances",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 104,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "_allowances",
                "offset": 0,
                "slot": "2",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
              },
              {
                "astId": 107,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "_name",
                "offset": 0,
                "slot": "3",
                "type": "t_string_storage"
              },
              {
                "astId": 110,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "_symbol",
                "offset": 0,
                "slot": "4",
                "type": "t_string_storage"
              },
              {
                "astId": 113,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "_decimals",
                "offset": 0,
                "slot": "5",
                "type": "t_uint8"
              },
              {
                "astId": 115,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "_totalSupply",
                "offset": 0,
                "slot": "6",
                "type": "t_uint256"
              },
              {
                "astId": 117,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "_marketCap",
                "offset": 0,
                "slot": "7",
                "type": "t_uint256"
              },
              {
                "astId": 120,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "_distributed",
                "offset": 0,
                "slot": "8",
                "type": "t_array(t_bool)dyn_storage"
              },
              {
                "astId": 123,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "burnFee",
                "offset": 0,
                "slot": "9",
                "type": "t_uint256"
              },
              {
                "astId": 133,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "issuanceIndex",
                "offset": 0,
                "slot": "10",
                "type": "t_uint256"
              },
              {
                "astId": 135,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "issuanceTime",
                "offset": 0,
                "slot": "11",
                "type": "t_uint256"
              },
              {
                "astId": 137,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "burnTime",
                "offset": 0,
                "slot": "12",
                "type": "t_uint256"
              },
              {
                "astId": 139,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "status",
                "offset": 0,
                "slot": "13",
                "type": "t_bool"
              },
              {
                "astId": 141,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "starttime",
                "offset": 0,
                "slot": "14",
                "type": "t_uint256"
              },
              {
                "astId": 143,
                "contract": "contracts/VELAMIS.sol:Velamis",
                "label": "totalBurnedTokens",
                "offset": 0,
                "slot": "15",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_bool)dyn_storage": {
                "base": "t_bool",
                "encoding": "dynamic_array",
                "label": "bool[]",
                "numberOfBytes": "32"
              },
              "t_array(t_uint256)dyn_storage": {
                "base": "t_uint256",
                "encoding": "dynamic_array",
                "label": "uint256[]",
                "numberOfBytes": "32"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(address => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_uint256)"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              },
              "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/libs/Address.sol": {
        "Address": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099336662cb97d8af24768bd928607d9a66b92e9622fd42c567ce90a3ce9c544a64736f6c634300080a0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 CALLER PUSH7 0x62CB97D8AF2476 DUP12 0xD9 0x28 PUSH1 0x7D SWAP11 PUSH7 0xB92E9622FD42C5 PUSH8 0xCE90A3CE9C544A64 PUSH20 0x6F6C634300080A00330000000000000000000000 ",
              "sourceMap": "66:6084:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;66:6084:1;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099336662cb97d8af24768bd928607d9a66b92e9622fd42c567ce90a3ce9c544a64736f6c634300080a0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 CALLER PUSH7 0x62CB97D8AF2476 DUP12 0xD9 0x28 PUSH1 0x7D SWAP11 PUSH7 0xB92E9622FD42C5 PUSH8 0xCE90A3CE9C544A64 PUSH20 0x6F6C634300080A00330000000000000000000000 ",
              "sourceMap": "66:6084:1:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
                "functionCall(address,bytes memory)": "infinite",
                "functionCall(address,bytes memory,string memory)": "infinite",
                "functionCallWithValue(address,bytes memory,uint256)": "infinite",
                "functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
                "isContract(address)": "infinite",
                "sendValue(address payable,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/Address.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nlibrary Address {\\r\\n    /**\\r\\n     * @dev Returns true if `account` is a contract.\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * It is unsafe to assume that an address for which this function returns\\r\\n     * false is an externally-owned account (EOA) and not a contract.\\r\\n     *\\r\\n     * Among others, `isContract` will return false for the following\\r\\n     * types of addresses:\\r\\n     *\\r\\n     *  - an externally-owned account\\r\\n     *  - a contract in construction\\r\\n     *  - an address where a contract will be created\\r\\n     *  - an address where a contract lived, but was destroyed\\r\\n     * ====\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\r\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\r\\n        // for accounts without code, i.e. `keccak256('')`\\r\\n        bytes32 codehash;\\r\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly { codehash := extcodehash(account) }\\r\\n        return (codehash != accountHash && codehash != 0x0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\r\\n     * `recipient`, forwarding all available gas and reverting on errors.\\r\\n     *\\r\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\r\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\r\\n     * imposed by `transfer`, making them unable to receive funds via\\r\\n     * `transfer`. {sendValue} removes this limitation.\\r\\n     *\\r\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\r\\n     *\\r\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\r\\n     * taken to not create reentrancy vulnerabilities. Consider using\\r\\n     * {ReentrancyGuard} or the\\r\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\r\\n     */\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\r\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\r\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a Solidity function call using a low level `call`. A\\r\\n     * plain`call` is an unsafe replacement for a function call: use this\\r\\n     * function instead.\\r\\n     *\\r\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\r\\n     * function (like regular Solidity function calls).\\r\\n     *\\r\\n     * Returns the raw returned data. To convert to the expected return value,\\r\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `target` must be a contract.\\r\\n     * - calling `target` with `data` must not revert.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\r\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\r\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but also transferring `value` wei to `target`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - the calling contract must have an ETH balance of at least `value`.\\r\\n     * - the called Solidity function must be `payable`.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\r\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\r\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\r\\n        return _functionCallWithValue(target, data, value, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                // solhint-disable-next-line no-inline-assembly\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0x726a176c571be74cdf502c447fb39a636c83c682dafd22ab777a78b08b9dd780\",\"license\":\"GPL-3.0\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/libs/Context.sol": {
        "Context": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/Context.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address payable) {\\r\\n        return payable(msg.sender);\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x81a877088a40fd7f3172cd187585c7944cd29f29ffba2700baa073a6aa164fa8\",\"license\":\"GPL-3.0\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/libs/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\",\"keccak256\":\"0x9b2f4aa030ee541c83d848ad5db3f2e82e722a2cdc4f1ea865825d43c9cd72f2\",\"license\":\"GPL-3.0\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/libs/SafeMath.sol": {
        "SafeMath": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201696a34495f62b1c98966f4470529a90381a506cbf22190cc95ba57d06a4444764736f6c634300080a0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND SWAP7 LOG3 DIFFICULTY SWAP6 0xF6 0x2B SHR SWAP9 SWAP7 PUSH16 0x4470529A90381A506CBF22190CC95BA5 PUSH30 0x6A4444764736F6C634300080A0033000000000000000000000000000000 ",
              "sourceMap": "65:4719:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;65:4719:4;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201696a34495f62b1c98966f4470529a90381a506cbf22190cc95ba57d06a4444764736f6c634300080a0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND SWAP7 LOG3 DIFFICULTY SWAP6 0xF6 0x2B SHR SWAP9 SWAP7 PUSH16 0x4470529A90381A506CBF22190CC95BA5 PUSH30 0x6A4444764736F6C634300080A0033000000000000000000000000000000 ",
              "sourceMap": "65:4719:4:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "add(uint256,uint256)": "infinite",
                "div(uint256,uint256)": "infinite",
                "div(uint256,uint256,string memory)": "infinite",
                "mod(uint256,uint256)": "infinite",
                "mod(uint256,uint256,string memory)": "infinite",
                "mul(uint256,uint256)": "infinite",
                "sub(uint256,uint256)": "infinite",
                "sub(uint256,uint256,string memory)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x815af818c7c130218ad03302526c7c5133746185f07fc6db71b02d9ce5b14a0d\",\"license\":\"GPL-3.0\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/VELAMIS.sol": {
        "ast": {
          "absolutePath": "contracts/VELAMIS.sol",
          "exportedSymbols": {
            "Address": [
              1161
            ],
            "Context": [
              1187
            ],
            "IERC20": [
              1256
            ],
            "SafeMath": [
              1451
            ],
            "Velamis": [
              958
            ]
          },
          "id": 959,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "absolutePath": "contracts/libs/IERC20.sol",
              "file": "./libs/IERC20.sol",
              "id": 1,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 959,
              "sourceUnit": 1257,
              "src": "0:27:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libs/SafeMath.sol",
              "file": "./libs/SafeMath.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 959,
              "sourceUnit": 1452,
              "src": "29:29:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libs/Address.sol",
              "file": "./libs/Address.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 959,
              "sourceUnit": 1162,
              "src": "60:28:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libs/Context.sol",
              "file": "./libs/Context.sol",
              "id": 4,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 959,
              "sourceUnit": 1188,
              "src": "90:28:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "id": 5,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "161:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 6,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1187,
                    "src": "208:7:0"
                  },
                  "id": 7,
                  "nodeType": "InheritanceSpecifier",
                  "src": "208:7:0"
                },
                {
                  "baseName": {
                    "id": 8,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1256,
                    "src": "217:6:0"
                  },
                  "id": 9,
                  "nodeType": "InheritanceSpecifier",
                  "src": "217:6:0"
                }
              ],
              "canonicalName": "Velamis",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 958,
              "linearizedBaseContracts": [
                958,
                1256,
                1187
              ],
              "name": "Velamis",
              "nameLocation": "197:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 12,
                  "libraryName": {
                    "id": 10,
                    "name": "SafeMath",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1451,
                    "src": "237:8:0"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "231:27:0",
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "id": 15,
                  "libraryName": {
                    "id": 13,
                    "name": "Address",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1161,
                    "src": "270:7:0"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "264:26:0",
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "282:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                {
                  "constant": true,
                  "functionSelector": "087140d4",
                  "id": 18,
                  "mutability": "constant",
                  "name": "ManageWallet",
                  "nameLocation": "322:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "298:81:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307836373432653832383236663033463639423436443836464632416661663837304639413138386336",
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "337:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x6742e82826f03F69B46D86FF2Afaf870F9A188c6"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "5084ae15",
                  "id": 21,
                  "mutability": "constant",
                  "name": "PrivSaleWallet",
                  "nameLocation": "410:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "386:83:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307832663630396339323063373835333562463361453632423932666662313331436233376230334542",
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "427:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x2f609c920c78535bF3aE62B92ffb131Cb37b03EB"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "27a5331e",
                  "id": 24,
                  "mutability": "constant",
                  "name": "PubSaleWallet",
                  "nameLocation": "500:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "476:82:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307864304244633134663634353735313136353545323239306335364664416435613346393644646561",
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "516:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xd0BDc14f6457511655E2290c56FdAd5a3F96Ddea"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "8b8cb114",
                  "id": 27,
                  "mutability": "constant",
                  "name": "AdvisoryWallet",
                  "nameLocation": "589:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "565:83:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307831666132353762356141323165323162443666613066343231363338363631623841343232393032",
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "606:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x1fa257b5aA21e21bD6fa0f421638661b8A422902"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "677a8870",
                  "id": 30,
                  "mutability": "constant",
                  "name": "TeamWallet",
                  "nameLocation": "679:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "655:79:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307837446538453262376639323142613234333435344233303430363037366138394644663763333433",
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "692:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x7De8E2b7f921Ba243454B30406076a89FDf7c343"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "7ba06d78",
                  "id": 33,
                  "mutability": "constant",
                  "name": "EcoGrowthWallet",
                  "nameLocation": "765:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "741:84:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307835623538453544463339354638374365306364324136373762396134384362623763423361383433",
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "783:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x5b58E5DF395F87Ce0cd2A677b9a48Cbb7cB3a843"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "f4dd6626",
                  "id": 36,
                  "mutability": "constant",
                  "name": "CompanyWallet",
                  "nameLocation": "856:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "832:82:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307833333334333143646165373337436431424636616432364332326534343337303037313064383139",
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "872:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x333431Cdae737Cd1BF6ad26C22e443700710d819"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "11ffeaf2",
                  "id": 39,
                  "mutability": "constant",
                  "name": "TreasuryWallet",
                  "nameLocation": "945:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "921:83:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307841394544394338354137436331304544334362343339393334613235443733374336623864303036",
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "962:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xA9ED9C85A7Cc10ED3Cb439934a25D737C6b8d006"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "09c03d52",
                  "id": 42,
                  "mutability": "constant",
                  "name": "StakingRewardWallet",
                  "nameLocation": "1035:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1011:88:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307834346137434339373632433236373138306530453039643536613834443730363239323538653239",
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1057:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x44a7CC9762C267180e0E09d56a84D70629258e29"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "db0bbaf3",
                  "id": 45,
                  "mutability": "constant",
                  "name": "PauseWallet",
                  "nameLocation": "1130:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1106:80:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307831333230304330464143353433653541376638353739316536354265613033386645366545323564",
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1144:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x13200C0FAC543e5A7f85791e65Bea038fE6eE25d"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "384d4241",
                  "id": 48,
                  "mutability": "constant",
                  "name": "PrivSalePercent",
                  "nameLocation": "1216:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1195:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1195:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "35",
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1234:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5_by_1",
                      "typeString": "int_const 5"
                    },
                    "value": "5"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "fe738f67",
                  "id": 51,
                  "mutability": "constant",
                  "name": "PubSalePercent",
                  "nameLocation": "1263:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1242:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130",
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1280:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "af6cb99e",
                  "id": 54,
                  "mutability": "constant",
                  "name": "AdvisoryPercent",
                  "nameLocation": "1310:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1289:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "35",
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1328:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5_by_1",
                      "typeString": "int_const 5"
                    },
                    "value": "5"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "56b05a2a",
                  "id": 57,
                  "mutability": "constant",
                  "name": "TeamPercent",
                  "nameLocation": "1357:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1336:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1336:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "35",
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1371:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5_by_1",
                      "typeString": "int_const 5"
                    },
                    "value": "5"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "676d0e8a",
                  "id": 60,
                  "mutability": "constant",
                  "name": "EcoGrowthPercent",
                  "nameLocation": "1400:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1379:42:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130",
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1419:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "a4be4b02",
                  "id": 63,
                  "mutability": "constant",
                  "name": "CompanyPercent",
                  "nameLocation": "1449:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1428:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3230",
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1466:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "80c76384",
                  "id": 66,
                  "mutability": "constant",
                  "name": "TreasuryPercent",
                  "nameLocation": "1496:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1475:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3235",
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1514:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_25_by_1",
                      "typeString": "int_const 25"
                    },
                    "value": "25"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "50d1197e",
                  "id": 69,
                  "mutability": "constant",
                  "name": "StakingRewardPercent",
                  "nameLocation": "1544:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1523:46:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3230",
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1567:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7fc51ee1",
                  "id": 94,
                  "mutability": "mutable",
                  "name": "IssuancePercent",
                  "nameLocation": "1592:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1578:195:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 70,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1578:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 71,
                    "nodeType": "ArrayTypeName",
                    "src": "1578:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": {
                    "components": [
                      {
                        "hexValue": "32323232",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1621:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2222_by_1",
                          "typeString": "int_const 2222"
                        },
                        "value": "2222"
                      },
                      {
                        "hexValue": "32333937",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1627:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2397_by_1",
                          "typeString": "int_const 2397"
                        },
                        "value": "2397"
                      },
                      {
                        "hexValue": "33303430",
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1633:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3040_by_1",
                          "typeString": "int_const 3040"
                        },
                        "value": "3040"
                      },
                      {
                        "hexValue": "33323934",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1639:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3294_by_1",
                          "typeString": "int_const 3294"
                        },
                        "value": "3294"
                      },
                      {
                        "hexValue": "34323533",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1645:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4253_by_1",
                          "typeString": "int_const 4253"
                        },
                        "value": "4253"
                      },
                      {
                        "hexValue": "34353037",
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1651:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4507_by_1",
                          "typeString": "int_const 4507"
                        },
                        "value": "4507"
                      },
                      {
                        "hexValue": "35343431",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1657:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5441_by_1",
                          "typeString": "int_const 5441"
                        },
                        "value": "5441"
                      },
                      {
                        "hexValue": "35363233",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1673:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5623_by_1",
                          "typeString": "int_const 5623"
                        },
                        "value": "5623"
                      },
                      {
                        "hexValue": "36343334",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1679:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6434_by_1",
                          "typeString": "int_const 6434"
                        },
                        "value": "6434"
                      },
                      {
                        "hexValue": "36363135",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1685:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6615_by_1",
                          "typeString": "int_const 6615"
                        },
                        "value": "6615"
                      },
                      {
                        "hexValue": "37333238",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1691:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7328_by_1",
                          "typeString": "int_const 7328"
                        },
                        "value": "7328"
                      },
                      {
                        "hexValue": "37343535",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1697:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7455_by_1",
                          "typeString": "int_const 7455"
                        },
                        "value": "7455"
                      },
                      {
                        "hexValue": "38303135",
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1703:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8015_by_1",
                          "typeString": "int_const 8015"
                        },
                        "value": "8015"
                      },
                      {
                        "hexValue": "38313432",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1709:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8142_by_1",
                          "typeString": "int_const 8142"
                        },
                        "value": "8142"
                      },
                      {
                        "hexValue": "38363930",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1725:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8690_by_1",
                          "typeString": "int_const 8690"
                        },
                        "value": "8690"
                      },
                      {
                        "hexValue": "38373831",
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1731:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8781_by_1",
                          "typeString": "int_const 8781"
                        },
                        "value": "8781"
                      },
                      {
                        "hexValue": "39323334",
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1737:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9234_by_1",
                          "typeString": "int_const 9234"
                        },
                        "value": "9234"
                      },
                      {
                        "hexValue": "39383037",
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1743:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9807_by_1",
                          "typeString": "int_const 9807"
                        },
                        "value": "9807"
                      },
                      {
                        "hexValue": "39383739",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1749:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9879_by_1",
                          "typeString": "int_const 9879"
                        },
                        "value": "9879"
                      },
                      {
                        "hexValue": "39393532",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1755:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9952_by_1",
                          "typeString": "int_const 9952"
                        },
                        "value": "9952"
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1761:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "id": 93,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1610:163:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$21_memory_ptr",
                      "typeString": "uint16[21] memory"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1818:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1782:45:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 97,
                    "keyType": {
                      "id": 95,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1790:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1782:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 96,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1801:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1892:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1834:69:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 103,
                    "keyType": {
                      "id": 99,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1843:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1834:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 102,
                      "keyType": {
                        "id": 100,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1863:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1854:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 101,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1874:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1927:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1912:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1912:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "56454c414d4953",
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1935:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a48dee2717d122be32b33d956fca75d95037bc00639fec596374d459ef2e4887",
                      "typeString": "literal_string \"VELAMIS\""
                    },
                    "value": "VELAMIS"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1966:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1951:30:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1951:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "56454c",
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1976:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9ce689acbd93a404bc78b99ee7355e9bc62360e73cb1809520cfc253d61481de",
                      "typeString": "literal_string \"VEL\""
                    },
                    "value": "VEL"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "2002:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "1988:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1988:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "3138",
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2014:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "2039:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "2023:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "_marketCap",
                  "nameLocation": "2074:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "2058:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_distributed",
                  "nameLocation": "2106:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "2091:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 118,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2091:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 119,
                    "nodeType": "ArrayTypeName",
                    "src": "2091:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "fce589d8",
                  "id": 123,
                  "mutability": "mutable",
                  "name": "burnFee",
                  "nameLocation": "2143:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "2128:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130",
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2153:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "4b18e642",
                  "id": 130,
                  "mutability": "constant",
                  "name": "intervalIssuance",
                  "nameLocation": "2198:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "2174:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2174:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_2592000_by_1",
                      "typeString": "int_const 2592000"
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_720_by_1",
                        "typeString": "int_const 720"
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3330",
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2217:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3234",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2222:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24_by_1",
                          "typeString": "int_const 24"
                        },
                        "value": "24"
                      },
                      "src": "2217:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_720_by_1",
                        "typeString": "int_const 720"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "33363030",
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2227:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3600_by_1",
                        "typeString": "int_const 3600"
                      },
                      "value": "3600"
                    },
                    "src": "2217:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2592000_by_1",
                      "typeString": "int_const 2592000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "2bdcdb78",
                  "id": 133,
                  "mutability": "mutable",
                  "name": "issuanceIndex",
                  "nameLocation": "2251:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "2239:29:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2239:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2267:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d1d8523a",
                  "id": 135,
                  "mutability": "mutable",
                  "name": "issuanceTime",
                  "nameLocation": "2290:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "2275:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2275:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ebf6cf9b",
                  "id": 137,
                  "mutability": "mutable",
                  "name": "burnTime",
                  "nameLocation": "2324:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "2309:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "200d2ed2",
                  "id": 139,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "2351:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "2339:18:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8da58897",
                  "id": 141,
                  "mutability": "mutable",
                  "name": "starttime",
                  "nameLocation": "2379:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "2364:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2364:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "555f323a",
                  "id": 143,
                  "mutability": "mutable",
                  "name": "totalBurnedTokens",
                  "nameLocation": "2410:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "2395:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2395:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 200,
                    "nodeType": "Block",
                    "src": "2459:312:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 146,
                            "name": "_marketCap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "2470:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3330305f3030305f303030",
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2483:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_300000000_by_1",
                                "typeString": "int_const 300000000"
                              },
                              "value": "300_000_000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 150,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 148,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2498:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "id": 149,
                                    "name": "_decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 113,
                                    "src": "2504:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "2498:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 151,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2497:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2483:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2470:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 154,
                        "nodeType": "ExpressionStatement",
                        "src": "2470:44:0"
                      },
                      {
                        "expression": {
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 155,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "2525:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2540:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2525:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 158,
                        "nodeType": "ExpressionStatement",
                        "src": "2525:16:0"
                      },
                      {
                        "expression": {
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 159,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "2552:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2561:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2552:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "2552:13:0"
                      },
                      {
                        "expression": {
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 163,
                            "name": "issuanceTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "2578:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 164,
                            "name": "starttime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "2593:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2578:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 166,
                        "nodeType": "ExpressionStatement",
                        "src": "2578:24:0"
                      },
                      {
                        "expression": {
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 167,
                            "name": "issuanceIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "2613:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2629:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2613:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 170,
                        "nodeType": "ExpressionStatement",
                        "src": "2613:17:0"
                      },
                      {
                        "expression": {
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 171,
                            "name": "totalBurnedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "2641:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2661:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2641:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 174,
                        "nodeType": "ExpressionStatement",
                        "src": "2641:21:0"
                      },
                      {
                        "expression": {
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 175,
                            "name": "_distributed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "2673:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                              "typeString": "bool[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "38",
                                "id": 179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2699:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                "value": "8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                }
                              ],
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "2688:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bool[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 176,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2692:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 177,
                                "nodeType": "ArrayTypeName",
                                "src": "2692:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                                  "typeString": "bool[]"
                                }
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2688:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                              "typeString": "bool[] memory"
                            }
                          },
                          "src": "2673:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                            "typeString": "bool[] storage ref"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "2673:28:0"
                      },
                      {
                        "body": {
                          "expression": {
                            "id": 197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 193,
                                "name": "_distributed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 120,
                                "src": "2740:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                                  "typeString": "bool[] storage ref"
                                }
                              },
                              "id": 195,
                              "indexExpression": {
                                "id": 194,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 184,
                                "src": "2753:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "2740:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "66616c7365",
                              "id": 196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2758:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "src": "2740:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 198,
                          "nodeType": "ExpressionStatement",
                          "src": "2740:23:0"
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 187,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "2728:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "38",
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2732:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "2728:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 199,
                        "initializationExpression": {
                          "assignments": [
                            184
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 184,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2721:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 199,
                              "src": "2716:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 183,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2716:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 186,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2725:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2716:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2735:3:0",
                            "subExpression": {
                              "id": 190,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 184,
                              "src": "2735:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 192,
                          "nodeType": "ExpressionStatement",
                          "src": "2735:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "2712:51:0"
                      }
                    ]
                  },
                  "id": 201,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 144,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2456:2:0"
                  },
                  "returnParameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2459:0:0"
                  },
                  "scope": 958,
                  "src": "2444:327:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 212,
                    "nodeType": "Block",
                    "src": "2802:116:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 204,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1175,
                                  "src": "2821:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2821:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 206,
                                "name": "PauseWallet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "2837:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2821:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a2063616c6c65722069736e27742073746f70706572206f662074686520636f6e7472616374",
                              "id": 208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2850:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94061dca4c6f971d99a3a169b72c202a7a874bf37640204ae0d787eaea316846",
                                "typeString": "literal_string \"VELAMIS: caller isn't stopper of the contract\""
                              },
                              "value": "VELAMIS: caller isn't stopper of the contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_94061dca4c6f971d99a3a169b72c202a7a874bf37640204ae0d787eaea316846",
                                "typeString": "literal_string \"VELAMIS: caller isn't stopper of the contract\""
                              }
                            ],
                            "id": 203,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2813:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2813:85:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 210,
                        "nodeType": "ExpressionStatement",
                        "src": "2813:85:0"
                      },
                      {
                        "id": 211,
                        "nodeType": "PlaceholderStatement",
                        "src": "2909:1:0"
                      }
                    ]
                  },
                  "id": 213,
                  "name": "onlyStopper",
                  "nameLocation": "2788:11:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2799:2:0"
                  },
                  "src": "2779:139:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 224,
                    "nodeType": "Block",
                    "src": "2949:117:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 216,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1175,
                                  "src": "2968:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2968:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 218,
                                "name": "ManageWallet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "2984:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2968:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a2063616c6c65722069736e2774206d616e61676572206f662074686520636f6e7472616374",
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2998:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2595855677c676e4636727198ac1099ded92471c34742cb5eb2b3fb6a9ca9e16",
                                "typeString": "literal_string \"VELAMIS: caller isn't manager of the contract\""
                              },
                              "value": "VELAMIS: caller isn't manager of the contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2595855677c676e4636727198ac1099ded92471c34742cb5eb2b3fb6a9ca9e16",
                                "typeString": "literal_string \"VELAMIS: caller isn't manager of the contract\""
                              }
                            ],
                            "id": 215,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2960:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2960:86:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 222,
                        "nodeType": "ExpressionStatement",
                        "src": "2960:86:0"
                      },
                      {
                        "id": 223,
                        "nodeType": "PlaceholderStatement",
                        "src": "3057:1:0"
                      }
                    ]
                  },
                  "id": 225,
                  "name": "onlyManager",
                  "nameLocation": "2935:11:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2946:2:0"
                  },
                  "src": "2926:140:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 233,
                    "nodeType": "Block",
                    "src": "3095:78:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 228,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "3114:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a20636f6e74726163742069732073746f70706564",
                              "id": 229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3122:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_670428e70d473635c20c7ecf46404b96a5d849982ce1510df8418961dd6658df",
                                "typeString": "literal_string \"VELAMIS: contract is stopped\""
                              },
                              "value": "VELAMIS: contract is stopped"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_670428e70d473635c20c7ecf46404b96a5d849982ce1510df8418961dd6658df",
                                "typeString": "literal_string \"VELAMIS: contract is stopped\""
                              }
                            ],
                            "id": 227,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3106:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3106:47:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 231,
                        "nodeType": "ExpressionStatement",
                        "src": "3106:47:0"
                      },
                      {
                        "id": 232,
                        "nodeType": "PlaceholderStatement",
                        "src": "3164:1:0"
                      }
                    ]
                  },
                  "id": 234,
                  "name": "isRunning",
                  "nameLocation": "3083:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3092:2:0"
                  },
                  "src": "3074:99:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 243,
                    "nodeType": "Block",
                    "src": "3227:33:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 239,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "3238:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3247:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3238:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 242,
                        "nodeType": "ExpressionStatement",
                        "src": "3238:14:0"
                      }
                    ]
                  },
                  "functionSelector": "439766ce",
                  "id": 244,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 237,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 236,
                        "name": "onlyStopper",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 213,
                        "src": "3215:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3215:11:0"
                    }
                  ],
                  "name": "pauseContract",
                  "nameLocation": "3190:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3203:2:0"
                  },
                  "returnParameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3227:0:0"
                  },
                  "scope": 958,
                  "src": "3181:79:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 329,
                    "nodeType": "Block",
                    "src": "3321:629:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 252,
                                "name": "issuanceIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 133,
                                "src": "3340:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "3230",
                                "id": 253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3357:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_20_by_1",
                                  "typeString": "int_const 20"
                                },
                                "value": "20"
                              },
                              "src": "3340:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a20746f6b656e206973737561636520697320656e646564",
                              "id": 255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3361:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd40e61b488c01c22d36264138a37cb78a7710016dd3e4a0794cfa040c67148d",
                                "typeString": "literal_string \"VELAMIS: token issuace is ended\""
                              },
                              "value": "VELAMIS: token issuace is ended"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bd40e61b488c01c22d36264138a37cb78a7710016dd3e4a0794cfa040c67148d",
                                "typeString": "literal_string \"VELAMIS: token issuace is ended\""
                              }
                            ],
                            "id": 251,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3332:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3332:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 257,
                        "nodeType": "ExpressionStatement",
                        "src": "3332:63:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 259,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "3414:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3414:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 261,
                                "name": "issuanceTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 135,
                                "src": "3433:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3414:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a2069742069736e27742074686520697373756163652074696d65206e6f77",
                              "id": 263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3447:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_067172393de2fbfccf7f9043d055364f933eedba15a427fc4665ebd2df7faa30",
                                "typeString": "literal_string \"VELAMIS: it isn't the issuace time now\""
                              },
                              "value": "VELAMIS: it isn't the issuace time now"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_067172393de2fbfccf7f9043d055364f933eedba15a427fc4665ebd2df7faa30",
                                "typeString": "literal_string \"VELAMIS: it isn't the issuace time now\""
                              }
                            ],
                            "id": 258,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3406:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3406:82:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 265,
                        "nodeType": "ExpressionStatement",
                        "src": "3406:82:0"
                      },
                      {
                        "assignments": [
                          267
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 267,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "3507:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 329,
                            "src": "3499:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 266,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3499:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 268,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3499:14:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 269,
                            "name": "issuanceIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "3527:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3543:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3527:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "id": 297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 289,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "3660:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 290,
                                  "name": "_marketCap",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 117,
                                  "src": "3669:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 291,
                                    "name": "IssuancePercent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "3682:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 293,
                                  "indexExpression": {
                                    "id": 292,
                                    "name": "issuanceIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 133,
                                    "src": "3698:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3682:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3669:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3130303030",
                                "id": 295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3715:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                },
                                "value": "10000"
                              },
                              "src": "3669:51:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3660:60:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 298,
                          "nodeType": "ExpressionStatement",
                          "src": "3660:60:0"
                        },
                        "id": 299,
                        "nodeType": "IfStatement",
                        "src": "3524:196:0",
                        "trueBody": {
                          "expression": {
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 272,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "3546:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 273,
                                  "name": "_marketCap",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 117,
                                  "src": "3555:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 282,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 274,
                                          "name": "IssuancePercent",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 94,
                                          "src": "3569:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 276,
                                        "indexExpression": {
                                          "id": 275,
                                          "name": "issuanceIndex",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 133,
                                          "src": "3585:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3569:30:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "baseExpression": {
                                          "id": 277,
                                          "name": "IssuancePercent",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 94,
                                          "src": "3602:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 281,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 280,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 278,
                                            "name": "issuanceIndex",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 133,
                                            "src": "3618:13:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 279,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3633:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "3618:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3602:33:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3569:66:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 283,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3568:68:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3555:81:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3130303030",
                                "id": 285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3639:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                },
                                "value": "10000"
                              },
                              "src": "3555:89:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3546:98:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 288,
                          "nodeType": "ExpressionStatement",
                          "src": "3546:98:0"
                        }
                      },
                      {
                        "expression": {
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 300,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "3731:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 302,
                            "indexExpression": {
                              "id": 301,
                              "name": "ManageWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "3741:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3731:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 303,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 267,
                            "src": "3758:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3731:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 305,
                        "nodeType": "ExpressionStatement",
                        "src": "3731:33:0"
                      },
                      {
                        "expression": {
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 306,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "3775:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 307,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 267,
                            "src": "3791:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3775:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 309,
                        "nodeType": "ExpressionStatement",
                        "src": "3775:22:0"
                      },
                      {
                        "expression": {
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 310,
                            "name": "issuanceTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3808:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 311,
                            "name": "intervalIssuance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "3824:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3808:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 313,
                        "nodeType": "ExpressionStatement",
                        "src": "3808:32:0"
                      },
                      {
                        "expression": {
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 314,
                            "name": "issuanceIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "3851:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 315,
                              "name": "issuanceIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3867:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3883:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3867:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3851:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "3851:33:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3917:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3909:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 321,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3909:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3909:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 325,
                              "name": "ManageWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "3921:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 326,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "3935:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 320,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1247,
                            "src": "3900:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3900:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 328,
                        "nodeType": "EmitStatement",
                        "src": "3895:47:0"
                      }
                    ]
                  },
                  "functionSelector": "60ab5852",
                  "id": 330,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 247,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 246,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 225,
                        "src": "3300:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3300:11:0"
                    },
                    {
                      "id": 249,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 248,
                        "name": "isRunning",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 234,
                        "src": "3312:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3312:9:0"
                    }
                  ],
                  "name": "issueTokens",
                  "nameLocation": "3277:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3288:2:0"
                  },
                  "returnParameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3321:0:0"
                  },
                  "scope": 958,
                  "src": "3268:682:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 478,
                    "nodeType": "Block",
                    "src": "4027:996:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 340,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 332,
                                "src": "4046:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "38",
                                "id": 341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4054:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                "value": "8"
                              },
                              "src": "4046:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a20696e646578206d757374206265206c657373207468616e20382e",
                              "id": 343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4057:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1b586be3285ee4cb9a07db93bcbb862c2202f6f92cae4f6e66a59a5460faed12",
                                "typeString": "literal_string \"VELAMIS: index must be less than 8.\""
                              },
                              "value": "VELAMIS: index must be less than 8."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1b586be3285ee4cb9a07db93bcbb862c2202f6f92cae4f6e66a59a5460faed12",
                                "typeString": "literal_string \"VELAMIS: index must be less than 8.\""
                              }
                            ],
                            "id": 339,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4038:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4038:57:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 345,
                        "nodeType": "ExpressionStatement",
                        "src": "4038:57:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4114:20:0",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 347,
                                  "name": "_distributed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 120,
                                  "src": "4115:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                                    "typeString": "bool[] storage ref"
                                  }
                                },
                                "id": 349,
                                "indexExpression": {
                                  "id": 348,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 332,
                                  "src": "4128:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4115:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a20646973747269627574696f6e2077697468207468697320696e6465782068616420616c726561647920646f6e652e",
                              "id": 351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4136:57:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c70a72069e15b047a7dbc6ba82c32a37bf4136e3229b2995b6db38db2700cc51",
                                "typeString": "literal_string \"VELAMIS: distribution with this index had already done.\""
                              },
                              "value": "VELAMIS: distribution with this index had already done."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c70a72069e15b047a7dbc6ba82c32a37bf4136e3229b2995b6db38db2700cc51",
                                "typeString": "literal_string \"VELAMIS: distribution with this index had already done.\""
                              }
                            ],
                            "id": 346,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4106:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:88:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 353,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:88:0"
                      },
                      {
                        "assignments": [
                          355
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 355,
                            "mutability": "mutable",
                            "name": "wallet",
                            "nameLocation": "4213:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 478,
                            "src": "4205:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 354,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4205:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 356,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4205:14:0"
                      },
                      {
                        "assignments": [
                          358
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 358,
                            "mutability": "mutable",
                            "name": "percent",
                            "nameLocation": "4235:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 478,
                            "src": "4230:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 357,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4230:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 359,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4230:12:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 360,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "4256:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4265:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4256:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 372,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 332,
                              "src": "4340:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4349:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4340:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 384,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 332,
                                "src": "4422:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4431:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "4422:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 396,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 332,
                                  "src": "4506:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "33",
                                  "id": 397,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4515:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "src": "4506:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 410,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 408,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 332,
                                    "src": "4582:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "34",
                                    "id": 409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4591:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    },
                                    "value": "4"
                                  },
                                  "src": "4582:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 422,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 420,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 332,
                                      "src": "4668:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "35",
                                      "id": 421,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4677:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_5_by_1",
                                        "typeString": "int_const 5"
                                      },
                                      "value": "5"
                                    },
                                    "src": "4668:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 434,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 432,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 332,
                                        "src": "4750:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 433,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4759:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "4750:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 446,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 444,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 332,
                                          "src": "4834:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "37",
                                          "id": 445,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4843:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_7_by_1",
                                            "typeString": "int_const 7"
                                          },
                                          "value": "7"
                                        },
                                        "src": "4834:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 456,
                                      "nodeType": "IfStatement",
                                      "src": "4831:79:0",
                                      "trueBody": {
                                        "id": 455,
                                        "nodeType": "Block",
                                        "src": "4846:64:0",
                                        "statements": [
                                          {
                                            "expression": {
                                              "id": 449,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "id": 447,
                                                "name": "wallet",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 355,
                                                "src": "4848:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "id": 448,
                                                "name": "StakingRewardWallet",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 42,
                                                "src": "4857:19:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "src": "4848:28:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "id": 450,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4848:28:0"
                                          },
                                          {
                                            "expression": {
                                              "id": 453,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "id": 451,
                                                "name": "percent",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 358,
                                                "src": "4878:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "id": 452,
                                                "name": "StakingRewardPercent",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 69,
                                                "src": "4888:20:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "4878:30:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 454,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4878:30:0"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 457,
                                    "nodeType": "IfStatement",
                                    "src": "4747:163:0",
                                    "trueBody": {
                                      "id": 443,
                                      "nodeType": "Block",
                                      "src": "4762:54:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 437,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 435,
                                              "name": "wallet",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 355,
                                              "src": "4764:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "id": 436,
                                              "name": "TreasuryWallet",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 39,
                                              "src": "4773:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "4764:23:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "id": 438,
                                          "nodeType": "ExpressionStatement",
                                          "src": "4764:23:0"
                                        },
                                        {
                                          "expression": {
                                            "id": 441,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 439,
                                              "name": "percent",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 358,
                                              "src": "4789:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "id": 440,
                                              "name": "TreasuryPercent",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 66,
                                              "src": "4799:15:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "4789:25:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 442,
                                          "nodeType": "ExpressionStatement",
                                          "src": "4789:25:0"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 458,
                                  "nodeType": "IfStatement",
                                  "src": "4665:245:0",
                                  "trueBody": {
                                    "id": 431,
                                    "nodeType": "Block",
                                    "src": "4680:52:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 425,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "id": 423,
                                            "name": "wallet",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 355,
                                            "src": "4682:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "id": 424,
                                            "name": "CompanyWallet",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 36,
                                            "src": "4691:13:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "4682:22:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "id": 426,
                                        "nodeType": "ExpressionStatement",
                                        "src": "4682:22:0"
                                      },
                                      {
                                        "expression": {
                                          "id": 429,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "id": 427,
                                            "name": "percent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 358,
                                            "src": "4706:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "id": 428,
                                            "name": "CompanyPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 63,
                                            "src": "4716:14:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "4706:24:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 430,
                                        "nodeType": "ExpressionStatement",
                                        "src": "4706:24:0"
                                      }
                                    ]
                                  }
                                },
                                "id": 459,
                                "nodeType": "IfStatement",
                                "src": "4579:331:0",
                                "trueBody": {
                                  "id": 419,
                                  "nodeType": "Block",
                                  "src": "4594:56:0",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 413,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 411,
                                          "name": "wallet",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 355,
                                          "src": "4596:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "id": 412,
                                          "name": "EcoGrowthWallet",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 33,
                                          "src": "4605:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "src": "4596:24:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 414,
                                      "nodeType": "ExpressionStatement",
                                      "src": "4596:24:0"
                                    },
                                    {
                                      "expression": {
                                        "id": 417,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 415,
                                          "name": "percent",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 358,
                                          "src": "4622:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "id": 416,
                                          "name": "EcoGrowthPercent",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 60,
                                          "src": "4632:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4622:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 418,
                                      "nodeType": "ExpressionStatement",
                                      "src": "4622:26:0"
                                    }
                                  ]
                                }
                              },
                              "id": 460,
                              "nodeType": "IfStatement",
                              "src": "4503:407:0",
                              "trueBody": {
                                "id": 407,
                                "nodeType": "Block",
                                "src": "4518:46:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 401,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 399,
                                        "name": "wallet",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 355,
                                        "src": "4520:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 400,
                                        "name": "TeamWallet",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30,
                                        "src": "4529:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "4520:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 402,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4520:19:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 405,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 403,
                                        "name": "percent",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 358,
                                        "src": "4541:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 404,
                                        "name": "TeamPercent",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 57,
                                        "src": "4551:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4541:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 406,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4541:21:0"
                                  }
                                ]
                              }
                            },
                            "id": 461,
                            "nodeType": "IfStatement",
                            "src": "4419:491:0",
                            "trueBody": {
                              "id": 395,
                              "nodeType": "Block",
                              "src": "4434:54:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 389,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 387,
                                      "name": "wallet",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 355,
                                      "src": "4436:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "id": 388,
                                      "name": "AdvisoryWallet",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 27,
                                      "src": "4445:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "4436:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 390,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4436:23:0"
                                },
                                {
                                  "expression": {
                                    "id": 393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 391,
                                      "name": "percent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 358,
                                      "src": "4461:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "id": 392,
                                      "name": "AdvisoryPercent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 54,
                                      "src": "4471:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4461:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 394,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4461:25:0"
                                }
                              ]
                            }
                          },
                          "id": 462,
                          "nodeType": "IfStatement",
                          "src": "4337:573:0",
                          "trueBody": {
                            "id": 383,
                            "nodeType": "Block",
                            "src": "4352:52:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 375,
                                    "name": "wallet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 355,
                                    "src": "4354:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 376,
                                    "name": "PubSaleWallet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "4363:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "4354:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 378,
                                "nodeType": "ExpressionStatement",
                                "src": "4354:22:0"
                              },
                              {
                                "expression": {
                                  "id": 381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 379,
                                    "name": "percent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 358,
                                    "src": "4378:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 380,
                                    "name": "PubSalePercent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51,
                                    "src": "4388:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4378:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 382,
                                "nodeType": "ExpressionStatement",
                                "src": "4378:24:0"
                              }
                            ]
                          }
                        },
                        "id": 463,
                        "nodeType": "IfStatement",
                        "src": "4253:657:0",
                        "trueBody": {
                          "id": 371,
                          "nodeType": "Block",
                          "src": "4268:54:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 363,
                                  "name": "wallet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 355,
                                  "src": "4270:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 364,
                                  "name": "PrivSaleWallet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "4279:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4270:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 366,
                              "nodeType": "ExpressionStatement",
                              "src": "4270:23:0"
                            },
                            {
                              "expression": {
                                "id": 369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 367,
                                  "name": "percent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 358,
                                  "src": "4295:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 368,
                                  "name": "PrivSalePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "4305:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4295:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 370,
                              "nodeType": "ExpressionStatement",
                              "src": "4295:25:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          465
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 465,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "4930:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 478,
                            "src": "4922:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 464,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4922:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 471,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 466,
                              "name": "_marketCap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "4939:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 467,
                              "name": "percent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "4952:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4939:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4962:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "4939:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4922:43:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 473,
                              "name": "ManageWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "4986:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 474,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "5000:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 475,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 465,
                              "src": "5008:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 472,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 818,
                            "src": "4976:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4976:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 477,
                        "nodeType": "ExpressionStatement",
                        "src": "4976:39:0"
                      }
                    ]
                  },
                  "functionSelector": "d2267a6e",
                  "id": 479,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 335,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 334,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 225,
                        "src": "4006:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4006:11:0"
                    },
                    {
                      "id": 337,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 336,
                        "name": "isRunning",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 234,
                        "src": "4018:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4018:9:0"
                    }
                  ],
                  "name": "distributeTokens",
                  "nameLocation": "3967:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 332,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "3990:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 479,
                        "src": "3984:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3984:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3983:13:0"
                  },
                  "returnParameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4027:0:0"
                  },
                  "scope": 958,
                  "src": "3958:1065:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "5097:382:0",
                    "statements": [
                      {
                        "assignments": [
                          489
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 489,
                            "mutability": "mutable",
                            "name": "_burnamount",
                            "nameLocation": "5116:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 528,
                            "src": "5108:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 488,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5108:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 495,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 490,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 481,
                              "src": "5130:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 491,
                              "name": "burnFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "5139:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5130:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5149:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "5130:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5108:44:0"
                      },
                      {
                        "assignments": [
                          497
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 497,
                            "mutability": "mutable",
                            "name": "maxBurnedTokens",
                            "nameLocation": "5171:15:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 528,
                            "src": "5163:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 496,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5163:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 503,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 498,
                              "name": "_marketCap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "5189:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3530",
                              "id": 499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5202:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50_by_1",
                                "typeString": "int_const 50"
                              },
                              "value": "50"
                            },
                            "src": "5189:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5207:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "5189:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5163:47:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 505,
                                "name": "totalBurnedTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 143,
                                "src": "5229:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 506,
                                "name": "maxBurnedTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 497,
                                "src": "5249:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5229:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a20746f6b656e73206861766520616c7265616479206275726e6564",
                              "id": 508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5266:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_346b7c130cc122b40091d563c5afefe794453347d91570c47aa60813616ca497",
                                "typeString": "literal_string \"VELAMIS: tokens have already burned\""
                              },
                              "value": "VELAMIS: tokens have already burned"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_346b7c130cc122b40091d563c5afefe794453347d91570c47aa60813616ca497",
                                "typeString": "literal_string \"VELAMIS: tokens have already burned\""
                              }
                            ],
                            "id": 504,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5221:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5221:83:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 510,
                        "nodeType": "ExpressionStatement",
                        "src": "5221:83:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 511,
                              "name": "totalBurnedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "5318:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 512,
                              "name": "_burnamount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "5338:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5318:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 514,
                            "name": "maxBurnedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "5352:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5318:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 522,
                        "nodeType": "IfStatement",
                        "src": "5315:103:0",
                        "trueBody": {
                          "expression": {
                            "id": 520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 516,
                              "name": "_burnamount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "5369:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 517,
                                "name": "maxBurnedTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 497,
                                "src": "5383:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 518,
                                "name": "totalBurnedTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 143,
                                "src": "5401:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5383:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5369:49:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 521,
                          "nodeType": "ExpressionStatement",
                          "src": "5369:49:0"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 524,
                              "name": "ManageWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "5445:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 525,
                              "name": "_burnamount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "5459:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 523,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "5439:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5439:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "5439:32:0"
                      }
                    ]
                  },
                  "functionSelector": "6d1b229d",
                  "id": 529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 484,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 483,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 225,
                        "src": "5076:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5076:11:0"
                    },
                    {
                      "id": 486,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 485,
                        "name": "isRunning",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 234,
                        "src": "5088:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5088:9:0"
                    }
                  ],
                  "name": "burnTokens",
                  "nameLocation": "5040:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 482,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 481,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "5059:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5051:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 480,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5051:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5050:16:0"
                  },
                  "returnParameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5097:0:0"
                  },
                  "scope": 958,
                  "src": "5031:448:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 536,
                    "nodeType": "Block",
                    "src": "5539:31:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 534,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "5557:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 533,
                        "id": 535,
                        "nodeType": "Return",
                        "src": "5550:12:0"
                      }
                    ]
                  },
                  "functionSelector": "06fdde03",
                  "id": 537,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "5496:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 530,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5500:2:0"
                  },
                  "returnParameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 537,
                        "src": "5524:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5524:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5523:15:0"
                  },
                  "scope": 958,
                  "src": "5487:83:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 544,
                    "nodeType": "Block",
                    "src": "5632:33:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 542,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "5650:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 541,
                        "id": 543,
                        "nodeType": "Return",
                        "src": "5643:14:0"
                      }
                    ]
                  },
                  "functionSelector": "95d89b41",
                  "id": 545,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "5587:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5593:2:0"
                  },
                  "returnParameters": {
                    "id": 541,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 540,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 545,
                        "src": "5617:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 539,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5617:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5616:15:0"
                  },
                  "scope": 958,
                  "src": "5578:87:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 552,
                    "nodeType": "Block",
                    "src": "5721:35:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 550,
                          "name": "_decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "5739:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 549,
                        "id": 551,
                        "nodeType": "Return",
                        "src": "5732:16:0"
                      }
                    ]
                  },
                  "functionSelector": "313ce567",
                  "id": 553,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "5682:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 546,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5690:2:0"
                  },
                  "returnParameters": {
                    "id": 549,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 548,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 553,
                        "src": "5714:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 547,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5714:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5713:7:0"
                  },
                  "scope": 958,
                  "src": "5673:83:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1194
                  ],
                  "body": {
                    "id": 561,
                    "nodeType": "Block",
                    "src": "5826:38:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 559,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "5844:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 558,
                        "id": 560,
                        "nodeType": "Return",
                        "src": "5837:19:0"
                      }
                    ]
                  },
                  "functionSelector": "18160ddd",
                  "id": 562,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "5773:11:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 555,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5799:8:0"
                  },
                  "parameters": {
                    "id": 554,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5784:2:0"
                  },
                  "returnParameters": {
                    "id": 558,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 557,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "5817:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 556,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5817:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5816:9:0"
                  },
                  "scope": 958,
                  "src": "5764:100:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1201
                  ],
                  "body": {
                    "id": 574,
                    "nodeType": "Block",
                    "src": "5947:44:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 570,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "5965:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 572,
                          "indexExpression": {
                            "id": 571,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 564,
                            "src": "5975:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5965:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 569,
                        "id": 573,
                        "nodeType": "Return",
                        "src": "5958:25:0"
                      }
                    ]
                  },
                  "functionSelector": "70a08231",
                  "id": 575,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "5881:9:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 566,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5920:8:0"
                  },
                  "parameters": {
                    "id": 565,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 564,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "5899:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "5891:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 563,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5891:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5890:17:0"
                  },
                  "returnParameters": {
                    "id": 569,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 568,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "5938:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 567,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5938:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5937:9:0"
                  },
                  "scope": 958,
                  "src": "5872:119:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1210
                  ],
                  "body": {
                    "id": 600,
                    "nodeType": "Block",
                    "src": "6084:108:0",
                    "statements": [
                      {
                        "assignments": [
                          588
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 588,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "6103:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 600,
                            "src": "6095:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 587,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6095:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 591,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 589,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "6111:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6111:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6095:28:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 593,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "6144:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 594,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "6151:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 595,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 579,
                              "src": "6155:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 592,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 818,
                            "src": "6134:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6134:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 597,
                        "nodeType": "ExpressionStatement",
                        "src": "6134:28:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6180:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 586,
                        "id": 599,
                        "nodeType": "Return",
                        "src": "6173:11:0"
                      }
                    ]
                  },
                  "functionSelector": "a9059cbb",
                  "id": 601,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 583,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 582,
                        "name": "isRunning",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 234,
                        "src": "6059:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6059:9:0"
                    }
                  ],
                  "name": "transfer",
                  "nameLocation": "6006:8:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 581,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6050:8:0"
                  },
                  "parameters": {
                    "id": 580,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 577,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6023:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 601,
                        "src": "6015:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6015:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 579,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6035:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 601,
                        "src": "6027:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 578,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6027:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6014:28:0"
                  },
                  "returnParameters": {
                    "id": 586,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 585,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 601,
                        "src": "6078:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 584,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6078:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6077:6:0"
                  },
                  "scope": 958,
                  "src": "5997:195:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1219
                  ],
                  "body": {
                    "id": 619,
                    "nodeType": "Block",
                    "src": "6300:53:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 613,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "6318:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 615,
                            "indexExpression": {
                              "id": 614,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
                              "src": "6330:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6318:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 617,
                          "indexExpression": {
                            "id": 616,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "6337:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6318:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 612,
                        "id": 618,
                        "nodeType": "Return",
                        "src": "6311:34:0"
                      }
                    ]
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 620,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 609,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 608,
                        "name": "isRunning",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 234,
                        "src": "6272:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6272:9:0"
                    }
                  ],
                  "name": "allowance",
                  "nameLocation": "6209:9:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 607,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6263:8:0"
                  },
                  "parameters": {
                    "id": 606,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 603,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "6227:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "6219:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6219:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 605,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "6242:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "6234:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6234:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6218:32:0"
                  },
                  "returnParameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "6291:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6291:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6290:9:0"
                  },
                  "scope": 958,
                  "src": "6200:153:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1228
                  ],
                  "body": {
                    "id": 645,
                    "nodeType": "Block",
                    "src": "6452:112:0",
                    "statements": [
                      {
                        "assignments": [
                          633
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 633,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "6471:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 645,
                            "src": "6463:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 632,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6463:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 636,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 634,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "6479:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6479:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6463:28:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 638,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 633,
                              "src": "6511:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 639,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 622,
                              "src": "6518:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 640,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 624,
                              "src": "6527:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 637,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "6502:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6502:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 642,
                        "nodeType": "ExpressionStatement",
                        "src": "6502:32:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6552:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 631,
                        "id": 644,
                        "nodeType": "Return",
                        "src": "6545:11:0"
                      }
                    ]
                  },
                  "functionSelector": "095ea7b3",
                  "id": 646,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 628,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 627,
                        "name": "isRunning",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 234,
                        "src": "6427:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6427:9:0"
                    }
                  ],
                  "name": "approve",
                  "nameLocation": "6370:7:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 626,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6418:8:0"
                  },
                  "parameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 622,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "6386:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "6378:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6378:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6403:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "6395:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6395:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6377:33:0"
                  },
                  "returnParameters": {
                    "id": 631,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 630,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "6446:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 629,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6446:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6445:6:0"
                  },
                  "scope": 958,
                  "src": "6361:203:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1239
                  ],
                  "body": {
                    "id": 679,
                    "nodeType": "Block",
                    "src": "6711:158:0",
                    "statements": [
                      {
                        "assignments": [
                          661
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 661,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "6730:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 679,
                            "src": "6722:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 660,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6722:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 664,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 662,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "6740:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6740:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6722:30:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 666,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "6779:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 667,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 661,
                              "src": "6785:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 668,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 652,
                              "src": "6794:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 665,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 957,
                            "src": "6763:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6763:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 670,
                        "nodeType": "ExpressionStatement",
                        "src": "6763:38:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 672,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "6822:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 673,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 650,
                              "src": "6828:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 674,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 652,
                              "src": "6832:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 671,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 818,
                            "src": "6812:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6812:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 676,
                        "nodeType": "ExpressionStatement",
                        "src": "6812:27:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6857:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 659,
                        "id": 678,
                        "nodeType": "Return",
                        "src": "6850:11:0"
                      }
                    ]
                  },
                  "functionSelector": "23b872dd",
                  "id": 680,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 656,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 655,
                        "name": "isRunning",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 234,
                        "src": "6686:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6686:9:0"
                    }
                  ],
                  "name": "transferFrom",
                  "nameLocation": "6581:12:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 654,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6677:8:0"
                  },
                  "parameters": {
                    "id": 653,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6612:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 680,
                        "src": "6604:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6604:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 650,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6635:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 680,
                        "src": "6627:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 649,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6627:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 652,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6656:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 680,
                        "src": "6648:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 651,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6648:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6593:76:0"
                  },
                  "returnParameters": {
                    "id": 659,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 658,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 680,
                        "src": "6705:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 657,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6705:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6704:6:0"
                  },
                  "scope": 958,
                  "src": "6572:297:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 710,
                    "nodeType": "Block",
                    "src": "6974:146:0",
                    "statements": [
                      {
                        "assignments": [
                          692
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 692,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "6993:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 710,
                            "src": "6985:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 691,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 695,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 693,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "7001:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7001:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6985:28:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 697,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 692,
                              "src": "7033:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 698,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "7040:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 699,
                                    "name": "_allowances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 104,
                                    "src": "7049:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 701,
                                  "indexExpression": {
                                    "id": 700,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 692,
                                    "src": "7061:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7049:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 703,
                                "indexExpression": {
                                  "id": 702,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 682,
                                  "src": "7068:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7049:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 704,
                                "name": "addedValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 684,
                                "src": "7079:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7049:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 696,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "7024:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7024:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 707,
                        "nodeType": "ExpressionStatement",
                        "src": "7024:66:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7108:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 690,
                        "id": 709,
                        "nodeType": "Return",
                        "src": "7101:11:0"
                      }
                    ]
                  },
                  "functionSelector": "39509351",
                  "id": 711,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 687,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 686,
                        "name": "isRunning",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 234,
                        "src": "6948:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6948:9:0"
                    }
                  ],
                  "name": "increaseAllowance",
                  "nameLocation": "6886:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 685,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 682,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "6912:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 711,
                        "src": "6904:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 681,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6904:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "addedValue",
                        "nameLocation": "6929:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 711,
                        "src": "6921:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6921:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6903:37:0"
                  },
                  "returnParameters": {
                    "id": 690,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 689,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 711,
                        "src": "6967:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 688,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6967:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6966:6:0"
                  },
                  "scope": 958,
                  "src": "6877:243:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 753,
                    "nodeType": "Block",
                    "src": "7230:341:0",
                    "statements": [
                      {
                        "assignments": [
                          723
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 723,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "7249:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 753,
                            "src": "7241:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 722,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7241:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 726,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 724,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "7257:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7257:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7241:28:0"
                      },
                      {
                        "assignments": [
                          728
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 728,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "7288:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 753,
                            "src": "7280:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 727,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7280:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 734,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 729,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "7307:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 731,
                            "indexExpression": {
                              "id": 730,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 723,
                              "src": "7319:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7307:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 733,
                          "indexExpression": {
                            "id": 732,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 713,
                            "src": "7326:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7307:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7280:54:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 736,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 728,
                                "src": "7353:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 737,
                                "name": "subtractedValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 715,
                                "src": "7373:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7353:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                              "id": 739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7390:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a56660a2fa2a38b06650005b121feeede389f68d9f8bc07310f1e6a0b72b82b4",
                                "typeString": "literal_string \"VELAMIS: decreased allowance below zero\""
                              },
                              "value": "VELAMIS: decreased allowance below zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a56660a2fa2a38b06650005b121feeede389f68d9f8bc07310f1e6a0b72b82b4",
                                "typeString": "literal_string \"VELAMIS: decreased allowance below zero\""
                              }
                            ],
                            "id": 735,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7345:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7345:87:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 741,
                        "nodeType": "ExpressionStatement",
                        "src": "7345:87:0"
                      },
                      {
                        "id": 750,
                        "nodeType": "UncheckedBlock",
                        "src": "7443:97:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 743,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 723,
                                  "src": "7477:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 744,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 713,
                                  "src": "7484:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 747,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 745,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 728,
                                    "src": "7493:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 746,
                                    "name": "subtractedValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 715,
                                    "src": "7512:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7493:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 742,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 915,
                                "src": "7468:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7468:60:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 749,
                            "nodeType": "ExpressionStatement",
                            "src": "7468:60:0"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7559:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 721,
                        "id": 752,
                        "nodeType": "Return",
                        "src": "7552:11:0"
                      }
                    ]
                  },
                  "functionSelector": "a457c2d7",
                  "id": 754,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 718,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 717,
                        "name": "isRunning",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 234,
                        "src": "7204:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7204:9:0"
                    }
                  ],
                  "name": "decreaseAllowance",
                  "nameLocation": "7137:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 716,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 713,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "7163:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "7155:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 712,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7155:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 715,
                        "mutability": "mutable",
                        "name": "subtractedValue",
                        "nameLocation": "7180:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "7172:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 714,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7172:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7154:42:0"
                  },
                  "returnParameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 720,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "7223:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7223:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7222:6:0"
                  },
                  "scope": 958,
                  "src": "7128:443:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 817,
                    "nodeType": "Block",
                    "src": "7683:466:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 764,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 756,
                                "src": "7702:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 767,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7718:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 766,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7710:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 765,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7710:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7710:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7702:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                              "id": 770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7722:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c8b842bb44c4759885d129dd604218bbf56863f2908c9db5b4cf8e9b0fabcc36",
                                "typeString": "literal_string \"VELAMIS: transfer from the zero address\""
                              },
                              "value": "VELAMIS: transfer from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c8b842bb44c4759885d129dd604218bbf56863f2908c9db5b4cf8e9b0fabcc36",
                                "typeString": "literal_string \"VELAMIS: transfer from the zero address\""
                              }
                            ],
                            "id": 763,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7694:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7694:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 772,
                        "nodeType": "ExpressionStatement",
                        "src": "7694:70:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 774,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 758,
                                "src": "7783:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 777,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7797:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 776,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7789:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 775,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7789:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7789:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7783:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a207472616e7366657220746f20746865207a65726f2061646472657373",
                              "id": 780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7801:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_63a184dc45135cccc4e8ef6425d1be95e8fac6bc63d7c6c4bd59794bd0107905",
                                "typeString": "literal_string \"VELAMIS: transfer to the zero address\""
                              },
                              "value": "VELAMIS: transfer to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_63a184dc45135cccc4e8ef6425d1be95e8fac6bc63d7c6c4bd59794bd0107905",
                                "typeString": "literal_string \"VELAMIS: transfer to the zero address\""
                              }
                            ],
                            "id": 773,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7775:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7775:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 782,
                        "nodeType": "ExpressionStatement",
                        "src": "7775:66:0"
                      },
                      {
                        "assignments": [
                          784
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 784,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "7862:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 817,
                            "src": "7854:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 783,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7854:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 788,
                        "initialValue": {
                          "baseExpression": {
                            "id": 785,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "7876:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 787,
                          "indexExpression": {
                            "id": 786,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "7886:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7876:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7854:37:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 790,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 784,
                                "src": "7910:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 791,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 760,
                                "src": "7925:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7910:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                              "id": 793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7933:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1abf800bd7f67e49e566c4424f249366db9e4e99c6af02e9931d098419e0dee2",
                                "typeString": "literal_string \"VELAMIS: transfer amount exceeds balance\""
                              },
                              "value": "VELAMIS: transfer amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1abf800bd7f67e49e566c4424f249366db9e4e99c6af02e9931d098419e0dee2",
                                "typeString": "literal_string \"VELAMIS: transfer amount exceeds balance\""
                              }
                            ],
                            "id": 789,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7902:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7902:74:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 795,
                        "nodeType": "ExpressionStatement",
                        "src": "7902:74:0"
                      },
                      {
                        "id": 804,
                        "nodeType": "UncheckedBlock",
                        "src": "7987:75:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 796,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98,
                                  "src": "8012:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 798,
                                "indexExpression": {
                                  "id": 797,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 756,
                                  "src": "8022:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "8012:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 799,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 784,
                                  "src": "8030:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 800,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 760,
                                  "src": "8044:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8030:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8012:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 803,
                            "nodeType": "ExpressionStatement",
                            "src": "8012:38:0"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 805,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "8072:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 807,
                            "indexExpression": {
                              "id": 806,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "8082:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8072:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 808,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "8089:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8072:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 810,
                        "nodeType": "ExpressionStatement",
                        "src": "8072:23:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 812,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "8122:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 813,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "8128:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 814,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 760,
                              "src": "8132:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 811,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1247,
                            "src": "8113:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8113:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 816,
                        "nodeType": "EmitStatement",
                        "src": "8108:31:0"
                      }
                    ]
                  },
                  "id": 818,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "7588:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 761,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 756,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "7616:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 818,
                        "src": "7608:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 755,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7608:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 758,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "7639:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 818,
                        "src": "7631:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 757,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7631:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 760,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "7660:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 818,
                        "src": "7652:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 759,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7652:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7597:76:0"
                  },
                  "returnParameters": {
                    "id": 762,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7683:0:0"
                  },
                  "scope": 958,
                  "src": "7579:570:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 870,
                    "nodeType": "Block",
                    "src": "8214:407:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 826,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 820,
                                "src": "8233:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 829,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8252:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 828,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8244:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 827,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8244:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8244:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8233:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a206275726e2066726f6d20746865207a65726f2061646472657373",
                              "id": 832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8256:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d26354a426fcb7cbad7f962831944edcc88389b48f05162453ec88acfc485236",
                                "typeString": "literal_string \"VELAMIS: burn from the zero address\""
                              },
                              "value": "VELAMIS: burn from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d26354a426fcb7cbad7f962831944edcc88389b48f05162453ec88acfc485236",
                                "typeString": "literal_string \"VELAMIS: burn from the zero address\""
                              }
                            ],
                            "id": 825,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8225:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8225:69:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 834,
                        "nodeType": "ExpressionStatement",
                        "src": "8225:69:0"
                      },
                      {
                        "assignments": [
                          836
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 836,
                            "mutability": "mutable",
                            "name": "accountBalance",
                            "nameLocation": "8315:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 870,
                            "src": "8307:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 835,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8307:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 840,
                        "initialValue": {
                          "baseExpression": {
                            "id": 837,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "8332:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 839,
                          "indexExpression": {
                            "id": 838,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "8342:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8332:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8307:43:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 842,
                                "name": "accountBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 836,
                                "src": "8369:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 843,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "8387:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8369:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a206275726e20616d6f756e7420657863656564732062616c616e6365",
                              "id": 845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8395:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e33c5bcfce4f1a705a910009678f0324d364e0c2b1ea9e9b0ac297baf1531b79",
                                "typeString": "literal_string \"VELAMIS: burn amount exceeds balance\""
                              },
                              "value": "VELAMIS: burn amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e33c5bcfce4f1a705a910009678f0324d364e0c2b1ea9e9b0ac297baf1531b79",
                                "typeString": "literal_string \"VELAMIS: burn amount exceeds balance\""
                              }
                            ],
                            "id": 841,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8361:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8361:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 847,
                        "nodeType": "ExpressionStatement",
                        "src": "8361:73:0"
                      },
                      {
                        "id": 856,
                        "nodeType": "UncheckedBlock",
                        "src": "8445:81:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 848,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98,
                                  "src": "8470:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 850,
                                "indexExpression": {
                                  "id": 849,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "8480:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "8470:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 851,
                                  "name": "accountBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 836,
                                  "src": "8491:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 852,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "8508:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8491:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8470:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 855,
                            "nodeType": "ExpressionStatement",
                            "src": "8470:44:0"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 857,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "8536:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 858,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 822,
                            "src": "8552:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8536:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 860,
                        "nodeType": "ExpressionStatement",
                        "src": "8536:22:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 862,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 820,
                              "src": "8585:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 865,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8602:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8594:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 863,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8594:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8594:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 867,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "8606:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 861,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1247,
                            "src": "8576:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8576:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 869,
                        "nodeType": "EmitStatement",
                        "src": "8571:42:0"
                      }
                    ]
                  },
                  "id": 871,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "8166:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 823,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 820,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "8180:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 871,
                        "src": "8172:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 819,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8172:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 822,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "8197:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 871,
                        "src": "8189:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8189:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8171:33:0"
                  },
                  "returnParameters": {
                    "id": 824,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8214:0:0"
                  },
                  "scope": 958,
                  "src": "8157:464:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 914,
                    "nodeType": "Block",
                    "src": "8738:267:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 881,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 873,
                                "src": "8757:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 884,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8774:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 883,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8766:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 882,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8766:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8766:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8757:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                              "id": 887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8778:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f2b4d6643fac749402e773876b452789c45e64c3e4be91de8bfb340ab2a3510",
                                "typeString": "literal_string \"VELAMIS: approve from the zero address\""
                              },
                              "value": "VELAMIS: approve from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4f2b4d6643fac749402e773876b452789c45e64c3e4be91de8bfb340ab2a3510",
                                "typeString": "literal_string \"VELAMIS: approve from the zero address\""
                              }
                            ],
                            "id": 880,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8749:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8749:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 889,
                        "nodeType": "ExpressionStatement",
                        "src": "8749:70:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 891,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 875,
                                "src": "8838:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 894,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8857:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 893,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8849:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 892,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8849:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8849:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8838:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56454c414d49533a20617070726f766520746f20746865207a65726f2061646472657373",
                              "id": 897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8861:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ced4acb1db0ac1d95997dbacda05821353b65980cb3c29759cf75575af33e912",
                                "typeString": "literal_string \"VELAMIS: approve to the zero address\""
                              },
                              "value": "VELAMIS: approve to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ced4acb1db0ac1d95997dbacda05821353b65980cb3c29759cf75575af33e912",
                                "typeString": "literal_string \"VELAMIS: approve to the zero address\""
                              }
                            ],
                            "id": 890,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8830:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8830:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 899,
                        "nodeType": "ExpressionStatement",
                        "src": "8830:70:0"
                      },
                      {
                        "expression": {
                          "id": 906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 900,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 104,
                                "src": "8913:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 903,
                              "indexExpression": {
                                "id": 901,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 873,
                                "src": "8925:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8913:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 904,
                            "indexExpression": {
                              "id": 902,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 875,
                              "src": "8932:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8913:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 905,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 877,
                            "src": "8943:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8913:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 907,
                        "nodeType": "ExpressionStatement",
                        "src": "8913:36:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 909,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 873,
                              "src": "8974:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 910,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 875,
                              "src": "8981:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 911,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 877,
                              "src": "8990:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 908,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1255,
                            "src": "8965:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8965:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 913,
                        "nodeType": "EmitStatement",
                        "src": "8960:37:0"
                      }
                    ]
                  },
                  "id": 915,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8638:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 878,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 873,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8665:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "8657:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8657:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 875,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8689:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "8681:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 874,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8681:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 877,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "8715:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "8707:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 876,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8707:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8646:82:0"
                  },
                  "returnParameters": {
                    "id": 879,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8738:0:0"
                  },
                  "scope": 958,
                  "src": "8629:376:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 956,
                    "nodeType": "Block",
                    "src": "9129:331:0",
                    "statements": [
                      {
                        "assignments": [
                          925
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 925,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "9148:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 956,
                            "src": "9140:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 924,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9140:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 930,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 927,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "9177:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 928,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "9184:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 926,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 620,
                            "src": "9167:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9167:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9140:52:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 931,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 925,
                            "src": "9207:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 934,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9232:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 933,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9232:7:0",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 932,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "9227:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9227:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "9227:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9207:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 955,
                        "nodeType": "IfStatement",
                        "src": "9203:250:0",
                        "trueBody": {
                          "id": 954,
                          "nodeType": "Block",
                          "src": "9246:207:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 941,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 939,
                                      "name": "currentAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 925,
                                      "src": "9269:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 940,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 921,
                                      "src": "9289:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9269:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "56454c414d49533a20696e73756666696369656e7420616c6c6f77616e6365",
                                    "id": 942,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9297:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a3374090caf4d66f81d1ae99d9c3b520c9572c894b9161fb2fd7049be81ba000",
                                      "typeString": "literal_string \"VELAMIS: insufficient allowance\""
                                    },
                                    "value": "VELAMIS: insufficient allowance"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_a3374090caf4d66f81d1ae99d9c3b520c9572c894b9161fb2fd7049be81ba000",
                                      "typeString": "literal_string \"VELAMIS: insufficient allowance\""
                                    }
                                  ],
                                  "id": 938,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "9261:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9261:70:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 944,
                              "nodeType": "ExpressionStatement",
                              "src": "9261:70:0"
                            },
                            {
                              "id": 953,
                              "nodeType": "UncheckedBlock",
                              "src": "9346:96:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 946,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 917,
                                        "src": "9384:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 947,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 919,
                                        "src": "9391:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 950,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 948,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 925,
                                          "src": "9400:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 949,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 921,
                                          "src": "9419:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "9400:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 945,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "9375:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,address,uint256)"
                                      }
                                    },
                                    "id": 951,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9375:51:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 952,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9375:51:0"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 957,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "9022:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 922,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 917,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9056:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 957,
                        "src": "9048:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 916,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9048:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 919,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9080:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 957,
                        "src": "9072:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9072:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 921,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "9106:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 957,
                        "src": "9098:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 920,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9098:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9037:82:0"
                  },
                  "returnParameters": {
                    "id": 923,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9129:0:0"
                  },
                  "scope": 958,
                  "src": "9013:447:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 959,
              "src": "188:9275:0",
              "usedErrors": []
            }
          ],
          "src": "0:9463:0"
        },
        "id": 0
      },
      "contracts/libs/Address.sol": {
        "ast": {
          "absolutePath": "contracts/libs/Address.sol",
          "exportedSymbols": {
            "Address": [
              1161
            ]
          },
          "id": 1162,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 960,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Address",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 1161,
              "linearizedBaseContracts": [
                1161
              ],
              "name": "Address",
              "nameLocation": "74:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 985,
                    "nodeType": "Block",
                    "src": "742:553:1",
                    "statements": [
                      {
                        "assignments": [
                          969
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 969,
                            "mutability": "mutable",
                            "name": "codehash",
                            "nameLocation": "1006:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 985,
                            "src": "998:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 968,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "998:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 970,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "998:16:1"
                      },
                      {
                        "assignments": [
                          972
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 972,
                            "mutability": "mutable",
                            "name": "accountHash",
                            "nameLocation": "1033:11:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 985,
                            "src": "1025:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 971,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1025:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 974,
                        "initialValue": {
                          "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1047:66:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                            "typeString": "int_const 8947...(69 digits omitted)...1552"
                          },
                          "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1025:88:1"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1190:36:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1192:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "account",
                                    "nodeType": "YulIdentifier",
                                    "src": "1216:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodehash",
                                  "nodeType": "YulIdentifier",
                                  "src": "1204:11:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1204:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "codehash",
                                  "nodeType": "YulIdentifier",
                                  "src": "1192:8:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 963,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1216:7:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 969,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1192:8:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 975,
                        "nodeType": "InlineAssembly",
                        "src": "1181:45:1"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 976,
                                  "name": "codehash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 969,
                                  "src": "1244:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 977,
                                  "name": "accountHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 972,
                                  "src": "1256:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "1244:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 979,
                                  "name": "codehash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 969,
                                  "src": "1271:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "307830",
                                  "id": 980,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1283:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0x0"
                                },
                                "src": "1271:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1244:42:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 983,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1243:44:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 967,
                        "id": 984,
                        "nodeType": "Return",
                        "src": "1236:51:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 961,
                    "nodeType": "StructuredDocumentation",
                    "src": "89:581:1",
                    "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
                  },
                  "id": 986,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isContract",
                  "nameLocation": "685:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 964,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 963,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "704:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 986,
                        "src": "696:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 962,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "696:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "695:17:1"
                  },
                  "returnParameters": {
                    "id": 967,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 966,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 986,
                        "src": "736:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 965,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "736:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "735:6:1"
                  },
                  "scope": 1161,
                  "src": "676:619:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1019,
                    "nodeType": "Block",
                    "src": "2301:326:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 997,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2328:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$1161",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$1161",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 996,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2320:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 995,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2320:7:1",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 998,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2320:13:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 999,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "2320:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1000,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 991,
                                "src": "2345:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2320:31:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2353:31:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              },
                              "value": "Address: insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              }
                            ],
                            "id": 994,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2312:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2312:73:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1004,
                        "nodeType": "ExpressionStatement",
                        "src": "2312:73:1"
                      },
                      {
                        "assignments": [
                          1006,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1006,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2482:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1019,
                            "src": "2477:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1005,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2477:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1013,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2527:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1007,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 989,
                                "src": "2495:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2495:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1009,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 991,
                                "src": "2518:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2495:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2495:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2476:54:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1015,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1006,
                              "src": "2549:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                              "id": 1016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2558:60:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              },
                              "value": "Address: unable to send value, recipient may have reverted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              }
                            ],
                            "id": 1014,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2541:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2541:78:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1018,
                        "nodeType": "ExpressionStatement",
                        "src": "2541:78:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 987,
                    "nodeType": "StructuredDocumentation",
                    "src": "1303:921:1",
                    "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                  },
                  "id": 1020,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendValue",
                  "nameLocation": "2239:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 992,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 989,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2265:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1020,
                        "src": "2249:25:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 988,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2249:15:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 991,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2284:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1020,
                        "src": "2276:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 990,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2276:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2248:43:1"
                  },
                  "returnParameters": {
                    "id": 993,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2301:0:1"
                  },
                  "scope": 1161,
                  "src": "2230:397:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1036,
                    "nodeType": "Block",
                    "src": "3477:84:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1031,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1023,
                              "src": "3506:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1032,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1025,
                              "src": "3514:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                              "id": 1033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3520:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              },
                              "value": "Address: low-level call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              }
                            ],
                            "id": 1030,
                            "name": "functionCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1037,
                              1057
                            ],
                            "referencedDeclaration": 1057,
                            "src": "3493:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3493:60:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1029,
                        "id": 1035,
                        "nodeType": "Return",
                        "src": "3486:67:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1021,
                    "nodeType": "StructuredDocumentation",
                    "src": "2635:747:1",
                    "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
                  },
                  "id": 1037,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "3397:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1026,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1023,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3418:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "3410:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1022,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3410:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1025,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3439:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "3426:17:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1024,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3426:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3409:35:1"
                  },
                  "returnParameters": {
                    "id": 1029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1028,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "3463:12:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1027,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3463:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3462:14:1"
                  },
                  "scope": 1161,
                  "src": "3388:173:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1056,
                    "nodeType": "Block",
                    "src": "3908:79:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1050,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1040,
                              "src": "3949:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1051,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1042,
                              "src": "3957:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3963:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 1053,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1044,
                              "src": "3966:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1049,
                            "name": "_functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1160,
                            "src": "3926:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3926:53:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1048,
                        "id": 1055,
                        "nodeType": "Return",
                        "src": "3919:60:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1038,
                    "nodeType": "StructuredDocumentation",
                    "src": "3569:216:1",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 1057,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "3800:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1045,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1040,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3821:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1057,
                        "src": "3813:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1039,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3813:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1042,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3842:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1057,
                        "src": "3829:17:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1041,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3829:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1044,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "3862:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1057,
                        "src": "3848:26:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1043,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3848:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3812:63:1"
                  },
                  "returnParameters": {
                    "id": 1048,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1047,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1057,
                        "src": "3894:12:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3894:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3893:14:1"
                  },
                  "scope": 1161,
                  "src": "3791:196:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1076,
                    "nodeType": "Block",
                    "src": "4475:113:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1070,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1060,
                              "src": "4515:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1071,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1062,
                              "src": "4523:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 1072,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1064,
                              "src": "4529:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                              "id": 1073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4536:43:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              },
                              "value": "Address: low-level call with value failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              }
                            ],
                            "id": 1069,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1077,
                              1110
                            ],
                            "referencedDeclaration": 1110,
                            "src": "4493:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4493:87:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1068,
                        "id": 1075,
                        "nodeType": "Return",
                        "src": "4486:94:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1058,
                    "nodeType": "StructuredDocumentation",
                    "src": "3995:361:1",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
                  },
                  "id": 1077,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nameLocation": "4371:21:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1065,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1060,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4401:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "4393:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1059,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4393:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1062,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4422:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "4409:17:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1061,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4409:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1064,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4436:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "4428:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4428:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4392:50:1"
                  },
                  "returnParameters": {
                    "id": 1068,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1067,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "4461:12:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1066,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4461:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4460:14:1"
                  },
                  "scope": 1161,
                  "src": "4362:226:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1109,
                    "nodeType": "Block",
                    "src": "4985:175:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1094,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5012:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$1161",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$1161",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 1093,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5004:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1092,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5004:7:1",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1095,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5004:13:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1096,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "5004:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1097,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1084,
                                "src": "5029:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5004:30:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                              "id": 1099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5036:40:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              },
                              "value": "Address: insufficient balance for call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              }
                            ],
                            "id": 1091,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4996:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4996:81:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1101,
                        "nodeType": "ExpressionStatement",
                        "src": "4996:81:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1103,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1080,
                              "src": "5118:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1104,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1082,
                              "src": "5126:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 1105,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "5132:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1106,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "5139:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1102,
                            "name": "_functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1160,
                            "src": "5095:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 1107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5095:57:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1090,
                        "id": 1108,
                        "nodeType": "Return",
                        "src": "5088:64:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1078,
                    "nodeType": "StructuredDocumentation",
                    "src": "4596:242:1",
                    "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 1110,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nameLocation": "4853:21:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1087,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1080,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4883:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1110,
                        "src": "4875:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4875:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1082,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4904:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1110,
                        "src": "4891:17:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1081,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4891:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1084,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4918:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1110,
                        "src": "4910:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1083,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4910:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1086,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "4939:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1110,
                        "src": "4925:26:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1085,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4925:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4874:78:1"
                  },
                  "returnParameters": {
                    "id": 1090,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1089,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1110,
                        "src": "4971:12:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4971:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4970:14:1"
                  },
                  "scope": 1161,
                  "src": "4844:316:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1159,
                    "nodeType": "Block",
                    "src": "5312:835:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1125,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1112,
                                  "src": "5342:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1124,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 986,
                                "src": "5331:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 1126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5331:18:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5351:31:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                "typeString": "literal_string \"Address: call to non-contract\""
                              },
                              "value": "Address: call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                "typeString": "literal_string \"Address: call to non-contract\""
                              }
                            ],
                            "id": 1123,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5323:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5323:60:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1129,
                        "nodeType": "ExpressionStatement",
                        "src": "5323:60:1"
                      },
                      {
                        "assignments": [
                          1131,
                          1133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1131,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "5462:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1159,
                            "src": "5457:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1130,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5457:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1133,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "5484:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1159,
                            "src": "5471:23:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1132,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5471:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1140,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1138,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1114,
                              "src": "5529:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 1134,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1112,
                                "src": "5498:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "5498:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1136,
                                "name": "weiValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1116,
                                "src": "5518:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "5498:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5498:36:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5456:78:1"
                      },
                      {
                        "condition": {
                          "id": 1141,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1131,
                          "src": "5549:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1157,
                          "nodeType": "Block",
                          "src": "5608:532:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1145,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1133,
                                    "src": "5694:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "5694:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1147,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5714:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5694:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1155,
                                "nodeType": "Block",
                                "src": "6074:55:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1152,
                                          "name": "errorMessage",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1118,
                                          "src": "6100:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 1151,
                                        "name": "revert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -19,
                                          -19
                                        ],
                                        "referencedDeclaration": -19,
                                        "src": "6093:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory) pure"
                                        }
                                      },
                                      "id": 1153,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6093:20:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1154,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6093:20:1"
                                  }
                                ]
                              },
                              "id": 1156,
                              "nodeType": "IfStatement",
                              "src": "5690:439:1",
                              "trueBody": {
                                "id": 1150,
                                "nodeType": "Block",
                                "src": "5717:351:1",
                                "statements": [
                                  {
                                    "AST": {
                                      "nodeType": "YulBlock",
                                      "src": "5905:148:1",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "5928:40:1",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "returndata",
                                                "nodeType": "YulIdentifier",
                                                "src": "5957:10:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "5951:5:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5951:17:1"
                                          },
                                          "variables": [
                                            {
                                              "name": "returndata_size",
                                              "nodeType": "YulTypedName",
                                              "src": "5932:15:1",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "6001:2:1",
                                                    "type": "",
                                                    "value": "32"
                                                  },
                                                  {
                                                    "name": "returndata",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "6005:10:1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5997:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "5997:19:1"
                                              },
                                              {
                                                "name": "returndata_size",
                                                "nodeType": "YulIdentifier",
                                                "src": "6018:15:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "5990:6:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5990:44:1"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "5990:44:1"
                                        }
                                      ]
                                    },
                                    "evmVersion": "london",
                                    "externalReferences": [
                                      {
                                        "declaration": 1133,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "5957:10:1",
                                        "valueSize": 1
                                      },
                                      {
                                        "declaration": 1133,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "6005:10:1",
                                        "valueSize": 1
                                      }
                                    ],
                                    "id": 1149,
                                    "nodeType": "InlineAssembly",
                                    "src": "5896:157:1"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 1158,
                        "nodeType": "IfStatement",
                        "src": "5545:595:1",
                        "trueBody": {
                          "id": 1144,
                          "nodeType": "Block",
                          "src": "5558:44:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 1142,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1133,
                                "src": "5580:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 1122,
                              "id": 1143,
                              "nodeType": "Return",
                              "src": "5573:17:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1160,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_functionCallWithValue",
                  "nameLocation": "5177:22:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1112,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "5208:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "5200:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5200:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1114,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5229:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "5216:17:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5216:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1116,
                        "mutability": "mutable",
                        "name": "weiValue",
                        "nameLocation": "5243:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "5235:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1115,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5235:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1118,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "5267:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "5253:26:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1117,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5253:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5199:81:1"
                  },
                  "returnParameters": {
                    "id": 1122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1121,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "5298:12:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1120,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5298:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5297:14:1"
                  },
                  "scope": 1161,
                  "src": "5168:979:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1162,
              "src": "66:6084:1",
              "usedErrors": []
            }
          ],
          "src": "39:6111:1"
        },
        "id": 1
      },
      "contracts/libs/Context.sol": {
        "ast": {
          "absolutePath": "contracts/libs/Context.sol",
          "exportedSymbols": {
            "Context": [
              1187
            ]
          },
          "id": 1188,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1163,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:23:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1187,
              "linearizedBaseContracts": [
                1187
              ],
              "name": "Context",
              "nameLocation": "84:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1174,
                    "nodeType": "Block",
                    "src": "169:45:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1170,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "195:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "195:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "187:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1168,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "187:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "187:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "functionReturnParameters": 1167,
                        "id": 1173,
                        "nodeType": "Return",
                        "src": "180:26:2"
                      }
                    ]
                  },
                  "id": 1175,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "108:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1164,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "118:2:2"
                  },
                  "returnParameters": {
                    "id": 1167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1166,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1175,
                        "src": "152:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1165,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "152:15:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "151:17:2"
                  },
                  "scope": 1187,
                  "src": "99:115:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1185,
                    "nodeType": "Block",
                    "src": "287:168:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1180,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "298:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Context_$1187",
                            "typeString": "contract Context"
                          }
                        },
                        "id": 1181,
                        "nodeType": "ExpressionStatement",
                        "src": "298:4:2"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 1182,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "439:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "439:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1179,
                        "id": 1184,
                        "nodeType": "Return",
                        "src": "432:15:2"
                      }
                    ]
                  },
                  "id": 1186,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "231:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1176,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "239:2:2"
                  },
                  "returnParameters": {
                    "id": 1179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1178,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1186,
                        "src": "273:12:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1177,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "273:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "272:14:2"
                  },
                  "scope": 1187,
                  "src": "222:233:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1188,
              "src": "66:392:2",
              "usedErrors": []
            }
          ],
          "src": "39:419:2"
        },
        "id": 2
      },
      "contracts/libs/IERC20.sol": {
        "ast": {
          "absolutePath": "contracts/libs/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1256
            ]
          },
          "id": 1257,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1189,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1256,
              "linearizedBaseContracts": [
                1256
              ],
              "name": "IERC20",
              "nameLocation": "76:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "18160ddd",
                  "id": 1194,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "101:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1190,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "112:2:3"
                  },
                  "returnParameters": {
                    "id": 1193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1192,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1194,
                        "src": "138:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1191,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "138:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "137:9:3"
                  },
                  "scope": 1256,
                  "src": "92:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 1201,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "162:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1196,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "180:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1201,
                        "src": "172:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1195,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "172:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "171:17:3"
                  },
                  "returnParameters": {
                    "id": 1200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1199,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1201,
                        "src": "212:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "212:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "211:9:3"
                  },
                  "scope": 1256,
                  "src": "153:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 1210,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "236:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1206,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1203,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "253:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "245:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "245:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1205,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "272:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "264:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "264:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "244:35:3"
                  },
                  "returnParameters": {
                    "id": 1209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1208,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "298:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1207,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "298:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "297:6:3"
                  },
                  "scope": 1256,
                  "src": "227:77:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "dd62ed3e",
                  "id": 1219,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "319:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1212,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "337:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1219,
                        "src": "329:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "329:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1214,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "352:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1219,
                        "src": "344:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1213,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "344:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "328:32:3"
                  },
                  "returnParameters": {
                    "id": 1218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1217,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1219,
                        "src": "384:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1216,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "384:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "383:9:3"
                  },
                  "scope": 1256,
                  "src": "310:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "095ea7b3",
                  "id": 1228,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "408:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1221,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "424:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1228,
                        "src": "416:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1223,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "441:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1228,
                        "src": "433:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1222,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "433:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "415:33:3"
                  },
                  "returnParameters": {
                    "id": 1227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1226,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1228,
                        "src": "467:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1225,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "467:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "466:6:3"
                  },
                  "scope": 1256,
                  "src": "399:74:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 1239,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "488:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1230,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "509:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "501:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1229,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "501:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1232,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "525:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "517:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1231,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "517:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1234,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "544:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "536:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1233,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "536:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "500:51:3"
                  },
                  "returnParameters": {
                    "id": 1238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1237,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "570:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1236,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "570:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "569:6:3"
                  },
                  "scope": 1256,
                  "src": "479:97:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 1247,
                  "name": "Transfer",
                  "nameLocation": "588:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1241,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "613:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1247,
                        "src": "597:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1240,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "597:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1243,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "635:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1247,
                        "src": "619:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1242,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "619:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1245,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "647:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1247,
                        "src": "639:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "639:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "596:57:3"
                  },
                  "src": "582:72:3"
                },
                {
                  "anonymous": false,
                  "id": 1255,
                  "name": "Approval",
                  "nameLocation": "666:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1249,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "691:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "675:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1248,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "675:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1251,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "714:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "698:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1250,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "698:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1253,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "731:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "723:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1252,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "723:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "674:63:3"
                  },
                  "src": "660:78:3"
                }
              ],
              "scope": 1257,
              "src": "66:675:3",
              "usedErrors": []
            }
          ],
          "src": "39:702:3"
        },
        "id": 3
      },
      "contracts/libs/SafeMath.sol": {
        "ast": {
          "absolutePath": "contracts/libs/SafeMath.sol",
          "exportedSymbols": {
            "SafeMath": [
              1451
            ]
          },
          "id": 1452,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1258,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeMath",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 1451,
              "linearizedBaseContracts": [
                1451
              ],
              "name": "SafeMath",
              "nameLocation": "73:8:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1283,
                    "nodeType": "Block",
                    "src": "395:114:4",
                    "statements": [
                      {
                        "assignments": [
                          1269
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1269,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "414:1:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1283,
                            "src": "406:9:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1268,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "406:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1273,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1270,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1261,
                            "src": "418:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1271,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1263,
                            "src": "422:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "418:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "406:17:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1275,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1269,
                                "src": "442:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1276,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1261,
                                "src": "447:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "442:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                              "id": 1278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "450:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              },
                              "value": "SafeMath: addition overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              }
                            ],
                            "id": 1274,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "434:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "434:46:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1280,
                        "nodeType": "ExpressionStatement",
                        "src": "434:46:4"
                      },
                      {
                        "expression": {
                          "id": 1281,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1269,
                          "src": "500:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1267,
                        "id": 1282,
                        "nodeType": "Return",
                        "src": "493:8:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1259,
                    "nodeType": "StructuredDocumentation",
                    "src": "89:233:4",
                    "text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
                  },
                  "id": 1284,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nameLocation": "337:3:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1261,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "349:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1284,
                        "src": "341:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1260,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "341:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1263,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "360:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1284,
                        "src": "352:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1262,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "352:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "340:22:4"
                  },
                  "returnParameters": {
                    "id": 1267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1266,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1284,
                        "src": "386:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "386:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "385:9:4"
                  },
                  "scope": 1451,
                  "src": "328:181:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1300,
                    "nodeType": "Block",
                    "src": "859:69:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1295,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1287,
                              "src": "881:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1296,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1289,
                              "src": "884:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                              "id": 1297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "887:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              },
                              "value": "SafeMath: subtraction overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              }
                            ],
                            "id": 1294,
                            "name": "sub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1301,
                              1329
                            ],
                            "referencedDeclaration": 1329,
                            "src": "877:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "877:43:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1293,
                        "id": 1299,
                        "nodeType": "Return",
                        "src": "870:50:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1285,
                    "nodeType": "StructuredDocumentation",
                    "src": "517:269:4",
                    "text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
                  },
                  "id": 1301,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "801:3:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1287,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "813:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1301,
                        "src": "805:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1286,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "805:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1289,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "824:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1301,
                        "src": "816:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1288,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "816:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "804:22:4"
                  },
                  "returnParameters": {
                    "id": 1293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1292,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1301,
                        "src": "850:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1291,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "850:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "849:9:4"
                  },
                  "scope": 1451,
                  "src": "792:136:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1328,
                    "nodeType": "Block",
                    "src": "1326:97:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1314,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1306,
                                "src": "1345:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1315,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1304,
                                "src": "1350:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1345:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1317,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1308,
                              "src": "1353:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1313,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1337:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1337:29:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1319,
                        "nodeType": "ExpressionStatement",
                        "src": "1337:29:4"
                      },
                      {
                        "assignments": [
                          1321
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1321,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "1385:1:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1328,
                            "src": "1377:9:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1320,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1377:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1325,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1322,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1304,
                            "src": "1389:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1323,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1306,
                            "src": "1393:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1389:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1377:17:4"
                      },
                      {
                        "expression": {
                          "id": 1326,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1321,
                          "src": "1414:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1312,
                        "id": 1327,
                        "nodeType": "Return",
                        "src": "1407:8:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1302,
                    "nodeType": "StructuredDocumentation",
                    "src": "936:289:4",
                    "text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
                  },
                  "id": 1329,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "1240:3:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1309,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1304,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "1252:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1329,
                        "src": "1244:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1303,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1244:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1306,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "1263:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1329,
                        "src": "1255:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1305,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1255:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1308,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "1280:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1329,
                        "src": "1266:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1307,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1243:50:4"
                  },
                  "returnParameters": {
                    "id": 1312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1311,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1329,
                        "src": "1317:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1310,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1317:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1316:9:4"
                  },
                  "scope": 1451,
                  "src": "1231:192:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1363,
                    "nodeType": "Block",
                    "src": "1749:404:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1339,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1332,
                            "src": "1985:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1990:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1985:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1345,
                        "nodeType": "IfStatement",
                        "src": "1981:47:4",
                        "trueBody": {
                          "id": 1344,
                          "nodeType": "Block",
                          "src": "1993:35:4",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 1342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2015:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 1338,
                              "id": 1343,
                              "nodeType": "Return",
                              "src": "2008:8:4"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1347
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1347,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "2048:1:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1363,
                            "src": "2040:9:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1346,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2040:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1351,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1348,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1332,
                            "src": "2052:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1349,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1334,
                            "src": "2056:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2052:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2040:17:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1353,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1347,
                                  "src": "2076:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 1354,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1332,
                                  "src": "2080:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2076:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1356,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1334,
                                "src": "2085:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2076:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                              "id": 1358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2088:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              },
                              "value": "SafeMath: multiplication overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              }
                            ],
                            "id": 1352,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2068:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2068:56:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1360,
                        "nodeType": "ExpressionStatement",
                        "src": "2068:56:4"
                      },
                      {
                        "expression": {
                          "id": 1361,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1347,
                          "src": "2144:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1338,
                        "id": 1362,
                        "nodeType": "Return",
                        "src": "2137:8:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1330,
                    "nodeType": "StructuredDocumentation",
                    "src": "1431:245:4",
                    "text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
                  },
                  "id": 1364,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nameLocation": "1691:3:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1335,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1332,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "1703:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1364,
                        "src": "1695:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1331,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1695:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1334,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "1714:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1364,
                        "src": "1706:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1333,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1706:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1694:22:4"
                  },
                  "returnParameters": {
                    "id": 1338,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1337,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1364,
                        "src": "1740:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1336,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1740:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1739:9:4"
                  },
                  "scope": 1451,
                  "src": "1682:471:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1380,
                    "nodeType": "Block",
                    "src": "2696:65:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1375,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1367,
                              "src": "2718:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1376,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1369,
                              "src": "2721:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                              "id": 1377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2724:28:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              },
                              "value": "SafeMath: division by zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              }
                            ],
                            "id": 1374,
                            "name": "div",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1381,
                              1409
                            ],
                            "referencedDeclaration": 1409,
                            "src": "2714:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 1378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2714:39:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1373,
                        "id": 1379,
                        "nodeType": "Return",
                        "src": "2707:46:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1365,
                    "nodeType": "StructuredDocumentation",
                    "src": "2161:462:4",
                    "text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 1381,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "2638:3:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1367,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "2650:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1381,
                        "src": "2642:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2642:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1369,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "2661:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1381,
                        "src": "2653:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1368,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2641:22:4"
                  },
                  "returnParameters": {
                    "id": 1373,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1372,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1381,
                        "src": "2687:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1371,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2687:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2686:9:4"
                  },
                  "scope": 1451,
                  "src": "2629:132:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1408,
                    "nodeType": "Block",
                    "src": "3352:183:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1394,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1386,
                                "src": "3371:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3375:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3371:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1397,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1388,
                              "src": "3378:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1393,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3363:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3363:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1399,
                        "nodeType": "ExpressionStatement",
                        "src": "3363:28:4"
                      },
                      {
                        "assignments": [
                          1401
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1401,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "3410:1:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1408,
                            "src": "3402:9:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1400,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3402:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1405,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1402,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1384,
                            "src": "3414:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1403,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1386,
                            "src": "3418:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3414:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3402:17:4"
                      },
                      {
                        "expression": {
                          "id": 1406,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1401,
                          "src": "3526:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1392,
                        "id": 1407,
                        "nodeType": "Return",
                        "src": "3519:8:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1382,
                    "nodeType": "StructuredDocumentation",
                    "src": "2769:482:4",
                    "text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 1409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "3266:3:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1384,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "3278:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1409,
                        "src": "3270:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1383,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3270:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1386,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "3289:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1409,
                        "src": "3281:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1385,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3281:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1388,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "3306:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1409,
                        "src": "3292:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1387,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3292:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3269:50:4"
                  },
                  "returnParameters": {
                    "id": 1392,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1391,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1409,
                        "src": "3343:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1390,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3343:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3342:9:4"
                  },
                  "scope": 1451,
                  "src": "3257:278:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1425,
                    "nodeType": "Block",
                    "src": "4067:63:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1420,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1412,
                              "src": "4089:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1421,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1414,
                              "src": "4092:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
                              "id": 1422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4095:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                                "typeString": "literal_string \"SafeMath: modulo by zero\""
                              },
                              "value": "SafeMath: modulo by zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                                "typeString": "literal_string \"SafeMath: modulo by zero\""
                              }
                            ],
                            "id": 1419,
                            "name": "mod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1426,
                              1450
                            ],
                            "referencedDeclaration": 1450,
                            "src": "4085:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 1423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4085:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1418,
                        "id": 1424,
                        "nodeType": "Return",
                        "src": "4078:44:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1410,
                    "nodeType": "StructuredDocumentation",
                    "src": "3543:451:4",
                    "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 1426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nameLocation": "4009:3:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1412,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "4021:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1426,
                        "src": "4013:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1411,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1414,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "4032:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1426,
                        "src": "4024:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1413,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4024:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4012:22:4"
                  },
                  "returnParameters": {
                    "id": 1418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1426,
                        "src": "4058:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4058:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4057:9:4"
                  },
                  "scope": 1451,
                  "src": "4000:130:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1449,
                    "nodeType": "Block",
                    "src": "4710:71:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1439,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1431,
                                "src": "4729:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4734:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4729:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1442,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1433,
                              "src": "4737:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1438,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4721:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4721:29:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1444,
                        "nodeType": "ExpressionStatement",
                        "src": "4721:29:4"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1445,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1429,
                            "src": "4768:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 1446,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1431,
                            "src": "4772:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4768:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1437,
                        "id": 1448,
                        "nodeType": "Return",
                        "src": "4761:12:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1427,
                    "nodeType": "StructuredDocumentation",
                    "src": "4138:471:4",
                    "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 1450,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nameLocation": "4624:3:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1434,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1429,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "4636:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1450,
                        "src": "4628:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1428,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4628:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1431,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "4647:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1450,
                        "src": "4639:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4639:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1433,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "4664:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1450,
                        "src": "4650:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1432,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4650:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4627:50:4"
                  },
                  "returnParameters": {
                    "id": 1437,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1436,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1450,
                        "src": "4701:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1435,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4701:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4700:9:4"
                  },
                  "scope": 1451,
                  "src": "4615:166:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1452,
              "src": "65:4719:4",
              "usedErrors": []
            }
          ],
          "src": "37:4747:4"
        },
        "id": 4
      }
    }
  }
}
